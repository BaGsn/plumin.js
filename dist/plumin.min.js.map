{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/es6-object-assign/src/index.js","node_modules/opentype.js/dist/opentype.js","node_modules/paper/dist/paper-core.js","src/Collection.js","src/Font.js","src/Glyph.js","src/Node.js","src/Outline.js","src/Path.js","src/plumin.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","plumin","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"assign","target","firstSource","undefined","TypeError","to","Object","arguments","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","polyfill","defineProperty","configurable","writable","value","opentype","TINF_OK","TINF_DATA_ERROR","Tree","table","Uint16Array","trans","Data","source","dest","sourceIndex","tag","bitcount","destLen","ltree","dtree","sltree","sdtree","length_bits","Uint8Array","length_base","dist_bits","dist_base","clcidx","code_tree","lengths","tinf_build_bits_base","bits","base","delta","first","sum","tinf_build_fixed_trees","lt","dt","offs","tinf_build_tree","off","num","tinf_getbit","d","bit","tinf_read_bits","val","tinf_decode_symbol","cur","tinf_decode_trees","hlit","hdist","hclen","clen","sym","prev","tinf_inflate_block_data","dist","tinf_inflate_uncompressed_block","invlength","tinf_uncompress","bfinal","res","btype","slice","subarray",2,"argument","predicate","message","assert",3,"line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke",4,"cffStandardStrings","cffStandardEncoding","cffExpertEncoding","standardNames","DefaultEncoding","font","prototype","charToGlyphIndex","c","charCodeAt","glyphs","glyph","get","j","unicodes","CmapEncoding","cmap","glyphIndexMap","CffEncoding","encoding","charset","charName","indexOf","GlyphNames","post","version","names","Array","numberOfGlyphs","glyphNameIndex","nameToGlyphIndex","name","glyphIndexToName","gid","addGlyphNames","tables","charCodes","glyphIndex","addUnicode","parseInt","cffEncoding","glyphNames",5,"path","sfnt","glyphset","util","Font","options","empty","checkArgument","familyName","styleName","unitsPerEm","ascender","descender","fontFamily","en","fontSubfamily","fullName","postScriptName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","supported","GlyphSet","hasChar","charToGlyph","stringToGlyphs","push","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","index","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","text","x","y","fontSize","callback","kerning","fontScale","advanceWidth","kerningValue","getPath","fullPath","Path","gX","gY","gFontSize","glyphPath","extend","getPaths","glyphPaths","draw","drawPoints","drawMetrics","getEnglishName","translations","validate","warnings","_this","assertNamePresent","englishName","trim","toTables","fontToTable","toBuffer","console","warn","toArrayBuffer","sfntTable","bytes","encode","buffer","ArrayBuffer","intArray","download","fileName","replace","arrayBuffer","isBrowser","requestFileSystem","webkitRequestFileSystem","TEMPORARY","byteLength","fs","root","getFile","create","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","type","write","addEventListener","location","href","toURL","err","arrayBufferToNodeBuffer","writeFileSync","./encoding","./glyphset","./path","./tables/sfnt","./util",6,"check","getPathDefinition","_path","commands","set","p","Glyph","bindConstructorValues","unicode","xMin","yMin","xMax","yMax","scale","cmd","quadraticCurveTo","curveTo","closePath","getContours","points","contours","currentContour","pt","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","Math","min","apply","max","leftSideBearing","isFinite","rightSideBearing","drawCircles","PI_SQ","PI","arc","fill","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw",7,"_glyph","isArray","loader","glyphLoader","ttfGlyphLoader","parseGlyph","data","position","buildPath","cffGlyphLoader","parseCFFCharstring","charstring","./glyph",8,"inflate","_font","parse","cff","fvar","glyf","gpos","head","hhea","hmtx","kern","ltag","loca","maxp","_name","os2","loadFromFile","readFile","nodeBufferToArrayBuffer","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseOpenTypeTableEntries","numTables","tableEntries","getTag","offset","getULong","compression","parseWOFFTableEntries","compLength","origLength","compressedLength","originalLength","uncompressTable","tableEntry","inBuffer","outBuffer","view","parseBuffer","indexToLocFormat","ltagTable","signature","String","fromCharCode","outlinesFormat","getUShort","flavor","cffTableEntry","fvarTableEntry","glyfTableEntry","gposTableEntry","hmtxTableEntry","kernTableEntry","locaTableEntry","nameTableEntry","numberOfHMetrics","numGlyphs","nameTable","shortVersion","locaTable","locaOffsets","glyfTable","cffTable","hmtxTable","kernTable","gposTable","fvarTable","load","isNode","loadFn","loadSync","readFileSync","_parse","./font","./parse","./tables/cff","./tables/cmap","./tables/fvar","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/ltag","./tables/maxp","./tables/name","./tables/os2","./tables/post","tiny-inflate",9,"getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","getFixed","decimal","fraction","getInt8","getOffset","offSize","v","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","count","offsets","parseString","string","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount",10,"strokeWidth","bezierCurveTo","quadTo","close","pathOrCommands","toPathData","decimalPlaces","floatToString","round","toFixed","packValues","toSVG","svg",11,"sizeOf","Table","tableName","fields","field","optionKeys","k","sizeOfFunction","TABLE","./types",12,"equals","b","parseCFFIndex","start","conversionFn","objects","objectOffset","offsetSize","pos","parseFloatOperand","parser","eof","lookup","n1","n2","parseFloat","parseOperand","b0","b1","b2","b3","b4","entriesToObject","entries","key","values","hasOwnProperty","parseCFFDict","size","operands","op","getCFFString","strings","interpretDict","dict","meta","newDict","m","parseCFFHeader","header","formatMajor","formatMinor","TOP_DICT_META","PRIVATE_DICT_META","parseCFFTopDict","parseCFFPrivateDict","parseCFFCharset","nGlyphs","sid","format","parseCFFEncoding","enc","nCodes","nRanges","nLeft","c1x","c1y","c2x","c2y","stack","nStems","haveWidth","width","defaultWidthX","newContour","parseStems","hasWidthArg","shift","nominalWidthX","codeIndex","subrCode","jpx","jpy","c3x","c3y","c4x","c4y","pop","subrsBias","subrs","abs","log","gsubrsBias","gsubrs","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDictData","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charStringsIndex","charStrings","charString","encodeString","makeHeader","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","ops","dx","dy","_13","_23","dx1","dy1","dx2","dy2","makeCharStringsIndex","makePrivateDict","makeCFFTable","weight","weightName","fontBBox","fontMatrix","private","privateAttrs","charsets","make","../encoding","../glyphset","../parse","../path","../table",13,"parseCmapTable","platformId","encodingId","language","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","addSegment","segments","end","addTerminatorSegment","makeCmapTable","sort","segCountX2","searchRange","pow","floor","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","concat","glyphId","../check",14,"addName","nameString","JSON","stringify","nameID","nameKey","makeFvarAxis","axis","minValue","defaultValue","maxValue","parseFvarAxis","makeFvarInstance","inst","axes","axisTag","coordinates","parseFvarInstance","makeFvarTable","result","instances","offsetToData","parseFvarTable","tableVersion","axisCount","axisSize","instanceCount","instanceSize","instanceStart",15,"parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","numberOfContours","flags","endPointIndices","instructionLength","instructions","numberOfCoordinates","repeatCount","point","onCurve","px","py","isComposite","components","moreComponents","component","xScale","scale01","scale10","yScale","transformPoints","transform","newPoints","newPt","contour","firstPt","lastPt","curvePt","realFirstPoint","prevPt","midPt","componentGlyph","transformedPoints","parseGlyfTable","nextOffset",16,"parseTaggedListTable","list","parseCoverageTable","coverage","begin","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","coverageOffset","valueFormat1","valueFormat2","value1","value2","sharedPairSets","pairSetCount","pairSet","pairSetOffsets","firstGlyph","pairSetOffset","sharedPairSet","pairValueCount","secondGlyph","pairs","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","markFilteringSet","subtables","parseGposTable","lookupListOffset","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset",17,"parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable",18,"parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable",19,"parseHmtxTable","numMetrics","makeHmtxTable",20,"parseKernTable","subTableVersion","nPairs","leftIndex","rightIndex",21,"parseLocaTable","parseFn","glyphOffsets","glyphOffset",22,"makeLtagTable","tags","stringPool","stringPoolOffset","parseLtagTable","numTags",23,"parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable",24,"types","decode","nameTableNames","macLanguages",0,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,"macLanguageToScript","windowsLanguages",1078,1052,1156,1118,5121,15361,3073,2049,11265,13313,12289,4097,6145,8193,16385,1025,10241,7169,14337,9217,1067,1101,2092,1068,1133,1069,1059,2117,1093,8218,5146,1150,1026,1027,3076,5124,2052,4100,1028,1155,1050,4122,1029,1030,1164,1125,2067,1043,3081,10249,4105,9225,16393,6153,8201,17417,5129,13321,18441,7177,11273,2057,1033,12297,1061,1080,1124,1035,2060,3084,1036,5132,6156,4108,1122,1110,1079,3079,1031,5127,4103,2055,1032,1135,1095,1128,1037,1081,1038,1039,1136,1057,1117,2141,2108,1076,1077,1040,2064,1041,1099,1087,1107,1158,1159,1089,1111,1042,1088,1108,1062,1063,2094,1134,1071,2110,1086,1100,1082,1153,1146,1102,1148,1104,2128,1121,1044,2068,1154,1096,1123,1045,1046,2070,1094,1131,2155,3179,1048,1047,1049,9275,4155,5179,3131,1083,2107,8251,6203,7227,1103,7194,3098,6170,2074,1132,1074,1115,1051,1060,11274,16394,13322,9226,5130,7178,12298,17418,4106,18442,2058,19466,6154,15370,10250,20490,3082,1034,21514,14346,8202,2077,1053,1114,1064,2143,1097,1092,1098,1054,1105,1055,1090,1152,1058,1070,1056,2115,1091,1066,1106,1160,1157,1144,1130,"getLanguageCode","platformID","languageID","utf16","macScriptEncodings","macLanguageEncodings","getEncoding","encodingID","parseNameTable","stringOffset","property","UTF16","MACSTRING","langTagCount","reverseDict","makeNameRecord","findSubArray","needle","haystack","needleLength","limit","loop","addStringToPool","pool","makeNameTable","nameIDs","namesWithNumericKeys","nameTableIds","id","macLanguageIds","windowsLanguageIds","nameRecords","lang","macPlatform","macLanguage","macScript","macEncoding","macName","macNameOffset","winLanguage","winName","winNameOffset","../types","unicodeRanges","getUnicodeRange","range","parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table","parsePostTable","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","nameLength","makePostTable","log2","computeCheckSum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","isNaN","r1","r2","metricsForChar","chars","notFoundMetrics","average","vs","fontToSfntTable","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","firstCharIndex","lastCharIndex","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","os2Table","cmapTable","englishFamilyName","englishStyleName","englishFullName","uniqueID","preferredFamily","preferredSubfamily","languageTags","postTable","checkSumAdjusted","./cff","./cmap","./head","./hhea","./hmtx","./ltag","./maxp","./name","./os2","./post","LIMIT16","LIMIT32","constant","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","REAL","toString","exec","epsilon","nibbles","ii","out","substr","NAME","STRING","numBytes","codePoints","numChars","codepoint","eightBitMacEncodings","x-mac-croatian","x-mac-cyrillic","x-mac-gaelic","x-mac-greek","x-mac-icelandic","x-mac-inuit","x-mac-ce","macintosh","x-mac-romanian","x-mac-turkish","dataLength","macEncodingTableCache","WeakMap","macEncodingCacheKeys","getMacEncodingTable","cacheKey","cachedTable","decodingTable","encodingTable","str","INDEX","dataSize","OBJECT","encodedOffsets","offsetEncoder","encodedOffset","DICT","OPERAND","OPERATOR","OP","wmm","CHARSTRING","cachedValue","encodingFunction","LITERAL","ab","Buffer","expression","paper","noCanvas","process","browser","WorkerGlobalScope","Base","hidden","forEach","iter","bind","forIn","proto","__proto__","describe","obj","__lookupGetter__","__lookupSetter__","_define","__defineGetter__","__defineSetter__","inject","src","beans","preserve","beansNames","substring","isFunc","bean","match","toLowerCase","isPlainObject","test","part","each","getLength","props","exclude","statics","ctor","initialize","clone","constructor","pick","_id","_class","Formatter","instance","number","join","getClassName","exportJSON","toJSON","serialize","_set","dontCheck","_filtering","obj1","obj2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","precision","definitions","references","add","item","ref","unshift","_serialize","_compact","deserialize","json","_data","_isDictionary","isRoot","isDictionary","args","importJSON","isTarget","Item","Layer","insert","splice","items","remove","append","_index","removed","capitalize","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","func","_eventTypes","handlers","_callbacks","install","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","support","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","agent","navigator","userAgent","platform","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","sqrt","EPSILON","MACHINE_EPSILON","clip","TOLERANCE","CURVETIME_EPSILON","GEOMETRIC_EPSILON","WINDING_EPSILON","TRIGONOMETRIC_EPSILON","CLIPPING_EPSILON","KAPPA","isZero","integrate","w","A","B","Ax","findRoot","df","tolerance","fx","nx","solveQuadratic","roots","eMin","eMax","Infinity","D","gmC","mult","LOG10E","Q","R","solveCubic","c2","ec","x0","q","qd","tmp","UID","_pools","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","atan2","div","NaN","dot","acos","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","subtract","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isCollinear","isColinear","isOrthogonal","point1","point2","random","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","d2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","p1x","p1y","v1x","v1y","p2x","p2y","v2x","v2y","u1","u2","uMin","uMax","vx","vy","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","_drawSelection","Symbol","dontCenter","setDefinition","_definition","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","parent","setParent","_installEvent","_uninstallEvent","onFrame","_animateItem","onLoad","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","orig","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","_updateBoundsCache","child","setBounds","cache","cached","_internal","_boundsCache","ids","other","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","includeMatrix","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","raster","Raster","canvas","setCanvas","_contains","getInternalBounds","_asPathItem","getIntersections","guides","parentTotalMatrix","_totalMatrix","totalMatrix","tolerancePadding","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","class","checkBounds","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matches","compare","matchObject","RegExp","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","reduce","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isSibling","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","toCanvasStyle","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","getViewMatrix","normalBlend","nativeBlend","direct","dontStart","_canComposite","mainCtx","itemOffset","prevOffset","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","crossOrigin","object","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","_crossOrigin","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","context","toDataURL","loaded","update","document","getElementById","Image","setTimeout","DomEvent","getCrossOrigin","setCrossOrigin","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","hasHandles","_point","_handleIn","_handleOut","curves","_curves","curve","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","clearHandles","_selectionState","state","oldState","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","getNext","getPrevious","isFirst","isLast","inX","inY","reversed","removeSegment","interpolate","segment0","segment1","coef","dxPoint","dyPoint","dxHandleIn","dyHandleIn","dxHandleOut","dyHandleOut","change","Curve","arg6","arg7","seg1","seg2","handle1","handle2","segment2","_segment2","getPoint1","getHandle1","getHandle2","getPoint2","_length","setPoint1","setPoint2","setHandle1","setHandle2","getSegment1","getSegment2","getPoints","getLine","getPart","getPartLength","_getIntersections","_getParameter","isParameter","parameter","getParameterAt","_setHandles","tMin","tMax","subdivide","setHandles","split","p1","h1","h2","p2","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","geomEpsilon","getNearestParameter","isStraight","minDist","minT","refine","step","flip","isFlatEnough","ux","uy","h1x","h1y","h2x","h2y","_addBounds","v0","v3","padding","isLinear","third","isHorizontal","getTangentAt","isVertical","getLocationAt","getLocationOf","getOffsetOf","loc","getNearestLocation","getNearestPoint","methods","evaluateMethods","getLengthIntegrand","ax","bx","ay","by","getIterations","evaluate","normalized","ds","forward","rangeLength","guess","getTangent","getWeightedTangent","getNormal","getWeightedNormal","getCurvature","addLocation","locations","t1","t2","overlap","startConnected","endConnected","renormalize","loc1","loc2","_intersection","addCurveIntersections","oldTDiff","recursion","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","hull","getConvexHull","tMinClip","tMaxClip","clipConvexHull","tDiff","tMinNew","tMaxNew","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","distRatio","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rvc","tc","pc","tl","pl","addLineIntersection","_getSelfIntersection","c1p1x","c1p1y","c1p2x","c1p2y","c2p1x","c2p1y","c2p2x","c2p2y","c1s1x","c1s1y","c1s2x","c1s2y","c2s1x","c2s1y","c2s2x","c2s2y","overlaps","getOverlaps","straight1","straight2","straight","before","c1p1","c1p2","c2p1","c2p2","side1","side2","edgeSum","ac","bc","tSplit","maxCurvature","curvature","getCurvatureAt","timeEpsilon","getLineLengthSquared","l1","l2","o1","o2","_overlap","_distance","_setCurve","_parameter","getPointAt","_next","_prev","_version","_curve","_segment","_setSegment","getSegment","getParameter","_offset","trySegment","getCurveOffset","getIntersection","_ignoreOther","diff","isTouching","inter","curve1","curve2","isCrossing","c4","c3","isInRange","a3","a4","isOverlap","merge","search","found","path1","path2","expanded","_returnFirst","matrix1","matrix2","curves1","curves2","length1","length2","values2","arrays","values1","getCrossings","setPathData","relative","previous","control","getCoord","command","lower","move","cubicCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_area","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","curX","curY","prevX","prevY","outX","outY","skipLine","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","last","area","isClockwise","setClockwise","clockwise","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","simplify","fitter","PathFitter","fit","last1","last2","first1","first2","toShape","topCenter","seg3","seg4","isArc","pt1","pt2","shape","numSegments","strokePadding","cap","hitStroke","hitFill","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","_addBevelJoin","_addSquareCap","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","knots","f1","f2","ie","je","getCurrentSegment","moveBy","through","extent","vector","middle","large","rxSq","rySq","xSq","ySq","throughSide","centerSide","ext","inc","z","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","prevCoords","processSegment","joinBounds","addRound","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","paths","getCurrentPath","operators","preparePath","resolve","resolveCrossings","reorient","finishBoolean","computeBoolean","operation","computeOpenBoolean","_path1","_path2","crossings","divideLocations","monoCurves","collect","_getMonoCurves","propagateWinding","_winding","tracePaths","sub","addPath","linkIntersections","noHandles","clearSegments","prevCurve","prevT","origT","getWinding","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","startCounted","slope","counted","totalLength","windingSum","node","curveLength","otherStart","operator","overlapWinding","isValid","adjusted","_visited","isStart","findBestIntersection","strict","nextSeg","nextInter","findStartSegment","finished","firstSegment","error","insertCurve","y0","handleCurve","y3","getInteriorPoint","xIntercepts","counters","maxRecursion","minDifference","addCurve","computeParts","maxT","halfT","prevVal","prevLen","weighted","fitCubic","tan1","tan2","uPrime","chordLengthParameterize","maxError","parametersInOrder","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","detC0C1","alpha1","alpha2","detC0X","detXC1","c0","segLength","eps","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","gray","rgb","hsb","hsl","gradient","componentParsers","colorCache","colorCtx","fromCSS","hsbIndices","converters","rgb-hsb","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","t3","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","_stops","origin","destination","canvasGradient","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","nativeRequest","requested","callbacks","focused","timer","focus","blur","handleCallbacks","setInterval","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","getCanvasSize","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","animate","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tool","prevFocus","tempFocus","dragging","handleMouseMove","_handleEvent","mousedown","mousemove","mouseup","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","mouseFlags","mousedrag","click","doubleclick","mouseenter","mouseleave","_eventCounters","HTMLCanvasElement","deviceRatio","backingStoreRatio","firefox","parentNode","temp","createElement","removeChild","prevFont","measureText","force","downPoint","lastPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","callEvent","mouseEvent","MouseEvent","isStopped","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","specialKeys",224,"specialChars","option","capsLock","space","charCodeMap","keyMap","commandFixMap","downCode","handleKey","keyCode","charCode","specialKey","mac","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","method","async","xhr","ActiveXObject","overrideMimeType","onreadystatechange","readyState","responseText","canvases","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","attribute","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","namespace","setAttributeNS","createElementNS","getTransform","exportGroup","childNode","exportSVG","clip-path","exportRaster","embedImages","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","exporters","applyStyle","visibility","svgs","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","nodes","childNodes","isClip","currentStyle","applyAttributes","querySelectorAll","importSVG","importPoly","importPath","pathData","importGradient","isRadial","importers","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","applyTransform","transforms","applyOpacity","attributes","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","styles","group","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","onImport","expandShapes","Collection","cb","wrapConstructor","useConstructed","wrapper","arr","params","rconstructor","constructorFilter","unwrapArg","isPlural","unwrapArgs","proxy","methodNames","getOwnPropertyNames","filter","plural","fontinfo","ot","glyphMap","charMap","altMap","_subset","fontMap","addGlyph","addGlyphs","fonts","styleElement","styleSheet","styleSheets","ss","ownerNode","_lastSubset","normalizeSubset","lastIndexOf","getGlyphSubset","subset","setAlternateFor","font0","font1","updateSVGData","updateOTCommands","merged","updateOT","shouldUpdateCommands","importOT","otFont","otGlyph","_URL","URL","webkitURL","addToFonts","enFamilyName","delete","fontface","FontFace","createObjectURL","fontObjectURL","revokeObjectURL","deleteRule","insertRule","triggerDownload","onloadend","dispatchEvent","readAsDataURL","user","fetch","headers","Content-Type","then","bufferToDownload","Outline","anchors","parentAnchors","addAnchor","addAnchors","addParentAnchor","glyph0","glyph1","svgData","addContour","fromPath","outline0","outline1","defineProperties","firstNode","lastNode","_updateData","pushSimple","pushBezier","exportReversed","ctrl1","ctrl2","Node"],"mappings":"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AAA,QACAC,MAAA,QACAC,KAAA,QACAC,KAAA,KACAC,MAAA,QACAC,KAAA,KACAC,KAAA,KACAC,KAAA,MACAC,KAAA,KACAC,KAAA,QACAC,KAAA,QACAC,KAAA,KACAC,KAAA,QACAC,KAAA,QACAC,KAAA,QACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,QACAC,KAAA,KACAC,KAAA,QACAC,KAAA,QACAC,KAAA,QACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,UACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,QACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,MACAC,KAAA,KACAC,KAAA,KACAC,KAAA,MACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,MACAC,KAAA,KACAC,KAAA,KACAC,KAAA,QACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,MACAC,KAAA,KACAC,KAAA,MACAC,KAAA,KACAC,KAAA,QACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,QACAC,KAAA,KACAC,KAAA,QACAC,KAAA,QACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,MACAC,KAAA,SACAC,KAAA,MACAC,KAAA,QACAC,KAAA,KACAC,KAAA,QACAC,KAAA,MACAC,KAAA,SACAC,KAAA,MACAC,KAAA,KACAC,KAAA,aACAC,KAAA,KACAC,KAAA,aACAC,KAAA,UACAC,KAAA,MACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,MAAA,QACAC,MAAA,QACAC,MAAA,QACAC,KAAA,QACAC,KAAA,QACAC,KAAA,QACAC,MAAA,QACAC,MAAA,QACAC,KA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A,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,KAAA9F,IAAA,OACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,MAAA9F,IAAA,QACA8F,MAAA,OAAA9F,IAAA,SACA8F,MAA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChnaxrjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"generated.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.opentype = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar TINF_OK = 0;\nvar TINF_DATA_ERROR = -3;\n\nfunction Tree() {\n  this.table = new Uint16Array(16);   /* table of code length counts */\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n}\n\nfunction Data(source, dest) {\n  this.source = source;\n  this.sourceIndex = 0;\n  this.tag = 0;\n  this.bitcount = 0;\n  \n  this.dest = dest;\n  this.destLen = 0;\n  \n  this.ltree = new Tree();  /* dynamic length/symbol tree */\n  this.dtree = new Tree();  /* dynamic distance tree */\n}\n\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */\n\nvar sltree = new Tree();\nvar sdtree = new Tree();\n\n/* extra bits and base tables for length codes */\nvar length_bits = new Uint8Array(30);\nvar length_base = new Uint16Array(30);\n\n/* extra bits and base tables for distance codes */\nvar dist_bits = new Uint8Array(30);\nvar dist_base = new Uint16Array(30);\n\n/* special ordering of code length codes */\nvar clcidx = new Uint8Array([\n  16, 17, 18, 0, 8, 7, 9, 6,\n  10, 5, 11, 4, 12, 3, 13, 2,\n  14, 1, 15\n]);\n\n/* used by tinf_decode_trees, avoids allocations every call */\nvar code_tree = new Tree();\nvar lengths = new Uint8Array(288 + 32);\n\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */\n\n/* build extra bits and base tables */\nfunction tinf_build_bits_base(bits, base, delta, first) {\n  var i, sum;\n\n  /* build bits table */\n  for (i = 0; i < delta; ++i) bits[i] = 0;\n  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;\n\n  /* build base table */\n  for (sum = first, i = 0; i < 30; ++i) {\n    base[i] = sum;\n    sum += 1 << bits[i];\n  }\n}\n\n/* build the fixed huffman trees */\nfunction tinf_build_fixed_trees(lt, dt) {\n  var i;\n\n  /* build fixed length tree */\n  for (i = 0; i < 7; ++i) lt.table[i] = 0;\n\n  lt.table[7] = 24;\n  lt.table[8] = 152;\n  lt.table[9] = 112;\n\n  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\n  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\n  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\n  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\n\n  /* build fixed distance tree */\n  for (i = 0; i < 5; ++i) dt.table[i] = 0;\n\n  dt.table[5] = 32;\n\n  for (i = 0; i < 32; ++i) dt.trans[i] = i;\n}\n\n/* given an array of code lengths, build a tree */\nvar offs = new Uint16Array(16);\n\nfunction tinf_build_tree(t, lengths, off, num) {\n  var i, sum;\n\n  /* clear code length count table */\n  for (i = 0; i < 16; ++i) t.table[i] = 0;\n\n  /* scan symbol lengths, and sum code length counts */\n  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;\n\n  t.table[0] = 0;\n\n  /* compute offset table for distribution sort */\n  for (sum = 0, i = 0; i < 16; ++i) {\n    offs[i] = sum;\n    sum += t.table[i];\n  }\n\n  /* create code->symbol translation table (symbols sorted by code) */\n  for (i = 0; i < num; ++i) {\n    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\n  }\n}\n\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */\n\n/* get one bit from source stream */\nfunction tinf_getbit(d) {\n  /* check if tag is empty */\n  if (!d.bitcount--) {\n    /* load next tag */\n    d.tag = d.source[d.sourceIndex++];\n    d.bitcount = 7;\n  }\n\n  /* shift bit out of tag */\n  var bit = d.tag & 1;\n  d.tag >>>= 1;\n\n  return bit;\n}\n\n/* read a num bit value from a stream and add base */\nfunction tinf_read_bits(d, num, base) {\n  if (!num)\n    return base;\n\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n\n  var val = d.tag & (0xffff >>> (16 - num));\n  d.tag >>>= num;\n  d.bitcount -= num;\n  return val + base;\n}\n\n/* given a data stream and a tree, decode a symbol */\nfunction tinf_decode_symbol(d, t) {\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n  \n  var sum = 0, cur = 0, len = 0;\n  var tag = d.tag;\n\n  /* get more bits while code value is above sum */\n  do {\n    cur = 2 * cur + (tag & 1);\n    tag >>>= 1;\n    ++len;\n\n    sum += t.table[len];\n    cur -= t.table[len];\n  } while (cur >= 0);\n  \n  d.tag = tag;\n  d.bitcount -= len;\n\n  return t.trans[sum + cur];\n}\n\n/* given a data stream, decode dynamic trees from it */\nfunction tinf_decode_trees(d, lt, dt) {\n  var hlit, hdist, hclen;\n  var i, num, length;\n\n  /* get 5 bits HLIT (257-286) */\n  hlit = tinf_read_bits(d, 5, 257);\n\n  /* get 5 bits HDIST (1-32) */\n  hdist = tinf_read_bits(d, 5, 1);\n\n  /* get 4 bits HCLEN (4-19) */\n  hclen = tinf_read_bits(d, 4, 4);\n\n  for (i = 0; i < 19; ++i) lengths[i] = 0;\n\n  /* read code lengths for code length alphabet */\n  for (i = 0; i < hclen; ++i) {\n    /* get 3 bits code length (0-7) */\n    var clen = tinf_read_bits(d, 3, 0);\n    lengths[clcidx[i]] = clen;\n  }\n\n  /* build code length tree */\n  tinf_build_tree(code_tree, lengths, 0, 19);\n\n  /* decode code lengths for the dynamic trees */\n  for (num = 0; num < hlit + hdist;) {\n    var sym = tinf_decode_symbol(d, code_tree);\n\n    switch (sym) {\n      case 16:\n        /* copy previous code length 3-6 times (read 2 bits) */\n        var prev = lengths[num - 1];\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\n          lengths[num++] = prev;\n        }\n        break;\n      case 17:\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      case 18:\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      default:\n        /* values 0-15 represent the actual code lengths */\n        lengths[num++] = sym;\n        break;\n    }\n  }\n\n  /* build dynamic trees */\n  tinf_build_tree(lt, lengths, 0, hlit);\n  tinf_build_tree(dt, lengths, hlit, hdist);\n}\n\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */\n\n/* given a stream and two trees, inflate a block of data */\nfunction tinf_inflate_block_data(d, lt, dt) {\n  while (1) {\n    var sym = tinf_decode_symbol(d, lt);\n\n    /* check for end of block */\n    if (sym === 256) {\n      return TINF_OK;\n    }\n\n    if (sym < 256) {\n      d.dest[d.destLen++] = sym;\n    } else {\n      var length, dist, offs;\n      var i;\n\n      sym -= 257;\n\n      /* possibly get more bits from length code */\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n      dist = tinf_decode_symbol(d, dt);\n\n      /* possibly get more bits from distance code */\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n      /* copy match */\n      for (i = offs; i < offs + length; ++i) {\n        d.dest[d.destLen++] = d.dest[i];\n      }\n    }\n  }\n}\n\n/* inflate an uncompressed block of data */\nfunction tinf_inflate_uncompressed_block(d) {\n  var length, invlength;\n  var i;\n  \n  /* unread from bitbuffer */\n  while (d.bitcount > 8) {\n    d.sourceIndex--;\n    d.bitcount -= 8;\n  }\n\n  /* get length */\n  length = d.source[d.sourceIndex + 1];\n  length = 256 * length + d.source[d.sourceIndex];\n\n  /* get one's complement of length */\n  invlength = d.source[d.sourceIndex + 3];\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n  /* check length */\n  if (length !== (~invlength & 0x0000ffff))\n    return TINF_DATA_ERROR;\n\n  d.sourceIndex += 4;\n\n  /* copy block */\n  for (i = length; i; --i)\n    d.dest[d.destLen++] = d.source[d.sourceIndex++];\n\n  /* make sure we start next block on a byte boundary */\n  d.bitcount = 0;\n\n  return TINF_OK;\n}\n\n/* inflate stream from source to dest */\nfunction tinf_uncompress(source, dest) {\n  var d = new Data(source, dest);\n  var bfinal, res;\n\n  do {\n    /* read final block flag */\n    bfinal = tinf_getbit(d);\n\n    /* read block type (2 bits) */\n    btype = tinf_read_bits(d, 2, 0);\n\n    /* decompress block */\n    switch (btype) {\n      case 0:\n        /* decompress uncompressed block */\n        res = tinf_inflate_uncompressed_block(d);\n        break;\n      case 1:\n        /* decompress block with fixed huffman trees */\n        res = tinf_inflate_block_data(d, sltree, sdtree);\n        break;\n      case 2:\n        /* decompress block with dynamic huffman trees */\n        tinf_decode_trees(d, d.ltree, d.dtree);\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n        break;\n      default:\n        res = TINF_DATA_ERROR;\n    }\n\n    if (res !== TINF_OK)\n      throw new Error('Data error');\n\n  } while (!bfinal);\n\n  if (d.destLen < d.dest.length) {\n    if (typeof d.dest.slice === 'function')\n      return d.dest.slice(0, d.destLen);\n    else\n      return d.dest.subarray(0, d.destLen);\n  }\n  \n  return d.dest;\n}\n\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */\n\n/* build fixed huffman trees */\ntinf_build_fixed_trees(sltree, sdtree);\n\n/* build extra bits and base tables */\ntinf_build_bits_base(length_bits, length_base, 4, 3);\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n/* fix a special case */\nlength_bits[28] = 0;\nlength_base[28] = 258;\n\nmodule.exports = tinf_uncompress;\n\n},{}],2:[function(require,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function(predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],3:[function(require,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],4:[function(require,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    var code = c.charCodeAt(0);\n    var glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs.get(i);\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    var code = s.charCodeAt(0);\n    var charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyph;\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs.get(glyphIndex);\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs.get(i);\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],5:[function(require,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = require('./path');\nvar sfnt = require('./tables/sfnt');\nvar encoding = require('./encoding');\nvar glyphset = require('./glyphset');\nvar util = require('./util');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n\n    if (!options.empty) {\n        // Check that we've provided the minimum set of names.\n        util.checkArgument(options.familyName, 'When creating a new Font object, familyName is required.');\n        util.checkArgument(options.styleName, 'When creating a new Font object, styleName is required.');\n        util.checkArgument(options.unitsPerEm, 'When creating a new Font object, unitsPerEm is required.');\n        util.checkArgument(options.ascender, 'When creating a new Font object, ascender is required.');\n        util.checkArgument(options.descender, 'When creating a new Font object, descender is required.');\n        util.checkArgument(options.descender < 0, 'Descender should be negative (e.g. -512).');\n\n        // OS X will complain if the names are empty, so we put a single space everywhere by default.\n        this.names = {\n            fontFamily: {en: options.familyName || ' '},\n            fontSubfamily: {en: options.styleName || ' '},\n            fullName: {en: options.fullName || options.familyName + ' ' + options.styleName},\n            postScriptName: {en: options.postScriptName || options.familyName + options.styleName},\n            designer: {en: options.designer || ' '},\n            designerURL: {en: options.designerURL || ' '},\n            manufacturer: {en: options.manufacturer || ' '},\n            manufacturerURL: {en: options.manufacturerURL || ' '},\n            license: {en: options.license || ' '},\n            licenseURL: {en: options.licenseURL || ' '},\n            version: {en: options.version || 'Version 0.1'},\n            description: {en: options.description || ' '},\n            copyright: {en: options.copyright || ' '},\n            trademark: {en: options.trademark || ' '}\n        };\n        this.unitsPerEm = options.unitsPerEm || 1000;\n        this.ascender = options.ascender;\n        this.descender = options.descender;\n    }\n\n    this.supported = true; // Deprecated: parseBuffer will throw an error if font is not supported.\n    this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function(c) {\n    var glyphIndex = this.charToGlyphIndex(c);\n    var glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function(s) {\n    var glyphs = [];\n    for (var i = 0; i < s.length; i += 1) {\n        var c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function(name) {\n    var glyphIndex = this.nametoGlyphIndex(name);\n    var glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    var kerning = options.kerning === undefined ? true : options.kerning;\n    var fontScale = 1 / this.unitsPerEm * fontSize;\n    var glyphs = this.stringToGlyphs(text);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (kerning && i < glyphs.length - 1) {\n            var kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n\n    return fullPath;\n};\n\n// Create an array of Path objects that represent the glyps of a given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns an array of Path objects.\nFont.prototype.getPaths = function(text, x, y, fontSize, options) {\n    var glyphPaths = [];\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        glyphPaths.push(glyphPath);\n    });\n\n    return glyphPaths;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\nFont.prototype.getEnglishName = function(name) {\n    var translations = this.names[name];\n    if (translations) {\n        return translations.en;\n    }\n};\n\n// Validate\nFont.prototype.validate = function() {\n    var warnings = [];\n    var _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertNamePresent(name) {\n        var englishName = _this.getEnglishName(name);\n        assert(englishName && englishName.trim().length > 0,\n               'No English ' + name + ' specified.');\n    }\n\n    // Identification information\n    assertNamePresent('fontFamily');\n    assertNamePresent('weightName');\n    assertNamePresent('manufacturer');\n    assertNamePresent('copyright');\n    assertNamePresent('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function() {\n    console.warn('Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.');\n    return this.toArrayBuffer();\n};\n\nFont.prototype.toArrayBuffer = function() {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function() {\n    var familyName = this.getEnglishName('fontFamily');\n    var styleName = this.getEnglishName('fontSubfamily');\n    var fileName = familyName.replace(/\\s/g, '') + '-' + styleName + '.otf';\n    var arrayBuffer = this.toArrayBuffer();\n\n    if (util.isBrowser()) {\n        window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n        window.requestFileSystem(window.TEMPORARY, arrayBuffer.byteLength, function(fs) {\n            fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n                fileEntry.createWriter(function(writer) {\n                    var dataView = new DataView(arrayBuffer);\n                    var blob = new Blob([dataView], {type: 'font/opentype'});\n                    writer.write(blob);\n\n                    writer.addEventListener('writeend', function() {\n                        // Navigating to the file will download it.\n                        location.href = fileEntry.toURL();\n                    }, false);\n                });\n            });\n        },\n        function(err) {\n            throw err;\n        });\n    } else {\n        var fs = require('fs');\n        var buffer = util.arrayBufferToNodeBuffer(arrayBuffer);\n        fs.writeFileSync(fileName, buffer);\n    }\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":4,\"./glyphset\":7,\"./path\":10,\"./tables/sfnt\":27,\"./util\":29,\"fs\":undefined}],6:[function(require,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = require('./check');\nvar draw = require('./draw');\nvar path = require('./path');\n\nfunction getPathDefinition(glyph, path) {\n    var _path = path || { commands: [] };\n    return {\n        configurable: true,\n\n        get: function() {\n            if (typeof _path === 'function') {\n                _path = _path();\n            }\n\n            return _path;\n        },\n\n        set: function(p) {\n            _path = p;\n        }\n    };\n}\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    // By putting all the code on a prototype function (which is only declared once)\n    // we reduce the memory requirements for larger fonts by some 2%\n    this.bindConstructorValues(options);\n}\n\nGlyph.prototype.bindConstructorValues = function(options) {\n    this.index = options.index || 0;\n\n    // These three values cannnot be deferred for memory optimization:\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n\n    // But by binding these values only when necessary, we reduce can\n    // the memory requirements by almost 3% for larger fonts.\n    if (options.xMin) {\n        this.xMin = options.xMin;\n    }\n\n    if (options.yMin) {\n        this.yMin = options.yMin;\n    }\n\n    if (options.xMax) {\n        this.xMax = options.xMax;\n    }\n\n    if (options.yMax) {\n        this.yMax = options.yMax;\n    }\n\n    if (options.advanceWidth) {\n        this.advanceWidth = options.advanceWidth;\n    }\n\n    // The path for a glyph is the most memory intensive, and is bound as a value\n    // with a getter/setter to ensure we actually do path parsing only once the\n    // path is actually needed by anything.\n    Object.defineProperty(this, 'path', getPathDefinition(this, options.path));\n};\n\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function(x, y, fontSize) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    var scale = 1 / this.path.unitsPerEm * fontSize;\n    var p = new path.Path();\n    var commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < this.points.length; i += 1) {\n        var pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function() {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n\n    if (!isFinite(metrics.xMin)) {\n        metrics.xMin = 0;\n    }\n\n    if (!isFinite(metrics.xMax)) {\n        metrics.xMax = this.advanceWidth;\n    }\n\n    if (!isFinite(metrics.yMin)) {\n        metrics.yMin = 0;\n    }\n\n    if (!isFinite(metrics.yMax)) {\n        metrics.yMax = 0;\n    }\n\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function(ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (var j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    var scale = 1 / this.path.unitsPerEm * fontSize;\n\n    var blueCircles = [];\n    var redCircles = [];\n    var path = this.path;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.path.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // This code is here due to memory optimization: by not using\n    // defaults in the constructor, we save a notable amount of memory.\n    var xMin = this.xMin || 0;\n    var yMin = this.yMin || 0;\n    var xMax = this.xMax || 0;\n    var yMax = this.yMax || 0;\n    var advanceWidth = this.advanceWidth || 0;\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (xMin * scale), -10000, x + (xMin * scale), 10000);\n    draw.line(ctx, x + (xMax * scale), -10000, x + (xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-yMin * scale), 10000, y + (-yMin * scale));\n    draw.line(ctx, -10000, y + (-yMax * scale), 10000, y + (-yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (advanceWidth * scale), -10000, x + (advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":2,\"./draw\":3,\"./path\":10}],7:[function(require,module,exports){\n// The GlyphSet object\n\n'use strict';\n\nvar _glyph = require('./glyph');\n\n// A GlyphSet represents all glyphs available in the font, but modelled using\n// a deferred glyph loader, for retrieving glyphs only once they are absolutely\n// necessary, to keep the memory footprint down.\nfunction GlyphSet(font, glyphs) {\n    this.font = font;\n    this.glyphs = {};\n    if (Array.isArray(glyphs)) {\n        for (var i = 0; i < glyphs.length; i++) {\n            this.glyphs[i] = glyphs[i];\n        }\n    }\n\n    this.length = (glyphs && glyphs.length) || 0;\n}\n\nGlyphSet.prototype.get = function(index) {\n    if (typeof this.glyphs[index] === 'function') {\n        this.glyphs[index] = this.glyphs[index]();\n    }\n\n    return this.glyphs[index];\n};\n\nGlyphSet.prototype.push = function(index, loader) {\n    this.glyphs[index] = loader;\n    this.length++;\n};\n\nfunction glyphLoader(font, index) {\n    return new _glyph.Glyph({index: index, font: font});\n}\n\n/**\n * Generate a stub glyph that can be filled with all metadata *except*\n * the \"points\" and \"path\" properties, which must be loaded only once\n * the glyph's path is actually requested for text shaping.\n */\n\nfunction ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n    return function() {\n        var glyph = new _glyph.Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            parseGlyph(glyph, data, position);\n            var path = buildPath(font.glyphs, glyph);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nfunction cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n    return function() {\n        var glyph = new _glyph.Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            var path = parseCFFCharstring(font, glyph, charstring);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nexports.GlyphSet = GlyphSet;\nexports.glyphLoader = glyphLoader;\nexports.ttfGlyphLoader = ttfGlyphLoader;\nexports.cffGlyphLoader = cffGlyphLoader;\n\n},{\"./glyph\":6}],8:[function(require,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2015 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar inflate = require('tiny-inflate');\n\nvar encoding = require('./encoding');\nvar _font = require('./font');\nvar glyph = require('./glyph');\nvar parse = require('./parse');\nvar path = require('./path');\nvar util = require('./util');\n\nvar cmap = require('./tables/cmap');\nvar cff = require('./tables/cff');\nvar fvar = require('./tables/fvar');\nvar glyf = require('./tables/glyf');\nvar gpos = require('./tables/gpos');\nvar head = require('./tables/head');\nvar hhea = require('./tables/hhea');\nvar hmtx = require('./tables/hmtx');\nvar kern = require('./tables/kern');\nvar ltag = require('./tables/ltag');\nvar loca = require('./tables/loca');\nvar maxp = require('./tables/maxp');\nvar _name = require('./tables/name');\nvar os2 = require('./tables/os2');\nvar post = require('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\nfunction loadFromFile(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, util.nodeBufferToArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n\n        return callback(null, request.response);\n    };\n\n    request.send();\n}\n\n// Table Directory Entries //////////////////////////////////////////////\n\nfunction parseOpenTypeTableEntries(data, numTables) {\n    var tableEntries = [];\n    var p = 12;\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 8);\n        tableEntries.push({tag: tag, offset: offset, compression: false});\n        p += 16;\n    }\n\n    return tableEntries;\n}\n\nfunction parseWOFFTableEntries(data, numTables) {\n    var tableEntries = [];\n    var p = 44; // offset to the first table directory entry.\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 4);\n        var compLength = parse.getULong(data, p + 8);\n        var origLength = parse.getULong(data, p + 12);\n        var compression;\n        if (compLength < origLength) {\n            compression = 'WOFF';\n        } else {\n            compression = false;\n        }\n\n        tableEntries.push({tag: tag, offset: offset, compression: compression,\n            compressedLength: compLength, originalLength: origLength});\n        p += 20;\n    }\n\n    return tableEntries;\n}\n\nfunction uncompressTable(data, tableEntry) {\n    if (tableEntry.compression === 'WOFF') {\n        var inBuffer = new Uint8Array(data.buffer, tableEntry.offset + 2, tableEntry.compressedLength - 2);\n        var outBuffer = new Uint8Array(tableEntry.originalLength);\n        inflate(inBuffer, outBuffer);\n        if (outBuffer.byteLength !== tableEntry.originalLength) {\n            throw new Error('Decompression error: ' + tableEntry.tag + ' decompressed length doesn\\'t match recorded length');\n        }\n\n        var view = new DataView(outBuffer.buffer, 0);\n        return {data: view, offset: 0};\n    } else {\n        return {data: data, offset: tableEntry.offset};\n    }\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// Throws an error if the font could not be parsed.\nfunction parseBuffer(buffer) {\n    var indexToLocFormat;\n    var ltagTable;\n\n    // Since the constructor can also be called to create new fonts from scratch, we indicate this\n    // should be an empty font that we'll fill with our own data.\n    var font = new _font.Font({empty: true});\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n    var data = new DataView(buffer, 0);\n    var numTables;\n    var tableEntries = [];\n    var signature = parse.getTag(data, 0);\n    if (signature === String.fromCharCode(0, 1, 0, 0)) {\n        font.outlinesFormat = 'truetype';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'OTTO') {\n        font.outlinesFormat = 'cff';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'wOFF') {\n        var flavor = parse.getTag(data, 4);\n        if (flavor === String.fromCharCode(0, 1, 0, 0)) {\n            font.outlinesFormat = 'truetype';\n        } else if (flavor === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType flavor ' + signature);\n        }\n\n        numTables = parse.getUShort(data, 12);\n        tableEntries = parseWOFFTableEntries(data, numTables);\n    } else {\n        throw new Error('Unsupported OpenType signature ' + signature);\n    }\n\n    var cffTableEntry;\n    var fvarTableEntry;\n    var glyfTableEntry;\n    var gposTableEntry;\n    var hmtxTableEntry;\n    var kernTableEntry;\n    var locaTableEntry;\n    var nameTableEntry;\n\n    for (var i = 0; i < numTables; i += 1) {\n        var tableEntry = tableEntries[i];\n        var table;\n        switch (tableEntry.tag) {\n        case 'cmap':\n            table = uncompressTable(data, tableEntry);\n            font.tables.cmap = cmap.parse(table.data, table.offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            break;\n        case 'fvar':\n            fvarTableEntry = tableEntry;\n            break;\n        case 'head':\n            table = uncompressTable(data, tableEntry);\n            font.tables.head = head.parse(table.data, table.offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            table = uncompressTable(data, tableEntry);\n            font.tables.hhea = hhea.parse(table.data, table.offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxTableEntry = tableEntry;\n            break;\n        case 'ltag':\n            table = uncompressTable(data, tableEntry);\n            ltagTable = ltag.parse(table.data, table.offset);\n            break;\n        case 'maxp':\n            table = uncompressTable(data, tableEntry);\n            font.tables.maxp = maxp.parse(table.data, table.offset);\n            font.numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            nameTableEntry = tableEntry;\n            break;\n        case 'OS/2':\n            table = uncompressTable(data, tableEntry);\n            font.tables.os2 = os2.parse(table.data, table.offset);\n            break;\n        case 'post':\n            table = uncompressTable(data, tableEntry);\n            font.tables.post = post.parse(table.data, table.offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfTableEntry = tableEntry;\n            break;\n        case 'loca':\n            locaTableEntry = tableEntry;\n            break;\n        case 'CFF ':\n            cffTableEntry = tableEntry;\n            break;\n        case 'kern':\n            kernTableEntry = tableEntry;\n            break;\n        case 'GPOS':\n            gposTableEntry = tableEntry;\n            break;\n        }\n    }\n\n    var nameTable = uncompressTable(data, nameTableEntry);\n    font.tables.name = _name.parse(nameTable.data, nameTable.offset, ltagTable);\n    font.names = font.tables.name;\n\n    if (glyfTableEntry && locaTableEntry) {\n        var shortVersion = indexToLocFormat === 0;\n        var locaTable = uncompressTable(data, locaTableEntry);\n        var locaOffsets = loca.parse(locaTable.data, locaTable.offset, font.numGlyphs, shortVersion);\n        var glyfTable = uncompressTable(data, glyfTableEntry);\n        font.glyphs = glyf.parse(glyfTable.data, glyfTable.offset, locaOffsets, font);\n    } else if (cffTableEntry) {\n        var cffTable = uncompressTable(data, cffTableEntry);\n        cff.parse(cffTable.data, cffTable.offset, font);\n    } else {\n        throw new Error('Font doesn\\'t contain TrueType or CFF outlines.');\n    }\n\n    var hmtxTable = uncompressTable(data, hmtxTableEntry);\n    hmtx.parse(hmtxTable.data, hmtxTable.offset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n    encoding.addGlyphNames(font);\n\n    if (kernTableEntry) {\n        var kernTable = uncompressTable(data, kernTableEntry);\n        font.kerningPairs = kern.parse(kernTable.data, kernTable.offset);\n    } else {\n        font.kerningPairs = {};\n    }\n\n    if (gposTableEntry) {\n        var gposTable = uncompressTable(data, gposTableEntry);\n        gpos.parse(gposTable.data, gposTable.offset, font);\n    }\n\n    if (fvarTableEntry) {\n        var fvarTable = uncompressTable(data, fvarTableEntry);\n        font.tables.fvar = fvar.parse(fvarTable.data, fvarTable.offset, font.names);\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function(err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n\n        var font = parseBuffer(arrayBuffer);\n        return callback(null, font);\n    });\n}\n\n// Syncronously load the font from a URL or file.\n// When done, return the font object or throw an error.\nfunction loadSync(url) {\n    var fs = require('fs');\n    var buffer = fs.readFileSync(url);\n    return parseBuffer(util.nodeBufferToArrayBuffer(buffer));\n}\n\nexports._parse = parse;\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\nexports.loadSync = loadSync;\n\n},{\"./encoding\":4,\"./font\":5,\"./glyph\":6,\"./parse\":9,\"./path\":10,\"./tables/cff\":12,\"./tables/cmap\":13,\"./tables/fvar\":14,\"./tables/glyf\":15,\"./tables/gpos\":16,\"./tables/head\":17,\"./tables/hhea\":18,\"./tables/hmtx\":19,\"./tables/kern\":20,\"./tables/loca\":21,\"./tables/ltag\":22,\"./tables/maxp\":23,\"./tables/name\":24,\"./tables/os2\":25,\"./tables/post\":26,\"./util\":29,\"fs\":undefined,\"tiny-inflate\":1}],9:[function(require,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function(dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function(dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function(dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function(dataView, offset) {\n    var decimal = dataView.getInt16(offset, false);\n    var fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function(dataView, offset) {\n    var tag = '';\n    for (var i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function(dataView, offset, offSize) {\n    var v = 0;\n    for (var i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function(dataView, startOffset, endOffset) {\n    var bytes = [];\n    for (var i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function(bytes) {\n    var s = '';\n    for (var i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function(length) {\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    var string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],10:[function(require,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function(decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],11:[function(require,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = require('./check');\nvar encode = require('./types').encode;\nvar sizeOf = require('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function() {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n\n    return v;\n};\n\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":2,\"./types\":28}],12:[function(require,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar glyphset = require('../glyphset');\nvar parse = require('../parse');\nvar path = require('../path');\nvar table = require('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    //var i, objectOffset, endOffset;\n    var offsets = [];\n    var objects = [];\n    var count = parse.getCard16(data, start);\n    var i;\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        var pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s = '';\n    var eof = 15;\n    var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        var b = parser.parseByte();\n        var n1 = b >> 4;\n        var n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1;\n    var b2;\n    var b3;\n    var b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o = {};\n    for (var i = 0; i < entries.length; i += 1) {\n        var key = entries[i][0];\n        var values = entries[i][1];\n        var value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    var parser = new parse.Parser(data, start);\n    var entries = [];\n    var operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        var op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var newDict = {};\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (var i = 0; i < meta.length; i += 1) {\n        var m = meta[i];\n        var value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n\n        newDict[m.name] = value;\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var i;\n    var sid;\n    var count;\n    var parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    var charset = ['.notdef'];\n\n    var format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var i;\n    var code;\n    var enc = {};\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        var nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        var nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            var first = parser.parseCard8();\n            var nLeft = parser.parseCard8();\n            for (var j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(font, glyph, code) {\n    var c1x;\n    var c1y;\n    var c2x;\n    var c2y;\n    var p = new path.Path();\n    var stack = [];\n    var nStems = 0;\n    var haveWidth = false;\n    var width = font.defaultWidthX;\n    var open = false;\n    var x = 0;\n    var y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        var codeIndex;\n        var subrCode;\n        var jpx;\n        var jpy;\n        var c3x;\n        var c3y;\n        var c4x;\n        var c4y;\n\n        var i = 0;\n        while (i < code.length) {\n            var v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    stack.shift();                // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();\n                    } else {\n                        y = c4y + stack.shift();\n                    }\n\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + glyph.index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                if (open) {\n                    p.closePath();\n                    open = false;\n                }\n\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + glyph.index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n\n    glyph.advanceWidth = width;\n    return p;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    font.tables.cff = {};\n    var header = parseCFFHeader(data, start);\n    var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    var topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    var privateDictOffset = start + topDict['private'][1];\n    var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        var subrOffset = privateDictOffset + privateDict.subrs;\n        var subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    var charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = new glyphset.GlyphSet(font);\n    for (var i = 0; i < font.nGlyphs; i += 1) {\n        var charString = charStringsIndex.objects[i];\n        font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var sid;\n\n    // Is the string in the CFF standard strings?\n    var i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {};\n    for (var i = 0; i < meta.length; i += 1) {\n        var entry = meta[i];\n        var value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [];\n    var path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    var x = 0;\n    var y = 0;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var dx;\n        var dy;\n        var cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            var dx1 = Math.round(cmd.x1 - x);\n            var dy1 = Math.round(cmd.y1 - y);\n            var dx2 = Math.round(cmd.x2 - cmd.x1);\n            var dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs.get(i);\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDict', type: 'TABLE'}\n    ]);\n\n    var fontScale = 1 / options.unitsPerEm;\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        fontBBox: options.fontBBox || [0, 0, 0, 0],\n        fontMatrix: [fontScale, 0, 0, fontScale, 0, 0],\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n    var glyph;\n\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyph = glyphs.get(i);\n        glyphNames.push(glyph.name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    t.privateDict = makePrivateDict(privateAttrs, strings);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":4,\"../glyphset\":7,\"../parse\":9,\"../path\":10,\"../table\":11}],13:[function(require,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var i;\n    var cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    var offset = -1;\n    for (i = 0; i < cmap.numTables; i += 1) {\n        var platformId = parse.getUShort(data, start + 4 + (i * 8));\n        var encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    var p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n    check.argument(cmap.format === 4, 'Only format 4 cmap tables are supported.');\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    var segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    var endCountParser = new parse.Parser(data, start + offset + 14);\n    var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        var glyphIndex;\n        var endCount = endCountParser.parseUShort();\n        var startCount = startCountParser.parseUShort();\n        var idDelta = idDeltaParser.parseShort();\n        var idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (var c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs.get(i);\n        for (var j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function(a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    // Set up parallel segment arrays.\n    var endCounts = [];\n    var startCounts = [];\n    var idDeltas = [];\n    var idRangeOffsets = [];\n    var glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":2,\"../parse\":9,\"../table\":11}],14:[function(require,module,exports){\n// The `fvar` table stores font variation axes and instances.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6fvar.html\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\nfunction addName(name, names) {\n    var nameString = JSON.stringify(name);\n    var nameID = 256;\n    for (var nameKey in names) {\n        var n = parseInt(nameKey);\n        if (!n || n < 256) {\n            continue;\n        }\n\n        if (JSON.stringify(names[nameKey]) === nameString) {\n            return n;\n        }\n\n        if (nameID <= n) {\n            nameID = n + 1;\n        }\n    }\n\n    names[nameID] = name;\n    return nameID;\n}\n\nfunction makeFvarAxis(axis, names) {\n    var nameID = addName(axis.name, names);\n    return new table.Table('fvarAxis', [\n        {name: 'tag', type: 'TAG', value: axis.tag},\n        {name: 'minValue', type: 'FIXED', value: axis.minValue << 16},\n        {name: 'defaultValue', type: 'FIXED', value: axis.defaultValue << 16},\n        {name: 'maxValue', type: 'FIXED', value: axis.maxValue << 16},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'nameID', type: 'USHORT', value: nameID}\n    ]);\n}\n\nfunction parseFvarAxis(data, start, names) {\n    var axis = {};\n    var p = new parse.Parser(data, start);\n    axis.tag = p.parseTag();\n    axis.minValue = p.parseFixed();\n    axis.defaultValue = p.parseFixed();\n    axis.maxValue = p.parseFixed();\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n    axis.name = names[p.parseUShort()] || {};\n    return axis;\n}\n\nfunction makeFvarInstance(inst, axes, names) {\n    var nameID = addName(inst.name, names);\n    var fields = [\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'flags', type: 'USHORT', value: 0}\n    ];\n\n    for (var i = 0; i < axes.length; ++i) {\n        var axisTag = axes[i].tag;\n        fields.push({\n            name: 'axis ' + axisTag,\n            type: 'FIXED',\n            value: inst.coordinates[axisTag] << 16\n        });\n    }\n\n    return new table.Table('fvarInstance', fields);\n}\n\nfunction parseFvarInstance(data, start, axes, names) {\n    var inst = {};\n    var p = new parse.Parser(data, start);\n    inst.name = names[p.parseUShort()] || {};\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n\n    inst.coordinates = {};\n    for (var i = 0; i < axes.length; ++i) {\n        inst.coordinates[axes[i].tag] = p.parseFixed();\n    }\n\n    return inst;\n}\n\nfunction makeFvarTable(fvar, names) {\n    var result = new table.Table('fvar', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'offsetToData', type: 'USHORT', value: 0},\n        {name: 'countSizePairs', type: 'USHORT', value: 2},\n        {name: 'axisCount', type: 'USHORT', value: fvar.axes.length},\n        {name: 'axisSize', type: 'USHORT', value: 20},\n        {name: 'instanceCount', type: 'USHORT', value: fvar.instances.length},\n        {name: 'instanceSize', type: 'USHORT', value: 4 + fvar.axes.length * 4}\n    ]);\n    result.offsetToData = result.sizeOf();\n\n    for (var i = 0; i < fvar.axes.length; i++) {\n        result.fields.push({\n            name: 'axis ' + i,\n            type: 'TABLE',\n            value: makeFvarAxis(fvar.axes[i], names)});\n    }\n\n    for (var j = 0; j < fvar.instances.length; j++) {\n        result.fields.push({\n            name: 'instance ' + j,\n            type: 'TABLE',\n            value: makeFvarInstance(fvar.instances[j], fvar.axes, names)\n        });\n    }\n\n    return result;\n}\n\nfunction parseFvarTable(data, start, names) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseULong();\n    check.argument(tableVersion === 0x00010000, 'Unsupported fvar table version.');\n    var offsetToData = p.parseOffset16();\n    // Skip countSizePairs.\n    p.skip('uShort', 1);\n    var axisCount = p.parseUShort();\n    var axisSize = p.parseUShort();\n    var instanceCount = p.parseUShort();\n    var instanceSize = p.parseUShort();\n\n    var axes = [];\n    for (var i = 0; i < axisCount; i++) {\n        axes.push(parseFvarAxis(data, start + offsetToData + i * axisSize, names));\n    }\n\n    var instances = [];\n    var instanceStart = start + offsetToData + axisCount * axisSize;\n    for (var j = 0; j < instanceCount; j++) {\n        instances.push(parseFvarInstance(data, instanceStart + j * instanceSize, axes, names));\n    }\n\n    return {axes:axes, instances:instances};\n}\n\nexports.make = makeFvarTable;\nexports.parse = parseFvarTable;\n\n},{\"../check\":2,\"../parse\":9,\"../table\":11}],15:[function(require,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = require('../check');\nvar glyphset = require('../glyphset');\nvar parse = require('../parse');\nvar path = require('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(glyph, data, start) {\n    var p = new parse.Parser(data, start);\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    var flags;\n    var flag;\n    if (glyph.numberOfContours > 0) {\n        var i;\n        // This glyph is not a composite.\n        var endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                var repeatCount = p.parseByte();\n                for (var j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            var points = [];\n            var point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                var px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                var py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        var moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            var component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        var newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p = new path.Path();\n    if (!points) {\n        return p;\n    }\n\n    var contours = getContours(points);\n    for (var i = 0; i < contours.length; i += 1) {\n        var contour = contours[i];\n        var firstPt = contour[0];\n        var lastPt = contour[contour.length - 1];\n        var curvePt;\n        var realFirstPoint;\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (var j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            var pt = contour[j];\n            var prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                var midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n\n    p.closePath();\n    return p;\n}\n\nfunction buildPath(glyphs, glyph) {\n    if (glyph.isComposite) {\n        for (var j = 0; j < glyph.components.length; j += 1) {\n            var component = glyph.components[j];\n            var componentGlyph = glyphs.get(component.glyphIndex);\n            // Force the ttfGlyphLoader to parse the glyph.\n            componentGlyph.getPath();\n            if (componentGlyph.points) {\n                var transformedPoints = transformPoints(componentGlyph.points, component);\n                glyph.points = glyph.points.concat(transformedPoints);\n            }\n        }\n    }\n\n    return getPath(glyph.points);\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs = new glyphset.GlyphSet(font);\n    var i;\n\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    }\n\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":2,\"../glyphset\":7,\"../parse\":9,\"../path\":10}],16:[function(require,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var n = p.parseUShort();\n    var list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    var count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var coverage = [];\n        for (; count--;) {\n            var begin = p.parseUShort();\n            var end = p.parseUShort();\n            var index = p.parseUShort();\n            for (var i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort();\n        var glyphCount = p.parseUShort();\n        var classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort();\n        var startGlyphs = [];\n        var endGlyphs = [];\n        var classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n\n        return function(glyphID) {\n            var l = 0;\n            var r = startGlyphs.length - 1;\n            while (l < r) {\n                var c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    // This part is common to format 1 and format 2 subtables\n    var format = p.parseUShort();\n    var coverageOffset = p.parseUShort();\n    var coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    var valueFormat1 = p.parseUShort();\n    var valueFormat2 = p.parseUShort();\n    var value1;\n    var value2;\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    var sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount = p.parseUShort();\n        var pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        var pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (var firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            var pairSetOffset = pairSetOffsets[firstGlyph];\n            var sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                var pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    var secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset = p.parseUShort();\n        var classDef2Offset = p.parseUShort();\n        var class1Count = p.parseUShort();\n        var class2Count = p.parseUShort();\n        var getClass1 = parseClassDefTable(data, start + classDef1Offset);\n        var getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\n        // Parse kerning values by class pair.\n        var kerningMatrix = [];\n        for (var i = 0; i < class1Count; i++) {\n            var kerningRow = kerningMatrix[i] = [];\n            for (var j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        var covered = {};\n        for (i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph);\n            var class2 = getClass2(rightGlyph);\n            var kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var lookupType = p.parseUShort();\n    var lookupFlag = p.parseUShort();\n    var useMarkFilteringSet = lookupFlag & 0x10;\n    var subTableCount = p.parseUShort();\n    var subTableOffsets = p.parseOffset16List(subTableCount);\n    var table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        var subtables = [];\n        for (var i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n\n            return 0;\n        };\n    }\n\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    parseTaggedListTable(data, start + p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    parseTaggedListTable(data, start + p.parseUShort());\n\n    // LookupList\n    var lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    var lookupCount = p.parseUShort();\n    var lookupTableOffsets = p.parseOffset16List(lookupCount);\n    var lookupListAbsoluteOffset = start + lookupListOffset;\n    for (var i = 0; i < lookupCount; i++) {\n        var table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":2,\"../parse\":9}],17:[function(require,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {};\n    var p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":2,\"../parse\":9,\"../table\":11}],18:[function(require,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {};\n    var p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":9,\"../table\":11}],19:[function(require,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        var glyph = glyphs.get(i);\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs.get(i);\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n},{\"../parse\":9,\"../table\":11}],20:[function(require,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs = {};\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    var subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    var nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (var i = 0; i < nPairs; i += 1) {\n        var leftIndex = p.parseUShort();\n        var rightIndex = p.parseUShort();\n        var value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":2,\"../parse\":9}],21:[function(require,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = require('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p = new parse.Parser(data, start);\n    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    var glyphOffsets = [];\n    for (var i = 0; i < numGlyphs + 1; i += 1) {\n        var glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":9}],22:[function(require,module,exports){\n// The `ltag` table stores IETF BCP-47 language tags. It allows supporting\n// languages for which TrueType does not assign a numeric code.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6ltag.html\n// http://www.w3.org/International/articles/language-tags/\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\nfunction makeLtagTable(tags) {\n    var result = new table.Table('ltag', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'numTags', type: 'ULONG', value: tags.length}\n    ]);\n\n    var stringPool = '';\n    var stringPoolOffset = 12 + tags.length * 4;\n    for (var i = 0; i < tags.length; ++i) {\n        var pos = stringPool.indexOf(tags[i]);\n        if (pos < 0) {\n            pos = stringPool.length;\n            stringPool += tags[i];\n        }\n\n        result.fields.push({name: 'offset ' + i, type: 'USHORT', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + i, type: 'USHORT', value: tags[i].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n    return result;\n}\n\nfunction parseLtagTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported ltag table version.');\n    // The 'ltag' specification does not define any flags; skip the field.\n    p.skip('uLong', 1);\n    var numTags = p.parseULong();\n\n    var tags = [];\n    for (var i = 0; i < numTags; i++) {\n        var tag = '';\n        var offset = start + p.parseUShort();\n        var length = p.parseUShort();\n        for (var j = offset; j < offset + length; ++j) {\n            tag += String.fromCharCode(data.getInt8(j));\n        }\n\n        tags.push(tag);\n    }\n\n    return tags;\n}\n\nexports.make = makeLtagTable;\nexports.parse = parseLtagTable;\n\n},{\"../check\":2,\"../parse\":9,\"../table\":11}],23:[function(require,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {};\n    var p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":9,\"../table\":11}],24:[function(require,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar types = require('../types');\nvar decode = types.decode;\nvar encode = types.encode;\nvar parse = require('../parse');\nvar table = require('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'license',                // 13\n    'licenseURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\nvar macLanguages = {\n    0: 'en',\n    1: 'fr',\n    2: 'de',\n    3: 'it',\n    4: 'nl',\n    5: 'sv',\n    6: 'es',\n    7: 'da',\n    8: 'pt',\n    9: 'no',\n    10: 'he',\n    11: 'ja',\n    12: 'ar',\n    13: 'fi',\n    14: 'el',\n    15: 'is',\n    16: 'mt',\n    17: 'tr',\n    18: 'hr',\n    19: 'zh-Hant',\n    20: 'ur',\n    21: 'hi',\n    22: 'th',\n    23: 'ko',\n    24: 'lt',\n    25: 'pl',\n    26: 'hu',\n    27: 'es',\n    28: 'lv',\n    29: 'se',\n    30: 'fo',\n    31: 'fa',\n    32: 'ru',\n    33: 'zh',\n    34: 'nl-BE',\n    35: 'ga',\n    36: 'sq',\n    37: 'ro',\n    38: 'cz',\n    39: 'sk',\n    40: 'si',\n    41: 'yi',\n    42: 'sr',\n    43: 'mk',\n    44: 'bg',\n    45: 'uk',\n    46: 'be',\n    47: 'uz',\n    48: 'kk',\n    49: 'az-Cyrl',\n    50: 'az-Arab',\n    51: 'hy',\n    52: 'ka',\n    53: 'mo',\n    54: 'ky',\n    55: 'tg',\n    56: 'tk',\n    57: 'mn-CN',\n    58: 'mn',\n    59: 'ps',\n    60: 'ks',\n    61: 'ku',\n    62: 'sd',\n    63: 'bo',\n    64: 'ne',\n    65: 'sa',\n    66: 'mr',\n    67: 'bn',\n    68: 'as',\n    69: 'gu',\n    70: 'pa',\n    71: 'or',\n    72: 'ml',\n    73: 'kn',\n    74: 'ta',\n    75: 'te',\n    76: 'si',\n    77: 'my',\n    78: 'km',\n    79: 'lo',\n    80: 'vi',\n    81: 'id',\n    82: 'tl',\n    83: 'ms',\n    84: 'ms-Arab',\n    85: 'am',\n    86: 'ti',\n    87: 'om',\n    88: 'so',\n    89: 'sw',\n    90: 'rw',\n    91: 'rn',\n    92: 'ny',\n    93: 'mg',\n    94: 'eo',\n    128: 'cy',\n    129: 'eu',\n    130: 'ca',\n    131: 'la',\n    132: 'qu',\n    133: 'gn',\n    134: 'ay',\n    135: 'tt',\n    136: 'ug',\n    137: 'dz',\n    138: 'jv',\n    139: 'su',\n    140: 'gl',\n    141: 'af',\n    142: 'br',\n    143: 'iu',\n    144: 'gd',\n    145: 'gv',\n    146: 'ga',\n    147: 'to',\n    148: 'el-polyton',\n    149: 'kl',\n    150: 'az',\n    151: 'nn'\n};\n\n// MacOS language ID → MacOS script ID\n//\n// Note that the script ID is not sufficient to determine what encoding\n// to use in TrueType files. For some languages, MacOS used a modification\n// of a mainstream script. For example, an Icelandic name would be stored\n// with smRoman in the TrueType naming table, but the actual encoding\n// is a special Icelandic version of the normal Macintosh Roman encoding.\n// As another example, Inuktitut uses an 8-bit encoding for Canadian Aboriginal\n// Syllables but MacOS had run out of available script codes, so this was\n// done as a (pretty radical) \"modification\" of Ethiopic.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nvar macLanguageToScript = {\n    0: 0,  // langEnglish → smRoman\n    1: 0,  // langFrench → smRoman\n    2: 0,  // langGerman → smRoman\n    3: 0,  // langItalian → smRoman\n    4: 0,  // langDutch → smRoman\n    5: 0,  // langSwedish → smRoman\n    6: 0,  // langSpanish → smRoman\n    7: 0,  // langDanish → smRoman\n    8: 0,  // langPortuguese → smRoman\n    9: 0,  // langNorwegian → smRoman\n    10: 5,  // langHebrew → smHebrew\n    11: 1,  // langJapanese → smJapanese\n    12: 4,  // langArabic → smArabic\n    13: 0,  // langFinnish → smRoman\n    14: 6,  // langGreek → smGreek\n    15: 0,  // langIcelandic → smRoman (modified)\n    16: 0,  // langMaltese → smRoman\n    17: 0,  // langTurkish → smRoman (modified)\n    18: 0,  // langCroatian → smRoman (modified)\n    19: 2,  // langTradChinese → smTradChinese\n    20: 4,  // langUrdu → smArabic\n    21: 9,  // langHindi → smDevanagari\n    22: 21,  // langThai → smThai\n    23: 3,  // langKorean → smKorean\n    24: 29,  // langLithuanian → smCentralEuroRoman\n    25: 29,  // langPolish → smCentralEuroRoman\n    26: 29,  // langHungarian → smCentralEuroRoman\n    27: 29,  // langEstonian → smCentralEuroRoman\n    28: 29,  // langLatvian → smCentralEuroRoman\n    29: 0,  // langSami → smRoman\n    30: 0,  // langFaroese → smRoman (modified)\n    31: 4,  // langFarsi → smArabic (modified)\n    32: 7,  // langRussian → smCyrillic\n    33: 25,  // langSimpChinese → smSimpChinese\n    34: 0,  // langFlemish → smRoman\n    35: 0,  // langIrishGaelic → smRoman (modified)\n    36: 0,  // langAlbanian → smRoman\n    37: 0,  // langRomanian → smRoman (modified)\n    38: 29,  // langCzech → smCentralEuroRoman\n    39: 29,  // langSlovak → smCentralEuroRoman\n    40: 0,  // langSlovenian → smRoman (modified)\n    41: 5,  // langYiddish → smHebrew\n    42: 7,  // langSerbian → smCyrillic\n    43: 7,  // langMacedonian → smCyrillic\n    44: 7,  // langBulgarian → smCyrillic\n    45: 7,  // langUkrainian → smCyrillic (modified)\n    46: 7,  // langByelorussian → smCyrillic\n    47: 7,  // langUzbek → smCyrillic\n    48: 7,  // langKazakh → smCyrillic\n    49: 7,  // langAzerbaijani → smCyrillic\n    50: 4,  // langAzerbaijanAr → smArabic\n    51: 24,  // langArmenian → smArmenian\n    52: 23,  // langGeorgian → smGeorgian\n    53: 7,  // langMoldavian → smCyrillic\n    54: 7,  // langKirghiz → smCyrillic\n    55: 7,  // langTajiki → smCyrillic\n    56: 7,  // langTurkmen → smCyrillic\n    57: 27,  // langMongolian → smMongolian\n    58: 7,  // langMongolianCyr → smCyrillic\n    59: 4,  // langPashto → smArabic\n    60: 4,  // langKurdish → smArabic\n    61: 4,  // langKashmiri → smArabic\n    62: 4,  // langSindhi → smArabic\n    63: 26,  // langTibetan → smTibetan\n    64: 9,  // langNepali → smDevanagari\n    65: 9,  // langSanskrit → smDevanagari\n    66: 9,  // langMarathi → smDevanagari\n    67: 13,  // langBengali → smBengali\n    68: 13,  // langAssamese → smBengali\n    69: 11,  // langGujarati → smGujarati\n    70: 10,  // langPunjabi → smGurmukhi\n    71: 12,  // langOriya → smOriya\n    72: 17,  // langMalayalam → smMalayalam\n    73: 16,  // langKannada → smKannada\n    74: 14,  // langTamil → smTamil\n    75: 15,  // langTelugu → smTelugu\n    76: 18,  // langSinhalese → smSinhalese\n    77: 19,  // langBurmese → smBurmese\n    78: 20,  // langKhmer → smKhmer\n    79: 22,  // langLao → smLao\n    80: 30,  // langVietnamese → smVietnamese\n    81: 0,  // langIndonesian → smRoman\n    82: 0,  // langTagalog → smRoman\n    83: 0,  // langMalayRoman → smRoman\n    84: 4,  // langMalayArabic → smArabic\n    85: 28,  // langAmharic → smEthiopic\n    86: 28,  // langTigrinya → smEthiopic\n    87: 28,  // langOromo → smEthiopic\n    88: 0,  // langSomali → smRoman\n    89: 0,  // langSwahili → smRoman\n    90: 0,  // langKinyarwanda → smRoman\n    91: 0,  // langRundi → smRoman\n    92: 0,  // langNyanja → smRoman\n    93: 0,  // langMalagasy → smRoman\n    94: 0,  // langEsperanto → smRoman\n    128: 0,  // langWelsh → smRoman (modified)\n    129: 0,  // langBasque → smRoman\n    130: 0,  // langCatalan → smRoman\n    131: 0,  // langLatin → smRoman\n    132: 0,  // langQuechua → smRoman\n    133: 0,  // langGuarani → smRoman\n    134: 0,  // langAymara → smRoman\n    135: 7,  // langTatar → smCyrillic\n    136: 4,  // langUighur → smArabic\n    137: 26,  // langDzongkha → smTibetan\n    138: 0,  // langJavaneseRom → smRoman\n    139: 0,  // langSundaneseRom → smRoman\n    140: 0,  // langGalician → smRoman\n    141: 0,  // langAfrikaans → smRoman\n    142: 0,  // langBreton → smRoman (modified)\n    143: 28,  // langInuktitut → smEthiopic (modified)\n    144: 0,  // langScottishGaelic → smRoman (modified)\n    145: 0,  // langManxGaelic → smRoman (modified)\n    146: 0,  // langIrishGaelicScript → smRoman (modified)\n    147: 0,  // langTongan → smRoman\n    148: 6,  // langGreekAncient → smRoman\n    149: 0,  // langGreenlandic → smRoman\n    150: 0,  // langAzerbaijanRoman → smRoman\n    151: 0   // langNynorsk → smRoman\n};\n\n// While Microsoft indicates a region/country for all its language\n// IDs, we omit the region code if it's equal to the \"most likely\n// region subtag\" according to Unicode CLDR. For scripts, we omit\n// the subtag if it is equal to the Suppress-Script entry in the\n// IANA language subtag registry for IETF BCP 47.\n//\n// For example, Microsoft states that its language code 0x041A is\n// Croatian in Croatia. We transform this to the BCP 47 language code 'hr'\n// and not 'hr-HR' because Croatia is the default country for Croatian,\n// according to Unicode CLDR. As another example, Microsoft states\n// that 0x101A is Croatian (Latin) in Bosnia-Herzegovina. We transform\n// this to 'hr-BA' and not 'hr-Latn-BA' because Latin is the default script\n// for the Croatian language, according to IANA.\n//\n// http://www.unicode.org/cldr/charts/latest/supplemental/likely_subtags.html\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\nvar windowsLanguages = {\n    0x0436: 'af',\n    0x041C: 'sq',\n    0x0484: 'gsw',\n    0x045E: 'am',\n    0x1401: 'ar-DZ',\n    0x3C01: 'ar-BH',\n    0x0C01: 'ar',\n    0x0801: 'ar-IQ',\n    0x2C01: 'ar-JO',\n    0x3401: 'ar-KW',\n    0x3001: 'ar-LB',\n    0x1001: 'ar-LY',\n    0x1801: 'ary',\n    0x2001: 'ar-OM',\n    0x4001: 'ar-QA',\n    0x0401: 'ar-SA',\n    0x2801: 'ar-SY',\n    0x1C01: 'aeb',\n    0x3801: 'ar-AE',\n    0x2401: 'ar-YE',\n    0x042B: 'hy',\n    0x044D: 'as',\n    0x082C: 'az-Cyrl',\n    0x042C: 'az',\n    0x046D: 'ba',\n    0x042D: 'eu',\n    0x0423: 'be',\n    0x0845: 'bn',\n    0x0445: 'bn-IN',\n    0x201A: 'bs-Cyrl',\n    0x141A: 'bs',\n    0x047E: 'br',\n    0x0402: 'bg',\n    0x0403: 'ca',\n    0x0C04: 'zh-HK',\n    0x1404: 'zh-MO',\n    0x0804: 'zh',\n    0x1004: 'zh-SG',\n    0x0404: 'zh-TW',\n    0x0483: 'co',\n    0x041A: 'hr',\n    0x101A: 'hr-BA',\n    0x0405: 'cs',\n    0x0406: 'da',\n    0x048C: 'prs',\n    0x0465: 'dv',\n    0x0813: 'nl-BE',\n    0x0413: 'nl',\n    0x0C09: 'en-AU',\n    0x2809: 'en-BZ',\n    0x1009: 'en-CA',\n    0x2409: 'en-029',\n    0x4009: 'en-IN',\n    0x1809: 'en-IE',\n    0x2009: 'en-JM',\n    0x4409: 'en-MY',\n    0x1409: 'en-NZ',\n    0x3409: 'en-PH',\n    0x4809: 'en-SG',\n    0x1C09: 'en-ZA',\n    0x2C09: 'en-TT',\n    0x0809: 'en-GB',\n    0x0409: 'en',\n    0x3009: 'en-ZW',\n    0x0425: 'et',\n    0x0438: 'fo',\n    0x0464: 'fil',\n    0x040B: 'fi',\n    0x080C: 'fr-BE',\n    0x0C0C: 'fr-CA',\n    0x040C: 'fr',\n    0x140C: 'fr-LU',\n    0x180C: 'fr-MC',\n    0x100C: 'fr-CH',\n    0x0462: 'fy',\n    0x0456: 'gl',\n    0x0437: 'ka',\n    0x0C07: 'de-AT',\n    0x0407: 'de',\n    0x1407: 'de-LI',\n    0x1007: 'de-LU',\n    0x0807: 'de-CH',\n    0x0408: 'el',\n    0x046F: 'kl',\n    0x0447: 'gu',\n    0x0468: 'ha',\n    0x040D: 'he',\n    0x0439: 'hi',\n    0x040E: 'hu',\n    0x040F: 'is',\n    0x0470: 'ig',\n    0x0421: 'id',\n    0x045D: 'iu',\n    0x085D: 'iu-Latn',\n    0x083C: 'ga',\n    0x0434: 'xh',\n    0x0435: 'zu',\n    0x0410: 'it',\n    0x0810: 'it-CH',\n    0x0411: 'ja',\n    0x044B: 'kn',\n    0x043F: 'kk',\n    0x0453: 'km',\n    0x0486: 'quc',\n    0x0487: 'rw',\n    0x0441: 'sw',\n    0x0457: 'kok',\n    0x0412: 'ko',\n    0x0440: 'ky',\n    0x0454: 'lo',\n    0x0426: 'lv',\n    0x0427: 'lt',\n    0x082E: 'dsb',\n    0x046E: 'lb',\n    0x042F: 'mk',\n    0x083E: 'ms-BN',\n    0x043E: 'ms',\n    0x044C: 'ml',\n    0x043A: 'mt',\n    0x0481: 'mi',\n    0x047A: 'arn',\n    0x044E: 'mr',\n    0x047C: 'moh',\n    0x0450: 'mn',\n    0x0850: 'mn-CN',\n    0x0461: 'ne',\n    0x0414: 'nb',\n    0x0814: 'nn',\n    0x0482: 'oc',\n    0x0448: 'or',\n    0x0463: 'ps',\n    0x0415: 'pl',\n    0x0416: 'pt',\n    0x0816: 'pt-PT',\n    0x0446: 'pa',\n    0x046B: 'qu-BO',\n    0x086B: 'qu-EC',\n    0x0C6B: 'qu',\n    0x0418: 'ro',\n    0x0417: 'rm',\n    0x0419: 'ru',\n    0x243B: 'smn',\n    0x103B: 'smj-NO',\n    0x143B: 'smj',\n    0x0C3B: 'se-FI',\n    0x043B: 'se',\n    0x083B: 'se-SE',\n    0x203B: 'sms',\n    0x183B: 'sma-NO',\n    0x1C3B: 'sms',\n    0x044F: 'sa',\n    0x1C1A: 'sr-Cyrl-BA',\n    0x0C1A: 'sr',\n    0x181A: 'sr-Latn-BA',\n    0x081A: 'sr-Latn',\n    0x046C: 'nso',\n    0x0432: 'tn',\n    0x045B: 'si',\n    0x041B: 'sk',\n    0x0424: 'sl',\n    0x2C0A: 'es-AR',\n    0x400A: 'es-BO',\n    0x340A: 'es-CL',\n    0x240A: 'es-CO',\n    0x140A: 'es-CR',\n    0x1C0A: 'es-DO',\n    0x300A: 'es-EC',\n    0x440A: 'es-SV',\n    0x100A: 'es-GT',\n    0x480A: 'es-HN',\n    0x080A: 'es-MX',\n    0x4C0A: 'es-NI',\n    0x180A: 'es-PA',\n    0x3C0A: 'es-PY',\n    0x280A: 'es-PE',\n    0x500A: 'es-PR',\n\n    // Microsoft has defined two different language codes for\n    // “Spanish with modern sorting” and “Spanish with traditional\n    // sorting”. This makes sense for collation APIs, and it would be\n    // possible to express this in BCP 47 language tags via Unicode\n    // extensions (eg., es-u-co-trad is Spanish with traditional\n    // sorting). However, for storing names in fonts, the distinction\n    // does not make sense, so we give “es” in both cases.\n    0x0C0A: 'es',\n    0x040A: 'es',\n\n    0x540A: 'es-US',\n    0x380A: 'es-UY',\n    0x200A: 'es-VE',\n    0x081D: 'sv-FI',\n    0x041D: 'sv',\n    0x045A: 'syr',\n    0x0428: 'tg',\n    0x085F: 'tzm',\n    0x0449: 'ta',\n    0x0444: 'tt',\n    0x044A: 'te',\n    0x041E: 'th',\n    0x0451: 'bo',\n    0x041F: 'tr',\n    0x0442: 'tk',\n    0x0480: 'ug',\n    0x0422: 'uk',\n    0x042E: 'hsb',\n    0x0420: 'ur',\n    0x0843: 'uz-Cyrl',\n    0x0443: 'uz',\n    0x042A: 'vi',\n    0x0452: 'cy',\n    0x0488: 'wo',\n    0x0485: 'sah',\n    0x0478: 'ii',\n    0x046A: 'yo'\n};\n\n// Returns a IETF BCP 47 language code, for example 'zh-Hant'\n// for 'Chinese in the traditional script'.\nfunction getLanguageCode(platformID, languageID, ltag) {\n    switch (platformID) {\n    case 0:  // Unicode\n        if (languageID === 0xFFFF) {\n            return 'und';\n        } else if (ltag) {\n            return ltag[languageID];\n        }\n\n        break;\n\n    case 1:  // Macintosh\n        return macLanguages[languageID];\n\n    case 3:  // Windows\n        return windowsLanguages[languageID];\n    }\n\n    return undefined;\n}\n\nvar utf16 = 'utf-16';\n\n// MacOS script ID → encoding. This table stores the default case,\n// which can be overridden by macLanguageEncodings.\nvar macScriptEncodings = {\n    0: 'macintosh',           // smRoman\n    1: 'x-mac-japanese',      // smJapanese\n    2: 'x-mac-chinesetrad',   // smTradChinese\n    3: 'x-mac-korean',        // smKorean\n    6: 'x-mac-greek',         // smGreek\n    7: 'x-mac-cyrillic',      // smCyrillic\n    9: 'x-mac-devanagai',     // smDevanagari\n    10: 'x-mac-gurmukhi',     // smGurmukhi\n    11: 'x-mac-gujarati',     // smGujarati\n    12: 'x-mac-oriya',        // smOriya\n    13: 'x-mac-bengali',      // smBengali\n    14: 'x-mac-tamil',        // smTamil\n    15: 'x-mac-telugu',       // smTelugu\n    16: 'x-mac-kannada',      // smKannada\n    17: 'x-mac-malayalam',    // smMalayalam\n    18: 'x-mac-sinhalese',    // smSinhalese\n    19: 'x-mac-burmese',      // smBurmese\n    20: 'x-mac-khmer',        // smKhmer\n    21: 'x-mac-thai',         // smThai\n    22: 'x-mac-lao',          // smLao\n    23: 'x-mac-georgian',     // smGeorgian\n    24: 'x-mac-armenian',     // smArmenian\n    25: 'x-mac-chinesesimp',  // smSimpChinese\n    26: 'x-mac-tibetan',      // smTibetan\n    27: 'x-mac-mongolian',    // smMongolian\n    28: 'x-mac-ethiopic',     // smEthiopic\n    29: 'x-mac-ce',           // smCentralEuroRoman\n    30: 'x-mac-vietnamese',   // smVietnamese\n    31: 'x-mac-extarabic'     // smExtArabic\n};\n\n// MacOS language ID → encoding. This table stores the exceptional\n// cases, which override macScriptEncodings. For writing MacOS naming\n// tables, we need to emit a MacOS script ID. Therefore, we cannot\n// merge macScriptEncodings into macLanguageEncodings.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nvar macLanguageEncodings = {\n    15: 'x-mac-icelandic',    // langIcelandic\n    17: 'x-mac-turkish',      // langTurkish\n    18: 'x-mac-croatian',     // langCroatian\n    24: 'x-mac-ce',           // langLithuanian\n    25: 'x-mac-ce',           // langPolish\n    26: 'x-mac-ce',           // langHungarian\n    27: 'x-mac-ce',           // langEstonian\n    28: 'x-mac-ce',           // langLatvian\n    30: 'x-mac-icelandic',    // langFaroese\n    37: 'x-mac-romanian',     // langRomanian\n    38: 'x-mac-ce',           // langCzech\n    39: 'x-mac-ce',           // langSlovak\n    40: 'x-mac-ce',           // langSlovenian\n    143: 'x-mac-inuit',       // langInuktitut\n    146: 'x-mac-gaelic'       // langIrishGaelicScript\n};\n\nfunction getEncoding(platformID, encodingID, languageID) {\n    switch (platformID) {\n    case 0:  // Unicode\n        return utf16;\n\n    case 1:  // Apple Macintosh\n        return macLanguageEncodings[languageID] || macScriptEncodings[encodingID];\n\n    case 3:  // Microsoft Windows\n        if (encodingID === 1 || encodingID === 10) {\n            return utf16;\n        }\n\n        break;\n    }\n\n    return undefined;\n}\n\n// Parse the naming `name` table.\n// FIXME: Format 1 additional fields are not supported yet.\n// ltag is the content of the `ltag' table, such as ['en', 'zh-Hans', 'de-CH-1904'].\nfunction parseNameTable(data, start, ltag) {\n    var name = {};\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    var count = p.parseUShort();\n    var stringOffset = p.offset + p.parseUShort();\n    for (var i = 0; i < count; i++) {\n        var platformID = p.parseUShort();\n        var encodingID = p.parseUShort();\n        var languageID = p.parseUShort();\n        var nameID = p.parseUShort();\n        var property = nameTableNames[nameID] || nameID;\n        var byteLength = p.parseUShort();\n        var offset = p.parseUShort();\n        var language = getLanguageCode(platformID, languageID, ltag);\n        var encoding = getEncoding(platformID, encodingID, languageID);\n        if (encoding !== undefined && language !== undefined) {\n            var text;\n            if (encoding === utf16) {\n                text = decode.UTF16(data, stringOffset + offset, byteLength);\n            } else {\n                text = decode.MACSTRING(data, stringOffset + offset, byteLength, encoding);\n            }\n\n            if (text) {\n                var translations = name[property];\n                if (translations === undefined) {\n                    translations = name[property] = {};\n                }\n\n                translations[language] = text;\n            }\n        }\n    }\n\n    var langTagCount = 0;\n    if (format === 1) {\n        // FIXME: Also handle Microsoft's 'name' table 1.\n        langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\n// {23: 'foo'} → {'foo': 23}\n// ['bar', 'baz'] → {'bar': 0, 'baz': 1}\nfunction reverseDict(dict) {\n    var result = {};\n    for (var key in dict) {\n        result[dict[key]] = parseInt(key);\n    }\n\n    return result;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\n// Finds the position of needle in haystack, or -1 if not there.\n// Like String.indexOf(), but for arrays.\nfunction findSubArray(needle, haystack) {\n    var needleLength = needle.length;\n    var limit = haystack.length - needleLength + 1;\n\n    loop:\n    for (var pos = 0; pos < limit; pos++) {\n        for (; pos < limit; pos++) {\n            for (var k = 0; k < needleLength; k++) {\n                if (haystack[pos + k] !== needle[k]) {\n                    continue loop;\n                }\n            }\n\n            return pos;\n        }\n    }\n\n    return -1;\n}\n\nfunction addStringToPool(s, pool) {\n    var offset = findSubArray(s, pool);\n    if (offset < 0) {\n        offset = pool.length;\n        for (var i = 0, len = s.length; i < len; ++i) {\n            pool.push(s[i]);\n        }\n\n    }\n\n    return offset;\n}\n\nfunction makeNameTable(names, ltag) {\n    var nameID;\n    var nameIDs = [];\n\n    var namesWithNumericKeys = {};\n    var nameTableIds = reverseDict(nameTableNames);\n    for (var key in names) {\n        var id = nameTableIds[key];\n        if (id === undefined) {\n            id = key;\n        }\n\n        nameID = parseInt(id);\n        namesWithNumericKeys[nameID] = names[key];\n        nameIDs.push(nameID);\n    }\n\n    var macLanguageIds = reverseDict(macLanguages);\n    var windowsLanguageIds = reverseDict(windowsLanguages);\n\n    var nameRecords = [];\n    var stringPool = [];\n\n    for (var i = 0; i < nameIDs.length; i++) {\n        nameID = nameIDs[i];\n        var translations = namesWithNumericKeys[nameID];\n        for (var lang in translations) {\n            var text = translations[lang];\n\n            // For MacOS, we try to emit the name in the form that was introduced\n            // in the initial version of the TrueType spec (in the late 1980s).\n            // However, this can fail for various reasons: the requested BCP 47\n            // language code might not have an old-style Mac equivalent;\n            // we might not have a codec for the needed character encoding;\n            // or the name might contain characters that cannot be expressed\n            // in the old-style Macintosh encoding. In case of failure, we emit\n            // the name in a more modern fashion (Unicode encoding with BCP 47\n            // language tags) that is recognized by MacOS 10.5, released in 2009.\n            // If fonts were only read by operating systems, we could simply\n            // emit all names in the modern form; this would be much easier.\n            // However, there are many applications and libraries that read\n            // 'name' tables directly, and these will usually only recognize\n            // the ancient form (silently skipping the unrecognized names).\n            var macPlatform = 1;  // Macintosh\n            var macLanguage = macLanguageIds[lang];\n            var macScript = macLanguageToScript[macLanguage];\n            var macEncoding = getEncoding(macPlatform, macScript, macLanguage);\n            var macName = encode.MACSTRING(text, macEncoding);\n            if (macName === undefined) {\n                macPlatform = 0;  // Unicode\n                macLanguage = ltag.indexOf(lang);\n                if (macLanguage < 0) {\n                    macLanguage = ltag.length;\n                    ltag.push(lang);\n                }\n\n                macScript = 4;  // Unicode 2.0 and later\n                macName = encode.UTF16(text);\n            }\n\n            var macNameOffset = addStringToPool(macName, stringPool);\n            nameRecords.push(makeNameRecord(macPlatform, macScript, macLanguage,\n                                            nameID, macName.length, macNameOffset));\n\n            var winLanguage = windowsLanguageIds[lang];\n            if (winLanguage !== undefined) {\n                var winName = encode.UTF16(text);\n                var winNameOffset = addStringToPool(winName, stringPool);\n                nameRecords.push(makeNameRecord(3, 1, winLanguage,\n                                                nameID, winName.length, winNameOffset));\n            }\n        }\n    }\n\n    nameRecords.sort(function(a, b) {\n        return ((a.platformID - b.platformID) ||\n                (a.encodingID - b.encodingID) ||\n                (a.languageID - b.languageID) ||\n                (a.nameID - b.nameID));\n    });\n\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: nameRecords.length},\n        {name: 'stringOffset', type: 'USHORT', value: 6 + nameRecords.length * 12}\n    ]);\n\n    for (var r = 0; r < nameRecords.length; r++) {\n        t.fields.push({name: 'record_' + r, type: 'TABLE', value: nameRecords[r]});\n    }\n\n    t.fields.push({name: 'strings', type: 'LITERAL', value: stringPool});\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":9,\"../table\":11,\"../types\":28}],25:[function(require,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\nvar unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (var i = 0; i < unicodeRanges.length; i += 1) {\n        var range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {};\n    var p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.unicodeRanges = unicodeRanges;\nexports.getUnicodeRange = getUnicodeRange;\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":9,\"../table\":11}],26:[function(require,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {};\n    var p = new parse.Parser(data, start);\n    var i;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                var nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":4,\"../parse\":9,\"../table\":11}],27:[function(require,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = require('../check');\nvar table = require('../table');\n\nvar cmap = require('./cmap');\nvar cff = require('./cff');\nvar head = require('./head');\nvar hhea = require('./hhea');\nvar hmtx = require('./hmtx');\nvar ltag = require('./ltag');\nvar maxp = require('./maxp');\nvar _name = require('./name');\nvar os2 = require('./os2');\nvar post = require('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs.get(glyphIndex);\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    var firstCharIndex;\n    var lastCharIndex = 0;\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs.get(i);\n        var unicode = glyph.unicode | 0;\n        if (firstCharIndex > unicode || firstCharIndex === null) {\n            firstCharIndex = unicode;\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        var position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        flags: 3, // 00000011 (baseline for font at y=0; left sidebearing point at x=0)\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax,\n        lowestRecPPEM: 3\n    });\n\n    var hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        fsSelection: 64, // REGULAR\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.yMax,\n        usWinDescent: Math.abs(globals.yMin),\n        ulCodePageRange1: 1, // FIXME: hard-code Latin 1 support for now\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: Math.round(globals.ascender / 2)}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usDefaultChar: font.hasChar(' ') ? 32 : 0, // Use space as the default character, if available.\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var englishFamilyName = font.getEnglishName('fontFamily');\n    var englishStyleName = font.getEnglishName('fontSubfamily');\n    var englishFullName = englishFamilyName + ' ' + englishStyleName;\n    var postScriptName = font.getEnglishName('postScriptName');\n    if (!postScriptName) {\n        postScriptName = englishFamilyName.replace(/\\s/g, '') + '-' + englishStyleName;\n    }\n\n    var names = {};\n    for (var n in font.names) {\n        names[n] = font.names[n];\n    }\n\n    if (!names.uniqueID) {\n        names.uniqueID = {en: font.getEnglishName('manufacturer') + ':' + englishFullName};\n    }\n\n    if (!names.postScriptName) {\n        names.postScriptName = {en: postScriptName};\n    }\n\n    if (!names.preferredFamily) {\n        names.preferredFamily = font.names.fontFamily;\n    }\n\n    if (!names.preferredSubfamily) {\n        names.preferredSubfamily = font.names.fontSubfamily;\n    }\n\n    var languageTags = [];\n    var nameTable = _name.make(names, languageTags);\n    var ltagTable = (languageTags.length > 0 ? ltag.make(languageTags) : undefined);\n\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.getEnglishName('version'),\n        fullName: englishFullName,\n        familyName: englishFamilyName,\n        weightName: englishStyleName,\n        postScriptName: postScriptName,\n        unitsPerEm: font.unitsPerEm,\n        fontBBox: [0, globals.yMin, globals.ascender, globals.advanceWidthMax]\n    });\n\n    // The order does not matter because makeSfntTable() will sort them.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n    if (ltagTable) {\n        tables.push(ltagTable);\n    }\n\n    var sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    var tableFields = sfntTable.fields;\n    var checkSumAdjusted = false;\n    for (i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":2,\"../table\":11,\"./cff\":12,\"./cmap\":13,\"./head\":17,\"./hhea\":18,\"./hmtx\":19,\"./ltag\":22,\"./maxp\":23,\"./name\":24,\"./os2\":25,\"./post\":26}],28:[function(require,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.CHAR = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function() {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(3);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a five-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(5);\n\nencode.REAL = function(v) {\n    var value = v.toString();\n\n    // Some numbers use an epsilon to encode the value. (e.g. JavaScript will store 0.0000001 as 1e-7)\n    // This code converts it back to a number without the epsilon.\n    var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n    if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(v * epsilon) / epsilon).toString();\n    }\n\n    var nibbles = '';\n    var i;\n    var ii;\n    for (i = 0, ii = value.length; i < ii; i += 1) {\n        var c = value[i];\n        if (c === 'e') {\n            nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (c === '.') {\n            nibbles += 'a';\n        } else if (c === '-') {\n            nibbles += 'e';\n        } else {\n            nibbles += c;\n        }\n    }\n\n    nibbles += (nibbles.length & 1) ? 'f' : 'ff';\n    var out = [30];\n    for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n    }\n\n    return out;\n};\n\nsizeOf.REAL = function(v) {\n    return encode.REAL(v).length;\n};\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\ndecode.UTF16 = function(data, offset, numBytes) {\n    var codePoints = [];\n    var numChars = numBytes / 2;\n    for (var j = 0; j < numChars; j++, offset += 2) {\n        codePoints[j] = data.getUint16(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n// Convert a JavaScript string to UTF16-BE.\nencode.UTF16 = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        var codepoint = v.charCodeAt(i);\n        b.push((codepoint >> 8) & 0xFF);\n        b.push(codepoint & 0xFF);\n    }\n\n    return b;\n};\n\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Data for converting old eight-bit Macintosh encodings to Unicode.\n// This representation is optimized for decoding; encoding is slower\n// and needs more memory. The assumption is that all opentype.js users\n// want to open fonts, but saving a font will be comperatively rare\n// so it can be more expensive. Keyed by IANA character set name.\n//\n// Python script for generating these strings:\n//\n//     s = u''.join([chr(c).decode('mac_greek') for c in range(128, 256)])\n//     print(s.encode('utf-8'))\nvar eightBitMacEncodings = {\n    'x-mac-croatian':  // Python: 'mac_croatian'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø' +\n        '¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n    'x-mac-cyrillic':  // Python: 'mac_cyrillic'\n        'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњ' +\n        'јЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю',\n    'x-mac-gaelic':\n        // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/GAELIC.TXT\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæø' +\n        'ṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n    'x-mac-greek':  // Python: 'mac_greek'\n        'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩ' +\n        'άΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n    'x-mac-icelandic':  // Python: 'mac_iceland'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-inuit':\n        // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/INUIT.TXT\n        'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗ' +\n        'ᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n    'x-mac-ce':  // Python: 'mac_latin2'\n        'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅ' +\n        'ņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n    macintosh:  // Python: 'mac_roman'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-romanian':  // Python: 'mac_romanian'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-turkish':  // Python: 'mac_turkish'\n        'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n        '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\n// Decodes an old-style Macintosh string. Returns either a Unicode JavaScript\n// string, or 'undefined' if the encoding is unsupported. For example, we do\n// not support Chinese, Japanese or Korean because these would need large\n// mapping tables.\ndecode.MACSTRING = function(dataView, offset, dataLength, encoding) {\n    var table = eightBitMacEncodings[encoding];\n    if (table === undefined) {\n        return undefined;\n    }\n\n    var result = '';\n    for (var i = 0; i < dataLength; i++) {\n        var c = dataView.getUint8(offset + i);\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c <= 0x7F) {\n            result += String.fromCharCode(c);\n        } else {\n            result += table[c & 0x7F];\n        }\n    }\n\n    return result;\n};\n\n// Helper function for encode.MACSTRING. Returns a dictionary for mapping\n// Unicode character codes to their 8-bit MacOS equivalent. This table\n// is not exactly a super cheap data structure, but we do not care because\n// encoding Macintosh strings is only rarely needed in typical applications.\nvar macEncodingTableCache = typeof WeakMap === 'function' && new WeakMap();\nvar macEncodingCacheKeys;\nvar getMacEncodingTable = function(encoding) {\n    // Since we use encoding as a cache key for WeakMap, it has to be\n    // a String object and not a literal. And at least on NodeJS 2.10.1,\n    // WeakMap requires that the same String instance is passed for cache hits.\n    if (!macEncodingCacheKeys) {\n        macEncodingCacheKeys = {};\n        for (var e in eightBitMacEncodings) {\n            /*jshint -W053 */  // Suppress \"Do not use String as a constructor.\"\n            macEncodingCacheKeys[e] = new String(e);\n        }\n    }\n\n    var cacheKey = macEncodingCacheKeys[encoding];\n    if (cacheKey === undefined) {\n        return undefined;\n    }\n\n    // We can't do \"if (cache.has(key)) {return cache.get(key)}\" here:\n    // since garbage collection may run at any time, it could also kick in\n    // between the calls to cache.has() and cache.get(). In that case,\n    // we would return 'undefined' even though we do support the encoding.\n    if (macEncodingTableCache) {\n        var cachedTable = macEncodingTableCache.get(cacheKey);\n        if (cachedTable !== undefined) {\n            return cachedTable;\n        }\n    }\n\n    var decodingTable = eightBitMacEncodings[encoding];\n    if (decodingTable === undefined) {\n        return undefined;\n    }\n\n    var encodingTable = {};\n    for (var i = 0; i < decodingTable.length; i++) {\n        encodingTable[decodingTable.charCodeAt(i)] = i + 0x80;\n    }\n\n    if (macEncodingTableCache) {\n        macEncodingTableCache.set(cacheKey, encodingTable);\n    }\n\n    return encodingTable;\n};\n\n// Encodes an old-style Macintosh string. Returns a byte array upon success.\n// If the requested encoding is unsupported, or if the input string contains\n// a character that cannot be expressed in the encoding, the function returns\n// 'undefined'.\nencode.MACSTRING = function(str, encoding) {\n    var table = getMacEncodingTable(encoding);\n    if (table === undefined) {\n        return undefined;\n    }\n\n    var result = [];\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c >= 0x80) {\n            c = table[c];\n            if (c === undefined) {\n                // str contains a Unicode character that cannot be encoded\n                // in the requested encoding.\n                return undefined;\n            }\n        }\n\n        result.push(c);\n    }\n\n    return result;\n};\n\nsizeOf.MACSTRING = function(str, encoding) {\n    var b = encode.MACSTRING(str, encoding);\n    if (b !== undefined) {\n        return b.length;\n    } else {\n        return 0;\n    }\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function(l) {\n    var i;\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    var offset = 1; // First offset is always 1.\n    var offsets = [offset];\n    var data = [];\n    var dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        var v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    var encodedOffsets = [];\n    var offSize = (1 + Math.floor(Math.log(dataSize) / Math.log(2)) / 8) | 0;\n    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        var encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function(m) {\n    var d = [];\n    var keys = Object.keys(m);\n    var length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function(v, type) {\n    var d = [];\n    if (Array.isArray(type)) {\n        for (var i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else if (type === 'number') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'real') {\n            d = d.concat(encode.REAL(v));\n        } else {\n            throw new Error('Unknown operand type ' + type);\n            // FIXME Add support for booleans\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function(ops) {\n    // See encode.MACSTRING for why we don't do \"if (wmm && wmm.has(ops))\".\n    if (wmm) {\n        var cachedValue = wmm.get(ops);\n        if (cachedValue !== undefined) {\n            return cachedValue;\n        }\n    }\n\n    var d = [];\n    var length = ops.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function(v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\nsizeOf.OBJECT = function(v) {\n    var sizeOfFunction = sizeOf[v.type];\n    check.argument(sizeOfFunction !== undefined, 'No sizeOf function for type ' + v.type);\n    return sizeOfFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function(table) {\n    var d = [];\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n\n    return d;\n};\n\nsizeOf.TABLE = function(table) {\n    var numBytes = 0;\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var sizeOfFunction = sizeOf[field.type];\n        check.argument(sizeOfFunction !== undefined, 'No sizeOf function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        numBytes += sizeOfFunction(value);\n    }\n\n    return numBytes;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":2}],29:[function(require,module,exports){\n'use strict';\n\nexports.isBrowser = function() {\n    return typeof window !== 'undefined';\n};\n\nexports.isNode = function() {\n    return typeof window === 'undefined';\n};\n\nexports.nodeBufferToArrayBuffer = function(buffer) {\n    var ab = new ArrayBuffer(buffer.length);\n    var view = new Uint8Array(ab);\n    for (var i = 0; i < buffer.length; ++i) {\n        view[i] = buffer[i];\n    }\n\n    return ab;\n};\n\nexports.arrayBufferToNodeBuffer = function(ab) {\n    var buffer = new Buffer(ab.byteLength);\n    var view = new Uint8Array(ab);\n    for (var i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n    }\n\n    return buffer;\n};\n\nexports.checkArgument = function(expression, message) {\n    if (!expression) {\n        throw message;\n    }\n};\n\n},{}]},{},[8])(8)\n});","/*!\n * Paper.js v0.9.25 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Wed Dec 9 17:33:02 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\n\t\t  var noCanvas =\n\t\t\t  ( typeof process === 'object' && process.browser !== true ) ||\n\t\t\t  ( typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope );\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && (!exclude || !exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tctor.prototype = create(this.prototype);\n\t\t\tctor.base = base;\n\t\t\tdefine(ctor.prototype, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\treturn arguments.length ? this.inject.apply(ctor, arguments) : ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (arguments[i] !== undefined)\n\t\t\t\t\t\treturn arguments[i];\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar keys = Object.keys(props._filtering || props);\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tif (!(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (obj1 && obj2\n\t\t\t\t\t&& typeof obj1 === 'object' && typeof obj2 === 'object') {\n\t\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\t\tvar length = obj1.length;\n\t\t\t\t\tif (length !== obj2.length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tif (!Base.equals(obj1[length], obj2[length]))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar keys = Object.keys(obj1),\n\t\t\t\t\t\tlength = keys.length;\n\t\t\t\t\tif (length !== Object.keys(obj2).length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tvar key = keys[length];\n\t\t\t\t\t\tif (!(obj2.hasOwnProperty(key)\n\t\t\t\t\t\t\t\t&& Base.equals(obj1[key], obj2[key])))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tvar keys = Object.keys(obj);\n\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\tres[key] = Base.serialize(obj[key], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\t}\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data, _isDictionary) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (json.length == 1 && /^#/.test(type))\n\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\ttype = Base.exports[type];\n\t\t\t\tres = [];\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data,\n\t\t\t\t\t\t\tisDictionary));\n\t\t\t\tif (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar types = this._eventTypes,\n\t\t\t\tentry = types && types[type],\n\t\t\t\thandlers = this._callbacks = this._callbacks || {};\n\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\thandlers.push(func);\n\t\t\t\tif (entry && entry.install && handlers.length === 1)\n\t\t\t\t\tentry.install.call(this, type);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar types = this._eventTypes,\n\t\t\tentry = types && types[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry && entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\thandlers = handlers.slice();\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false) {\n\t\t\t\tif (event && event.stop)\n\t\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar types = this._eventTypes,\n\t\t\t\t\tentry = types && types[type],\n\t\t\t\t\tfunc = entry && entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif ( noCanvas ) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar agent = navigator.userAgent.toLowerCase(),\n\t\t\t\tplatform = (/(win)/.exec(agent)\n\t\t\t\t\t\t|| /(mac)/.exec(agent)\n\t\t\t\t\t\t|| /(linux)/.exec(agent)\n\t\t\t\t\t\t|| [])[0],\n\t\t\t\tbrowser = proto.browser = { platform: platform };\n\t\t\tif (platform)\n\t\t\t\tbrowser[platform] = true;\n\t\t\tagent.replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: \"0.9.25\",\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = Base.pick(precision, 5);\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\tfunction clip(value, min, max) {\n\t\treturn value < min ? min : value > max ? max : value;\n\t}\n\n\treturn {\n\t\tTOLERANCE: 1e-6,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tCURVETIME_EPSILON: 4e-7,\n\t\tGEOMETRIC_EPSILON: 2e-7,\n\t\tWINDING_EPSILON: 2e-7,\n\t\tTRIGONOMETRIC_EPSILON: 1e-7,\n\t\tCLIPPING_EPSILON: 1e-7,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn val >= -EPSILON && val <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\teMin = min - EPSILON,\n\t\t\t\teMax = max + EPSILON,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= -2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (D !== 0 && abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar gmC = pow(abs(a * b * c), 1 / 3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\tvar mult = pow(10,\n\t\t\t\t\t\t\tabs(Math.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\tif (abs(B) < EPSILON)\n\t\t\t\t\treturn abs(c) < EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else if (D >= -MACHINE_EPSILON) {\n\t\t\t\tvar Q = D < 0 ? 0 : sqrt(D),\n\t\t\t\t\tR = b + (b < 0 ? -Q : Q);\n\t\t\t\tif (R === 0) {\n\t\t\t\t\tx1 = c / a;\n\t\t\t\t\tx2 = -x1;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = R / a;\n\t\t\t\t\tx2 = c / R;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 > eMin && x1 < eMax))\n\t\t\t\troots[count++] = min == null ? x1 : clip(x1, min, max);\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 > eMin && x2 < eMax))\n\t\t\t\troots[count++] = min == null ? x2 : clip(x2, min, max);\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx, b1, c2;\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (abs(d) < EPSILON) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x;\n\t\t\t\tb1 = tmp + b;\n\t\t\t\tc2 = b1 * x + c;\n\t\t\t\tqd = (tmp + b1) * x + c2;\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x;\n\t\t\t\t\t\tb1 = tmp + b;\n\t\t\t\t\t\tc2 = b1 * x + c;\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2;\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x > min - EPSILON && x < max + EPSILON))\n\t\t\t\troots[count++] = min == null ? x : clip(x, min, max);\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar UID = {\n\t_id: 1,\n\t_pools: {},\n\n\tget: function(ctor) {\n\t\tif (ctor) {\n\t\t\tvar name = ctor._class,\n\t\t\t\tpool = this._pools[name];\n\t\t\tif (!pool)\n\t\t\t\tpool = this._pools[name] = { _id: 1 };\n\t\t\treturn pool._id++;\n\t\t} else {\n\t\t\treturn this._id++;\n\t\t}\n\t}\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * cos - point.y * sin,\n\t\t\tpoint.x * sin + point.y * cos\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\ttolerance = Base.read(arguments);\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisCollinear: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isCollinear(this.x, this.y, point.x, point.y);\n\t},\n\n\tisColinear: '#isCollinear',\n\n\tisOrthogonal: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isOrthogonal(this.x, this.y, point.x, point.y);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tscale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n\t\treturn new Point(\n\t\t\tpoint.x * scale,\n\t\t\tpoint.y * scale\n\t\t);\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t},\n\n\t\tisCollinear: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * y2 - y1 * x2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-7;\n\t\t},\n\n\t\tisOrthogonal: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * x2 + y1 * y2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-7;\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n},\nnew function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = min.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point, isInfinite) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true, isInfinite);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tisCollinear: function(line) {\n\t\treturn Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tisOrthogonal: function(line) {\n\t\treturn Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tstatics: {\n\t\tintersect: function(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tv1x -= p1x;\n\t\t\t\tv1y -= p1y;\n\t\t\t\tv2x -= p2x;\n\t\t\t\tv2y -= p2y;\n\t\t\t}\n\t\t\tvar cross = v1x * v2y - v1y * v2x;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = p1x - p2x,\n\t\t\t\t\tdy = p1y - p2y,\n\t\t\t\t\tu1 = (v2x * dy - v2y * dx) / cross,\n\t\t\t\t\tu2 = (v1x * dy - v1y * dx) / cross,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\tuMin = -epsilon,\n\t\t\t\t\tuMax = 1 + epsilon;\n\t\t\t\tif (isInfinite\n\t\t\t\t\t\t|| uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n\t\t\t\t\tif (!isInfinite) {\n\t\t\t\t\t\tu1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n\t\t\t\t\t}\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\tp1x + u1 * v1x,\n\t\t\t\t\t\t\tp1y + u1 * v1y);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector, isInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0 && !isInfinite) {\n\t\t\t\tccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n\t\t\t\tif (ccw >= 0 && ccw <= 1)\n\t\t\t\t\tccw = 0;\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn vx === 0 ? vy > 0 ? x - px : px - x\n\t\t\t\t : vy === 0 ? vx < 0 ? y - py : py - y\n\t\t\t\t : ((x-px) * vy - (y-py) * vx) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = UID.get();\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = UID.get();\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, project: true, parent: true },\n\t\t\t\t\ttrue);\n\t\treturn hasProps;\n\t},\n\n\t_events: Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\tfunction(name) {\n\t\t\tthis[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis.getView()._installEvent(type);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis.getView()._uninstallEvent(type);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.getView()._animateItem(this, true);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.getView()._animateItem(this, false);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLoad: {}\n\t\t}\n\t),\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length === 0)\n\t\t\treturn new Rectangle();\n\t\tItem._updateBoundsCache(this, cacheItem);\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width !== 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height !== 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tItem._updateBoundsCache(this._parent || this._parentSymbol, cacheItem);\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_updateBoundsCache: function(parent, item) {\n\t\t\tif (parent) {\n\t\t\t\tvar id = item._id,\n\t\t\t\t\tref = parent._boundsCache = parent._boundsCache || {\n\t\t\t\t\t\tids: {},\n\t\t\t\t\t\tlist: []\n\t\t\t\t\t};\n\t\t\t\tif (!ref.ids[id]) {\n\t\t\t\t\tref.list.push(item);\n\t\t\t\t\tref.ids[id] = item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++){\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert, includeMatrix) {\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide'],\n\t\t\tchildren = this._children;\n\t\tcopy.setStyle(this._style);\n\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\tcopy.addChild(children[i].clone(false), true);\n\t\t}\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tif (includeMatrix !== false)\n\t\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy.setApplyMatrix(this._applyMatrix);\n\t\tcopy.setPivot(this._pivot);\n\t\tcopy.setSelected(this._selected);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\tif (!size.isZero()) {\n\t\t\tvar canvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\t\tctx = canvas.getContext('2d'),\n\t\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\t\tctx.save();\n\t\t\tmatrix.applyToContext(ctx);\n\t\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\t\tctx.restore();\n\t\t\traster.setCanvas(canvas);\n\t\t}\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(), null,\n\t\t\t\t_matrix || item._matrix, true).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 1e-6)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tvar type = typeof name;\n\t\tif (type === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (type === 'function') {\n\t\t\treturn name(this);\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param && typeof match === 'object') {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect = bounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: !!inside,\n\t\t\t\t\toverlapping: !!overlapping,\n\t\t\t\t\trect: rect,\n\t\t\t\t\tpath: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param && param.items,\n\t\t\t\trect = param && param.rect;\n\t\t\tmatrix = rect && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (rect) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!rect.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(param.inside && rect.contains(bounds))\n\t\t\t\t\t\t\t&& !(param.overlapping && (bounds.contains(rect)\n\t\t\t\t\t\t\t\t|| param.path.intersects(child, childMatrix))))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisSibling: function(item) {\n\t\treturn this._parent === item._parent;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio || 1,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2,\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = this._clone(new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t}), insert);\n\t\tif (paper.settings.applyMatrix)\n\t\t\tpath.setApplyMatrix(true);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tcrossOrigin: null,\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\tcopy._crossOrigin = this._crossOrigin;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\tcrossOrigin = this._crossOrigin,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\timage = document.getElementById(src) || new Image();\n\t\tif (crossOrigin)\n\t\t\timage.crossOrigin = crossOrigin;\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, { load: loaded });\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetCrossOrigin: function() {\n\t\treturn this._image && this._image.crossOrigin || this._crossOrigin || '';\n\t},\n\n\tsetCrossOrigin: function(crossOrigin) {\n\t\tthis._crossOrigin = crossOrigin;\n\t\tif (this._image)\n\t\t\tthis._image.crossOrigin = crossOrigin;\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif ('point' in arg0) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this._point, this._handleIn, this._handleOut]\n\t\t\t\t: this._point,\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\thasHandles: function() {\n\t\treturn !this._handleIn.isZero() || !this._handleOut.isZero();\n\t},\n\n\tclearHandles: function() {\n\t\tthis._handleIn.set(0, 0);\n\t\tthis._handleOut.set(0, 0);\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn this._index === 0;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._index === path._segments.length - 1 || false;\n\t},\n\n\treverse: function() {\n\t\tvar handleIn = this._handleIn,\n\t\t\thandleOut = this._handleOut,\n\t\t\tinX = handleIn._x,\n\t\t\tinY = handleIn._y;\n\t\thandleIn.set(handleOut._x, handleOut._y);\n\t\thandleOut.set(inX, inY);\n\t},\n\n\treversed: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(segment0, segment1, coef) {\n\t\tvar dxPoint = segment1._point._x - segment0._point._x,\n\t\t\tdyPoint = segment1._point._y - segment0._point._y,\n\t\t\tdxHandleIn = segment1._handleIn._x - segment0._handleIn._x,\n\t\t\tdyHandleIn = segment1._handleIn._y - segment0._handleIn._y,\n\t\t\tdxHandleOut = segment1._handleOut._x - segment0._handleOut._x,\n\t\t\tdyHandleOut = segment1._handleOut._y - segment0._handleOut._y;\n\n\t\tthis._point._x = segment0._point._x + dxPoint * coef;\n\t\tthis._point._y = segment0._point._y + dyPoint * coef;\n\t\tthis._handleIn._x = segment0._handleIn._x + dxHandleIn * coef;\n\t\tthis._handleIn._y = segment0._handleIn._y + dyHandleIn * coef;\n\t\tthis._handleOut._x = segment0._handleOut._x + dxHandleOut * coef;\n\t\tthis._handleOut._y = segment0._handleOut._y + dyHandleOut * coef;\n\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length,\n\t\t\tseg1, seg2,\n\t\t\tpoint1, point2,\n\t\t\thandle1, handle2;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tseg1 = arg1;\n\t\t\tseg2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tseg1 = new Segment();\n\t\t\tseg2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tif ('segment1' in arg0) {\n\t\t\t\tseg1 = new Segment(arg0.segment1);\n\t\t\t\tseg2 = new Segment(arg0.segment2);\n\t\t\t} else if ('point1' in arg0) {\n\t\t\t\tpoint1 = arg0.point1;\n\t\t\t\thandle1 = arg0.handle1;\n\t\t\t\thandle2 = arg0.handle2;\n\t\t\t\tpoint2 = arg0.point2;\n\t\t\t} else if (Array.isArray(arg0)) {\n\t\t\t\tpoint1 = [arg0[0], arg0[1]];\n\t\t\t\tpoint2 = [arg0[6], arg0[7]];\n\t\t\t\thandle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n\t\t\t\thandle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n\t\t\t}\n\t\t} else if (count === 2) {\n\t\t\tseg1 = new Segment(arg0);\n\t\t\tseg2 = new Segment(arg1);\n\t\t} else if (count === 4) {\n\t\t\tpoint1 = arg0;\n\t\t\thandle1 = arg1;\n\t\t\thandle2 = arg2;\n\t\t\tpoint2 = arg3;\n\t\t} else if (count === 8) {\n\t\t\tpoint1 = [arg0, arg1];\n\t\t\tpoint2 = [arg6, arg7];\n\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t}\n\t\tthis._segment1 = seg1 || new Segment(point1, null, handle1);\n\t\tthis._segment2 = seg2 || new Segment(point2, handle2, null);\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this.getPoint1(), this.getHandle1(), this.getHandle2(),\n\t\t\t\t\tthis.getPoint2()]\n\t\t\t\t: [this.getPoint1(), this.getPoint2()],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn this._segment1._index === 0;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._segment1._index === path._curves.length - 1\n\t\t\t\t|| false;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null)\n\t\t\tthis._length = Curve.getLength(this.getValues(), 0, 1);\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetLine: function() {\n\t\treturn new Line(this._segment1._point, this._segment2._point);\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve._getIntersections(this.getValues(),\n\t\t\t\tcurve && curve !== this ? curve.getValues() : null,\n\t\t\t\tthis, curve, [], {});\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, _setHandles) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tres = null;\n\t\tif (parameter >= tMin && parameter <= tMax) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1],\n\t\t\t\tsetHandles = _setHandles || this.hasHandles(),\n\t\t\t\tsegment1 = this._segment1,\n\t\t\t\tsegment2 = this._segment2,\n\t\t\t\tpath = this._path;\n\t\t\tif (setHandles) {\n\t\t\t\tsegment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tsegment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\tsetHandles && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\tsetHandles && new Point(right[2] - x, right[3] - y));\n\t\t\tif (path) {\n\t\t\t\tpath.insert(segment1._index + 1, segment);\n\t\t\t\tres = this.getNext();\n\t\t\t} else {\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, segment2);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treversed: function() {\n\t\treturn new Curve(this._segment2.reversed(), this._segment1.reversed());\n\t},\n\n\tclearHandles: function() {\n\t\tthis._segment1._handleOut.set(0, 0);\n\t\tthis._segment2._handleIn.set(0, 0);\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, point) {\n\t\tvar p1 = new Point(v[0], v[1]),\n\t\t\tp2 = new Point(v[6], v[7]),\n\t\t\tepsilon = 1e-12,\n\t\t\tt = point.isClose(p1, epsilon) ? 0\n\t\t\t  : point.isClose(p2, epsilon) ? 1\n\t\t\t  : null;\n\t\tif (t !== null)\n\t\t\treturn t;\n\t\tvar coords = [point.x, point.y],\n\t\t\troots = [],\n\t\t\tgeomEpsilon = 2e-7;\n\t\tfor (var c = 0; c < 2; c++) {\n\t\t\tvar count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tt = roots[i];\n\t\t\t\tif (point.isClose(Curve.getPoint(v, t), geomEpsilon))\n\t\t\t\t\treturn t;\n\t\t\t}\n\t\t}\n\t\treturn point.isClose(p1, geomEpsilon) ? 0\n\t\t\t : point.isClose(p2, geomEpsilon) ? 1\n\t\t\t : null;\n\t},\n\n\tgetNearestParameter: function(v, point) {\n\t\tif (Curve.isStraight(v)) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tp2x = v[6], p2y = v[7],\n\t\t\t\tvx = p2x - p1x, vy = p2y - p1y,\n\t\t\t\tdet = vx * vx + vy * vy;\n\t\t\tif (det === 0)\n\t\t\t\treturn 0;\n\t\t\tvar u = ((point.x - p1x) * vx + (point.y - p1y) * vy) / det;\n\t\t\treturn u < 1e-12 ? 0\n\t\t\t\t : u > 0.999999999999 ? 1\n\t\t\t\t : Curve.getParameterOf(v,\n\t\t\t\t\tnew Point(p1x + u * vx, p1y + u * vy));\n\t\t}\n\n\t\tvar count = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(Curve.getPoint(v, t), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 4e-7) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\treturn minT;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tvar flip = from > to;\n\t\tif (flip) {\n\t\t\tvar tmp = from;\n\t\t\tfrom = to;\n\t\t\tto = tmp;\n\t\t}\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn flip\n\t\t\t\t? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]]\n\t\t\t\t: v;\n\t},\n\n\thasHandles: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn !(isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]));\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\th1x = (v[2] + p1x) / 2,\n\t\t\th1y = (v[3] + p1y) / 2,\n\t\t\th2x = (v[4] + v[6]) / 2,\n\t\t\th2y = (v[5] + v[7]) / 2;\n\t\treturn 6 * ((p1x - h1x) * (h1y + p1y)\n\t\t\t\t  + (h1x - h2x) * (h2y + h1y)\n\t\t\t\t  + (h2x - p2x) * (p2y + h2y)) / 10;\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(\n\t['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tvar path = this._path;\n\t\t\t\tbounds = this._bounds[name] = Path[name](\n\t\t\t\t\t\t[this._segment1, this._segment2], false,\n\t\t\t\t\t\tpath && path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each({\n\tisStraight: function(l, h1, h2) {\n\t\tif (h1.isZero() && h2.isZero()) {\n\t\t\treturn true;\n\t\t} else if (l.isZero()) {\n\t\t\treturn false;\n\t\t} else if (h1.isCollinear(l) && h2.isCollinear(l)) {\n\t\t\tvar div = l.dot(l),\n\t\t\t\tp1 = l.dot(h1) / div,\n\t\t\t\tp2 = l.dot(h2) / div;\n\t\t\treturn p1 >= 0 && p1 <= 1 && p2 <= 0 && p2 >= -1;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisLinear: function(l, h1, h2) {\n\t\tvar third = l.divide(3);\n\t\treturn h1.equals(third) && h2.negate().equals(third);\n\t}\n}, function(test, name) {\n\tthis[name] = function() {\n\t\tvar seg1 = this._segment1,\n\t\t\tseg2 = this._segment2;\n\t\treturn test(seg2._point.subtract(seg1._point),\n\t\t\t\tseg1._handleOut, seg2._handleIn);\n\t};\n\n\tthis.statics[name] = function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn test(new Point(p2x - p1x, p2y - p1y),\n\t\t\t\tnew Point(v[2] - p1x, v[3] - p1y),\n\t\t\t\tnew Point(v[4] - p2x, v[5] - p2y));\n\t};\n}, {\n\tstatics: {},\n\n\thasHandles: function() {\n\t\treturn !this._segment1._handleOut.isZero()\n\t\t\t\t|| !this._segment2._handleIn.isZero();\n\t},\n\n\tisCollinear: function(curve) {\n\t\treturn curve && this.isStraight() && curve.isStraight()\n\t\t\t\t&& this.getLine().isCollinear(curve.getLine());\n\t},\n\n\tisHorizontal: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).y)\n\t\t\t\t< 1e-7;\n\t},\n\n\tisVertical: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).x)\n\t\t\t\t< 1e-7;\n\t}\n}), {\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\treturn Curve.getParameterOf(this.getValues(), Point.read(arguments));\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar t = isParameter ? offset : this.getParameterAt(offset);\n\t\treturn t != null && t >= 0 && t <= 1\n\t\t\t\t? new CurveLocation(this, t)\n\t\t\t\t: null;\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tt = Curve.getNearestParameter(values, point),\n\t\t\tpt = Curve.getPoint(values, t);\n\t\treturn new CurveLocation(this, t, pt, null, point.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n},\nnew function() {\n\tvar methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent',\n\t\t'getWeightedNormal', 'getCurvature'];\n\treturn Base.each(methods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve[name](values, isParameter ? offset\n\t\t\t\t\t: Curve.getParameterAt(values, offset, 0));\n\t\t};\n\t}, {\n\t\tstatics: {\n\t\t\tevaluateMethods: methods\n\t\t}\n\t});\n},\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\tfunction evaluate(v, t, type, normalized) {\n\t\tif (t == null || t < 0 || t > 1)\n\t\t\treturn null;\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tMin || t > tMax)) {\n\t\t\tvar isZero = t < tMin;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tMin) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > tMax) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (normalized) {\n\t\t\t\t\tif (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n\t\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t\t}\n\t\t\t\t\tvar len = Math.sqrt(x * x + y * y);\n\t\t\t\t\tif (len) {\n\t\t\t\t\t\tx /= len;\n\t\t\t\t\t\ty /= len;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by,\n\t\t\t\t\t\td = Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t\tx = d !== 0 ? (x * y2 - y * x2) / d : 0;\n\t\t\t\t\ty = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t}\n\n\treturn { statics: {\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tif (a === 0 && b === 1 && Curve.isStraight(v)) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0;\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar abs = Math.abs,\n\t\t\t\tforward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (abs(offset - rangeLength) < 1e-12) {\n\t\t\t\treturn forward ? b : a;\n\t\t\t} else if (abs(offset) > rangeLength) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 32,\n\t\t\t\t\t1e-12);\n\t\t},\n\n\t\tgetPoint: function(v, t) {\n\t\t\treturn evaluate(v, t, 0, false);\n\t\t},\n\n\t\tgetTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, true);\n\t\t},\n\n\t\tgetWeightedTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, false);\n\t\t},\n\n\t\tgetNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, true);\n\t\t},\n\n\t\tgetWeightedNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, false);\n\t\t},\n\n\t\tgetCurvature: function(v, t) {\n\t\t\treturn evaluate(v, t, 3, false).x;\n\t\t}\n\t}};\n},\nnew function() {\n\n\tfunction addLocation(locations, param, v1, c1, t1, p1, v2, c2, t2, p2,\n\t\t\toverlap) {\n\t\tvar startConnected = param.startConnected,\n\t\t\tendConnected = param.endConnected,\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 == null)\n\t\t\tt1 = Curve.getParameterOf(v1, p1);\n\t\tif (t1 !== null && t1 >= (startConnected ? tMin : 0) &&\n\t\t\tt1 <= (endConnected ? tMax : 1)) {\n\t\t\tif (t2 == null)\n\t\t\t\tt2 = Curve.getParameterOf(v2, p2);\n\t\t\tif (t2 !== null && t2 >= (endConnected ? tMin : 0) &&\n\t\t\t\tt2 <= (startConnected ? tMax : 1)) {\n\t\t\t\tvar renormalize = param.renormalize;\n\t\t\t\tif (renormalize) {\n\t\t\t\t\tvar res = renormalize(t1, t2);\n\t\t\t\t\tt1 = res[0];\n\t\t\t\t\tt2 = res[1];\n\t\t\t\t}\n\t\t\t\tvar loc1 = new CurveLocation(c1, t1,\n\t\t\t\t\t\tp1 || Curve.getPoint(v1, t1), overlap),\n\t\t\t\t\tloc2 = new CurveLocation(c2, t2,\n\t\t\t\t\t\tp2 || Curve.getPoint(v2, t2), overlap),\n\t\t\t\t\tflip = loc1.getPath() === loc2.getPath()\n\t\t\t\t\t\t&& loc1.getIndex() > loc2.getIndex(),\n\t\t\t\t\tloc = flip ? loc2 : loc1,\n\t\t\t\t\tinclude = param.include;\n\t\t\t\tloc1._intersection = loc2;\n\t\t\t\tloc2._intersection = loc1;\n\t\t\t\tif (!include || include(loc)) {\n\t\t\t\t\tCurveLocation.insert(locations, loc, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addCurveIntersections(v1, v2, c1, c2, locations, param,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (++recursion >= 24)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\thull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\ttop = hull[0],\n\t\t\tbottom = hull[1],\n\t\t\ttMinClip,\n\t\t\ttMaxClip;\n\t\tif ((tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null ||\n\t\t\t(tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(),\n\t\t\t\tdMin, dMax)) == null)\n\t\t\treturn;\n\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\tvar tDiff = tMaxClip - tMinClip,\n\t\t\ttMinNew = tMin + (tMax - tMin) * tMinClip,\n\t\t\ttMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, c2, c1, locations, param,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, c2, c1, locations, param,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew)\n\t\t\t\t< 1e-7) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tv1 = c1.getValues();\n\t\t\tv2 = c2.getValues();\n\t\t\taddLocation(locations, param,\n\t\t\t\treverse ? v2 : v1, reverse ? c2 : c1, reverse ? t2 : t1, null,\n\t\t\t\treverse ? v1 : v2, reverse ? c1 : c2, reverse ? t1 : t2, null);\n\t\t} else if (tDiff > 1e-12) {\n\t\t\taddCurveIntersections(v2, v1, c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tdist1 = dq1 - (2 * dq0 + dq3) / 3,\n\t\t\tdist2 = dq2 - (dq0 + 2 * dq3) / 3,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t} else {\n\t\t\tvar distRatio = dist1 / dist2;\n\t\t\thull = [\n\t\t\t\tdistRatio >= 2 ? [p0, p1, p3]\n\t\t\t\t: distRatio <= 0.5 ? [p0, p2, p3]\n\t\t\t\t: [p0, p1, p2, p3],\n\t\t\t\t[p0, p3]\n\t\t\t];\n\t\t}\n\t\treturn (dist1 || dist2) < 0 ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold) {\n\t\t\t\treturn qy === threshold ? qx\n\t\t\t\t\t\t: px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\t}\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, c1, c2, locations, param) {\n\t\tvar flip = Curve.isStraight(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\tx * sin + y * cos);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tpc = Curve.getPoint(vc, tc),\n\t\t\t\ttl = Curve.getParameterOf(vl, pc);\n\t\t\tif (tl !== null) {\n\t\t\t\tvar pl = Curve.getPoint(vl, tl),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\tif (!param.endConnected || t2 > Numerical.CURVETIME_EPSILON) {\n\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\tv1, c1, t1, flip ? pl : pc,\n\t\t\t\t\t\t\tv2, c2, t2, flip ? pc : pl);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, c1, c2, locations, param) {\n\t\tvar pt = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (pt) {\n\t\t\taddLocation(locations, param, v1, c1, null, pt, v2, c2, null, pt);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\t_getIntersections: function(v1, v2, c1, c2, locations, param) {\n\t\t\tif (!v2) {\n\t\t\t\treturn Curve._getSelfIntersection(v1, c1, locations, param);\n\t\t\t}\n\t\t\tvar c1p1x = v1[0], c1p1y = v1[1],\n\t\t\t\tc1p2x = v1[6], c1p2y = v1[7],\n\t\t\t\tc2p1x = v2[0], c2p1y = v2[1],\n\t\t\t\tc2p2x = v2[6], c2p2y = v2[7],\n\t\t\t\tc1s1x = (3 * v1[2] + c1p1x) / 4,\n\t\t\t\tc1s1y = (3 * v1[3] + c1p1y) / 4,\n\t\t\t\tc1s2x = (3 * v1[4] + c1p2x) / 4,\n\t\t\t\tc1s2y = (3 * v1[5] + c1p2y) / 4,\n\t\t\t\tc2s1x = (3 * v2[2] + c2p1x) / 4,\n\t\t\t\tc2s1y = (3 * v2[3] + c2p1y) / 4,\n\t\t\t\tc2s2x = (3 * v2[4] + c2p2x) / 4,\n\t\t\t\tc2s2y = (3 * v2[5] + c2p2y) / 4,\n\t\t\t\tmin = Math.min,\n\t\t\t\tmax = Math.max;\n\t\t\tif (!(\tmax(c1p1x, c1s1x, c1s2x, c1p2x) >=\n\t\t\t\t\tmin(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\tmin(c1p1x, c1s1x, c1s2x, c1p2x) <=\n\t\t\t\t\tmax(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\tmax(c1p1y, c1s1y, c1s2y, c1p2y) >=\n\t\t\t\t\tmin(c2p1y, c2s1y, c2s2y, c2p2y) &&\n\t\t\t\t\tmin(c1p1y, c1s1y, c1s2y, c1p2y) <=\n\t\t\t\t\tmax(c2p1y, c2s1y, c2s2y, c2p2y)))\n\t\t\t\treturn locations;\n\t\t\tif (!param.startConnected && !param.endConnected) {\n\t\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\t\tif (overlaps) {\n\t\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\t\tvar overlap = overlaps[i];\n\t\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\tv1, c1, overlap[0], null,\n\t\t\t\t\t\t\tv2, c2, overlap[1], null, true);\n\t\t\t\t\t}\n\t\t\t\t\treturn locations;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar straight1 = Curve.isStraight(v1),\n\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\tstraight = straight1 && straight2,\n\t\t\t\tepsilon = 1e-12,\n\t\t\t\tbefore = locations.length;\n\t\t\t(straight\n\t\t\t\t? addLineIntersection\n\t\t\t\t: straight1 || straight2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, param,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (straight && locations.length > before)\n\t\t\t\treturn locations;\n\t\t\tvar c1p1 = new Point(c1p1x, c1p1y),\n\t\t\t\tc1p2 = new Point(c1p2x, c1p2y),\n\t\t\t\tc2p1 = new Point(c2p1x, c2p1y),\n\t\t\t\tc2p2 = new Point(c2p2x, c2p2y);\n\t\t\tif (c1p1.isClose(c2p1, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 0, c2p1);\n\t\t\tif (!param.startConnected && c1p1.isClose(c2p2, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 1, c2p2);\n\t\t\tif (!param.endConnected && c1p2.isClose(c2p1, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 0, c2p1);\n\t\t\tif (c1p2.isClose(c2p2, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 1, c2p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\t_getSelfIntersection: function(v1, c1, locations, param) {\n\t\t\tvar p1x = v1[0], p1y = v1[1],\n\t\t\t\th1x = v1[2], h1y = v1[3],\n\t\t\t\th2x = v1[4], h2y = v1[5],\n\t\t\t\tp2x = v1[6], p2y = v1[7];\n\t\t\tvar line = new Line(p1x, p1y, p2x, p2y, false),\n\t\t\t\tside1 = line.getSide(new Point(h1x, h1y), true),\n\t\t\t\tside2 = line.getSide(new Point(h2x, h2y), true);\n\t\t\tif (side1 === side2) {\n\t\t\t\tvar edgeSum = (p1x - h2x) * (h1y - p2y)\n\t\t\t\t\t\t\t+ (h1x - p2x) * (h2y - p1y);\n\t\t\t\tif (edgeSum * side1 > 0)\n\t\t\t\t\treturn locations;\n\t\t\t}\n\t\t\tvar ax = p2x - 3 * h2x + 3 * h1x - p1x,\n\t\t\t\tbx = h2x - 2 * h1x + p1x,\n\t\t\t\tcx = h1x - p1x,\n\t\t\t\tay = p2y - 3 * h2y + 3 * h1y - p1y,\n\t\t\t\tby = h2y - 2 * h1y + p1y,\n\t\t\t\tcy = h1y - p1y,\n\t\t\t\tac = ay * cx - ax * cy,\n\t\t\t\tab = ay * bx - ax * by,\n\t\t\t\tbc = by * cx - bx * cy;\n\t\t\tif (ac * ac - 4 * ab * bc < 0) {\n\t\t\t\tvar roots = [],\n\t\t\t\t\ttSplit,\n\t\t\t\t\tcount = Numerical.solveCubic(\n\t\t\t\t\t\t\tax * ax\t + ay * ay,\n\t\t\t\t\t\t\t3 * (ax * bx + ay * by),\n\t\t\t\t\t\t\t2 * (bx * bx + by * by) + ax * cx + ay * cy,\n\t\t\t\t\t\t\tbx * cx + by * cy,\n\t\t\t\t\t\t\troots, 0, 1);\n\t\t\t\tif (count > 0) {\n\t\t\t\t\tfor (var i = 0, maxCurvature = 0; i < count; i++) {\n\t\t\t\t\t\tvar curvature = Math.abs(\n\t\t\t\t\t\t\t\tc1.getCurvatureAt(roots[i], true));\n\t\t\t\t\t\tif (curvature > maxCurvature) {\n\t\t\t\t\t\t\tmaxCurvature = curvature;\n\t\t\t\t\t\t\ttSplit = roots[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar parts = Curve.subdivide(v1, tSplit);\n\t\t\t\t\tparam.endConnected = true;\n\t\t\t\t\tparam.renormalize = function(t1, t2) {\n\t\t\t\t\t\treturn [t1 * tSplit, t2 * (1 - tSplit) + tSplit];\n\t\t\t\t\t};\n\t\t\t\t\tCurve._getIntersections(parts[0], parts[1], c1, c1,\n\t\t\t\t\t\t\tlocations, param);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn locations;\n\t\t},\n\n\t\tgetOverlaps: function(v1, v2) {\n\t\t\tvar abs = Math.abs,\n\t\t\t\ttimeEpsilon = 4e-7,\n\t\t\t\tgeomEpsilon = 2e-7,\n\t\t\t\tstraight1 = Curve.isStraight(v1),\n\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\tstraight =\tstraight1 && straight2;\n\n\t\t\tfunction getLineLengthSquared(v) {\n\t\t\t\tvar x = v[6] - v[0],\n\t\t\t\t\ty = v[7] - v[1];\n\t\t\t\treturn x * x + y * y;\n\t\t\t}\n\n\t\t\tif (straight) {\n\t\t\t\tvar flip = getLineLengthSquared(v1) < getLineLengthSquared(v2),\n\t\t\t\t\tl1 = flip ? v2 : v1,\n\t\t\t\t\tl2 = flip ? v1 : v2,\n\t\t\t\t\tline = new Line(l1[0], l1[1], l1[6], l1[7]);\n\t\t\t\tif (line.getDistance(new Point(l2[0], l2[1])) > geomEpsilon ||\n\t\t\t\t\tline.getDistance(new Point(l2[6], l2[7])) > geomEpsilon)\n\t\t\t\t\treturn null;\n\t\t\t} else if (straight1 ^ straight2) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar v = [v1, v2],\n\t\t\t\tpairs = [];\n\t\t\tfor (var i = 0, t1 = 0;\n\t\t\t\t\ti < 2 && pairs.length < 2;\n\t\t\t\t\ti += t1 === 0 ? 0 : 1, t1 = t1 ^ 1) {\n\t\t\t\tvar t2 = Curve.getParameterOf(v[i ^ 1], new Point(\n\t\t\t\t\t\tv[i][t1 === 0 ? 0 : 6],\n\t\t\t\t\t\tv[i][t1 === 0 ? 1 : 7]));\n\t\t\t\tif (t2 != null) {\n\t\t\t\t\tvar pair = i === 0 ? [t1, t2] : [t2, t1];\n\t\t\t\t\tif (pairs.length === 0 ||\n\t\t\t\t\t\tabs(pair[0] - pairs[0][0]) > timeEpsilon &&\n\t\t\t\t\t\tabs(pair[1] - pairs[0][1]) > timeEpsilon)\n\t\t\t\t\t\tpairs.push(pair);\n\t\t\t\t}\n\t\t\t\tif (i === 1 && pairs.length === 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (pairs.length !== 2) {\n\t\t\t\tpairs = null;\n\t\t\t} else if (!straight) {\n\t\t\t\tvar o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n\t\t\t\t\to2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n\t\t\t\tif (abs(o2[2] - o1[2]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[3] - o1[3]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[4] - o1[4]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[5] - o1[5]) > geomEpsilon)\n\t\t\t\t\tpairs = null;\n\t\t\t}\n\t\t\treturn pairs;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point,\n\t\t\t_overlap, _distance) {\n\t\tif (parameter > 0.9999996) {\n\t\t\tvar next = curve.getNext();\n\t\t\tif (next) {\n\t\t\t\tparameter = 0;\n\t\t\t\tcurve = next;\n\t\t\t}\n\t\t}\n\t\tthis._id = UID.get(CurveLocation);\n\t\tthis._setCurve(curve);\n\t\tthis._parameter = parameter;\n\t\tthis._point = point || curve.getPointAt(parameter, true);\n\t\tthis._overlap = _overlap;\n\t\tthis._distance = _distance;\n\t\tthis._intersection = this._next = this._prev = null;\n\t},\n\n\t_setCurve: function(curve) {\n\t\tvar path = curve._path;\n\t\tthis._version = path ? path._version : 0;\n\t\tthis._curve = curve;\n\t\tthis._segment = null;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t},\n\n\t_setSegment: function(segment) {\n\t\tthis._setCurve(segment.getCurve());\n\t\tthis._segment = segment;\n\t\tthis._parameter = segment === this._segment1 ? 0 : 1;\n\t\tthis._point = segment._point.clone();\n\t},\n\n\tgetSegment: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tsegment = this._segment;\n\t\tif (!segment) {\n\t\t\tvar parameter = this.getParameter();\n\t\t\tif (parameter === 0) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (parameter === 1) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else if (parameter != null) {\n\t\t\t\tsegment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tthis._segment = segment;\n\t\t}\n\t\treturn segment;\n\t},\n\n\tgetCurve: function() {\n\t\tvar curve = this._curve,\n\t\t\tpath = curve && curve._path,\n\t\t\tthat = this;\n\t\tif (path && path._version !== this._version) {\n\t\t\tcurve = this._parameter = this._curve = this._offset = null;\n\t\t}\n\n\t\tfunction trySegment(segment) {\n\t\t\tvar curve = segment && segment.getCurve();\n\t\t\tif (curve && (that._parameter = curve.getParameterOf(that._point))\n\t\t\t\t\t!= null) {\n\t\t\t\tthat._setCurve(curve);\n\t\t\t\tthat._segment = segment;\n\t\t\t\treturn curve;\n\t\t\t}\n\t\t}\n\n\t\treturn curve\n\t\t\t|| trySegment(this._segment)\n\t\t\t|| trySegment(this._segment1)\n\t\t\t|| trySegment(this._segment2.getPrevious());\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetParameter: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this._parameter;\n\t\treturn curve && parameter == null\n\t\t\t? this._parameter = curve.getParameterOf(this._point)\n\t\t\t: parameter;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tgetOffset: function() {\n\t\tvar offset = this._offset;\n\t\tif (offset == null) {\n\t\t\toffset = 0;\n\t\t\tvar path = this.getPath(),\n\t\t\t\tindex = this.getIndex();\n\t\t\tif (path && index != null) {\n\t\t\t\tvar curves = path.getCurves();\n\t\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\t\toffset += curves[i].getLength();\n\t\t\t}\n\t\t\tthis._offset = offset += this.getCurveOffset();\n\t\t}\n\t\treturn offset;\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetIntersection: function() {\n\t\treturn this._intersection;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tres = null;\n\t\tif (curve) {\n\t\t\tres = curve.divide(this.getParameter(), true);\n\t\t\tif (res)\n\t\t\t\tthis._setSegment(res._segment1);\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve ? curve.split(this.getParameter(), true) : null;\n\t},\n\n\tequals: function(loc, _ignoreOther) {\n\t\tvar res = this === loc,\n\t\t\tepsilon = 2e-7;\n\t\tif (!res && loc instanceof CurveLocation\n\t\t\t\t&& this.getPath() === loc.getPath()\n\t\t\t\t&& this.getPoint().isClose(loc.getPoint(), epsilon)) {\n\t\t\tvar c1 = this.getCurve(),\n\t\t\t\tc2 = loc.getCurve(),\n\t\t\t\tabs = Math.abs,\n\t\t\t\tdiff = abs(\n\t\t\t\t\t((c1.isLast() && c2.isFirst() ? -1 : c1.getIndex())\n\t\t\t\t\t\t\t+ this.getParameter()) -\n\t\t\t\t\t((c2.isLast() && c1.isFirst() ? -1 : c2.getIndex())\n\t\t\t\t\t\t\t+ loc.getParameter()));\n\t\t\tres = (diff < 4e-7\n\t\t\t\t|| ((diff = abs(this.getOffset() - loc.getOffset())) < epsilon\n\t\t\t\t\t|| abs(this.getPath().getLength() - diff) < epsilon))\n\t\t\t\t&& (_ignoreOther\n\t\t\t\t\t|| (!this._intersection && !loc._intersection\n\t\t\t\t\t\t|| this._intersection && this._intersection.equals(\n\t\t\t\t\t\t\t\tloc._intersection, true)));\n\t\t}\n\t\treturn res;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tisTouching: function() {\n\t\tvar inter = this._intersection;\n\t\tif (inter && this.getTangent().isCollinear(inter.getTangent())) {\n\t\t\tvar curve1 = this.getCurve(),\n\t\t\t\tcurve2 = inter.getCurve();\n\t\t\treturn !(curve1.isStraight() && curve2.isStraight()\n\t\t\t\t\t&& curve1.getLine().intersect(curve2.getLine()));\n\t\t}\n\t\treturn false;\n\t},\n\n\tisCrossing: function() {\n\t\tvar inter = this._intersection;\n\t\tif (!inter)\n\t\t\treturn false;\n\t\tvar t1 = this.getParameter(),\n\t\t\tt2 = inter.getParameter(),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 >= tMin && t1 <= tMax || t2 >= tMin && t2 <= tMax)\n\t\t\treturn !this.isTouching();\n\t\tvar c2 = this.getCurve(),\n\t\t\tc1 = c2.getPrevious(),\n\t\t\tc4 = inter.getCurve(),\n\t\t\tc3 = c4.getPrevious(),\n\t\t\tPI = Math.PI;\n\t\tif (!c1 || !c3)\n\t\t\treturn false;\n\n\t\tfunction isInRange(angle, min, max) {\n\t\t\treturn min < max\n\t\t\t\t? angle > min && angle < max\n\t\t\t\t: angle > min && angle <= PI || angle >= -PI && angle < max;\n\t\t}\n\n\t\tvar a1 = c1.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\ta2 = c2.getTangentAt(tMin, true).getAngleInRadians(),\n\t\t\ta3 = c3.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\ta4 = c4.getTangentAt(tMin, true).getAngleInRadians();\n\n\t\treturn (isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2))\n\t\t\t&& (isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1));\n\t},\n\n\tisOverlap: function() {\n\t\treturn !!this._overlap;\n\t}\n}, Base.each(Curve.evaluateMethods, function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {\n\tpreserve: true\n}),\nnew function() {\n\n\tfunction insert(locations, loc, merge) {\n\t\tvar length = locations.length,\n\t\t\tl = 0,\n\t\t\tr = length - 1;\n\n\t\tfunction search(index, dir) {\n\t\t\tfor (var i = index + dir; i >= -1 && i <= length; i += dir) {\n\t\t\t\tvar loc2 = locations[((i % length) + length) % length];\n\t\t\t\tif (!loc.getPoint().isClose(loc2.getPoint(),\n\t\t\t\t\t\t2e-7))\n\t\t\t\t\tbreak;\n\t\t\t\tif (loc.equals(loc2))\n\t\t\t\t\treturn loc2;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (l <= r) {\n\t\t\tvar m = (l + r) >>> 1,\n\t\t\t\tloc2 = locations[m],\n\t\t\t\tfound;\n\t\t\tif (merge && (found = loc.equals(loc2) ? loc2\n\t\t\t\t\t: (search(m, -1) || search(m, 1)))) {\n\t\t\t\tif (loc._overlap) {\n\t\t\t\t\tfound._overlap = found._intersection._overlap = true;\n\t\t\t\t}\n\t\t\t\treturn found;\n\t\t\t}\n\t\tvar path1 = loc.getPath(),\n\t\t\tpath2 = loc2.getPath(),\n\t\t\tdiff = path1 === path2\n\t\t\t\t? (loc.getIndex() + loc.getParameter())\n\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t: path1._id - path2._id;\n\t\t\tif (diff < 0) {\n\t\t\t\tr = m - 1;\n\t\t\t} else {\n\t\t\t\tl = m + 1;\n\t\t\t}\n\t\t}\n\t\tlocations.splice(l, 0, loc);\n\t\treturn loc;\n\t}\n\n\treturn { statics: {\n\t\tinsert: insert,\n\n\t\texpand: function(locations) {\n\t\t\tvar expanded = locations.slice();\n\t\t\tfor (var i = 0, l = locations.length; i < l; i++) {\n\t\t\t\tinsert(expanded, locations[i]._intersection, false);\n\t\t\t}\n\t\t\treturn expanded;\n\t\t}\n\t}};\n});\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, include, _matrix, _returnFirst) {\n\t\tvar self = this === path || !path,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = self ? matrix1\n\t\t\t\t: (_matrix || path._matrix).orNullIfIdentity();\n\t\tif (!self && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tvar curves1 = this.getCurves(),\n\t\t\tcurves2 = self ? curves1 : path.getCurves(),\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = self ? length1 : curves2.length,\n\t\t\tvalues2 = [],\n\t\t\tarrays = [],\n\t\t\tlocations,\n\t\t\tpath;\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = self ? values2[i] : curve1.getValues(matrix1),\n\t\t\t\tpath1 = curve1.getPath();\n\t\t\tif (path1 !== path) {\n\t\t\t\tpath = path1;\n\t\t\t\tlocations = [];\n\t\t\t\tarrays.push(locations);\n\t\t\t}\n\t\t\tif (self) {\n\t\t\t\tCurve._getSelfIntersection(values1, curve1, locations, {\n\t\t\t\t\tinclude: include,\n\t\t\t\t\tstartConnected: length1 === 1 &&\n\t\t\t\t\t\t\tcurve1.getPoint1().equals(curve1.getPoint2())\n\t\t\t\t});\n\t\t\t}\n\t\t\tfor (var j = self ? i + 1 : 0; j < length2; j++) {\n\t\t\t\tif (_returnFirst && locations.length)\n\t\t\t\t\treturn locations;\n\t\t\t\tvar curve2 = curves2[j];\n\t\t\t\tCurve._getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curve2, locations,\n\t\t\t\t\t{\n\t\t\t\t\t\tinclude: include,\n\t\t\t\t\t\tstartConnected: self && curve1.getPrevious() === curve2,\n\t\t\t\t\t\tendConnected: self && curve1.getNext() === curve2\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlocations = [];\n\t\tfor (var i = 0, l = arrays.length; i < l; i++) {\n\t\t\tlocations.push.apply(locations, arrays[i]);\n\t\t}\n\t\treturn locations;\n\t},\n\n\tgetCrossings: function(path) {\n\t\treturn this.getIntersections(path, function(inter) {\n\t\t\treturn inter.isOverlap() || inter.isCrossing();\n\t\t});\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[0], +coords[1]),\n\t\t\t\t\t\t\t+coords[2], +coords[4], +coords[3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tthis._version = 0;\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._area = this._clockwise = this._monoCurves =\n\t\t\t\t\tundefined;\n\t\t\tif (flags & 16) {\n\t\t\t\tthis._version++;\n\t\t\t} else if (this._curves) {\n\t\t\t   for (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves) {\n\t\t\tvar total = this._countCurves(),\n\t\t\t\tfrom = index > 0 && index + amount - 1 === total ? index - 1\n\t\t\t\t\t: index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, total);\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\thasHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tif (segments[i].hasHandles())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tclearHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsegments[i].clearHandles();\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tlength += curves[i].getLength();\n\t\t\tthis._length = length;\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tif (this._area == null) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tcount = segments.length,\n\t\t\t\tlast = count - 1,\n\t\t\t\tarea = 0;\n\t\t\tfor (var i = 0, l = this._closed ? count : last; i < l; i++) {\n\t\t\t\tarea += Curve.getArea(Curve.getValues(\n\t\t\t\t\t\tsegments[i], segments[i < last ? i + 1 : 0]));\n\t\t\t}\n\t\t\tthis._area = area;\n\t\t}\n\t\treturn this._area;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn this.getArea() >= 0;\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.getPointAt(pos)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (!curve.hasHandles() && (curve.getLength() === 0\n\t\t\t\t\t|| curve.isCollinear(curve.getNext())))\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null;\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (parameter >= tMax) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter >= tMin) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\tpath.insertAbove(this, true);\n\t\t\t\tthis._clone(path);\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first1,\n\t\t\t\tfirst2 = path.getFirstSegment();\n\t\t\tif (last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tfirst1 = this.getFirstSegment();\n\t\t\t\tif (first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path._closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isCollinear(i, j) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\tseg3 = segments[j],\n\t\t\t\tseg4 = seg3.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg3._handleOut.isZero() && seg4._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isCollinear(\n\t\t\t\t\t\tseg4._point.subtract(seg3._point));\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\tvar seg2 = segments[i],\n\t\t\t\tseg1 = seg2.getPrevious(),\n\t\t\t\tseg3 = seg2.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg2._handleOut.isZero() && seg3._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isOrthogonal(\n\t\t\t\t\t\tseg3._point.subtract(seg2._point));\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\thandle1 = seg1._handleOut,\n\t\t\t\thandle2 = seg2._handleIn,\n\t\t\t\tkappa = 0.5522847498307936;\n\t\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\t\tvar pt1 = seg1._point,\n\t\t\t\t\tpt2 = seg2._point,\n\t\t\t\t\tcorner = new Line(pt1, handle1, true).intersect(\n\t\t\t\t\t\t\tnew Line(pt2, handle2, true), true);\n\t\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt1).getLength() - kappa)\n\t\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt2).getLength() - kappa);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (!this.hasHandles() && segments.length === 4\n\t\t\t\t&& isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = this._clone(new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t}), insert, false);\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset,\n\t\t\t\tcurve = curves[index];\n\t\t\treturn curve ? curve.getLocationAt(offset - index, true) : null;\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (curves.length > 0 && offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}),\nnew function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < 1e-12)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isCollinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().multiply(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\tvar item = items[i];\n\t\t\tif (item instanceof CompoundPath) {\n\t\t\t\titems.splice.apply(items, [i, 1].concat(item.removeChildren()));\n\t\t\t\titem.remove();\n\t\t\t}\n\t\t}\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tvar children = this._children;\n\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\tvar path = children[i].reduce();\n\t\t\tif (path.isEmpty())\n\t\t\t\tchildren.splice(i, 1);\n\t\t}\n\t\tif (children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t}\n\t\treturn reduce.base.call(this);\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : _matrix, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n},\nnew function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current\n\t\t\t\t\t\t: new Path(Item.NO_INSERT);\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction preparePath(path, resolve) {\n\t\tvar res = path.clone(false).reduce().transform(null, true, true);\n\t\treturn resolve ? res.resolveCrossings().reorient() : res;\n\t}\n\n\tfunction finishBoolean(ctor, paths, path1, path2, reduce) {\n\t\tvar result = new ctor(Item.NO_INSERT);\n\t\tresult.addChildren(paths, true);\n\t\tif (reduce)\n\t\t\tresult = result.reduce();\n\t\tresult.insertAbove(path2 && path1.isSibling(path2)\n\t\t\t\t&& path1.getIndex() < path2.getIndex()\n\t\t\t\t\t? path2 : path1);\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tif (!path1._children && !path1._closed)\n\t\t\treturn computeOpenBoolean(path1, path2, operation);\n\t\tvar _path1 = preparePath(path1, true),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2, true);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tvar crossings = CurveLocation.expand(_path1.getCrossings(_path2));\n\t\tdivideLocations(crossings);\n\n\t\tvar segments = [],\n\t\t\tmonoCurves = [];\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tfor (var i = 0, l = crossings.length; i < l; i++) {\n\t\t\tpropagateWinding(crossings[i]._segment, _path1, _path2, monoCurves,\n\t\t\t\t\toperation);\n\t\t}\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding == null) {\n\t\t\t\tpropagateWinding(segment, _path1, _path2, monoCurves,\n\t\t\t\t\t\toperation);\n\t\t\t}\n\t\t}\n\t\treturn finishBoolean(CompoundPath, tracePaths(segments, operation),\n\t\t\t\tpath1, path2, true);\n\t}\n\n\tfunction computeOpenBoolean(path1, path2, operation) {\n\t\tif (!path2 || !path2._children && !path2._closed\n\t\t\t\t|| !/^(subtract|intersect)$/.test(operation))\n\t\t\treturn null;\n\t\tvar _path1 = preparePath(path1, false),\n\t\t\t_path2 = preparePath(path2, false),\n\t\t\tcrossings = _path1.getCrossings(_path2),\n\t\t\tsub = operation === 'subtract',\n\t\t\tpaths = [];\n\n\t\tfunction addPath(path) {\n\t\t\tif (_path2.contains(path.getPointAt(path.getLength() / 2)) ^ sub) {\n\t\t\t\tpaths.unshift(path);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = crossings.length - 1; i >= 0; i--) {\n\t\t\tvar path = crossings[i].split();\n\t\t\tif (path) {\n\t\t\t\tif (addPath(path))\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(0, 0);\n\t\t\t\t_path1.getLastSegment().setHandleOut(0, 0);\n\t\t\t}\n\t\t}\n\t\taddPath(_path1);\n\t\treturn finishBoolean(Group, paths, path1, path2);\n\t}\n\n\tfunction linkIntersections(from, to) {\n\t\tvar prev = from;\n\t\twhile (prev) {\n\t\t\tif (prev === to)\n\t\t\t\treturn;\n\t\t\tprev = prev._prev;\n\t\t}\n\t\twhile (from._next && from._next !== to)\n\t\t\tfrom = from._next;\n\t\tif (!from._next) {\n\t\t\twhile (to._prev)\n\t\t\t\tto = to._prev;\n\t\t\tfrom._next = to;\n\t\t\tto._prev = from;\n\t\t}\n\t}\n\n\tfunction divideLocations(locations) {\n\t\tvar tMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tnoHandles = false,\n\t\t\tclearSegments = [],\n\t\t\tprevCurve,\n\t\t\tprevT;\n\n\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\tvar loc = locations[i],\n\t\t\t\tcurve = loc._curve,\n\t\t\t\tt = loc._parameter,\n\t\t\t\torigT = t;\n\t\t\tif (curve !== prevCurve) {\n\t\t\t\tnoHandles = !curve.hasHandles();\n\t\t\t} else if (prevT > 0) {\n\t\t\t\tt /= prevT;\n\t\t\t}\n\t\t\tvar segment;\n\t\t\tif (t < tMin) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (t > tMax) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else {\n\t\t\t\tsegment = curve.divide(t, true, true)._segment1;\n\t\t\t\tif (noHandles)\n\t\t\t\t\tclearSegments.push(segment);\n\t\t\t}\n\t\t\tloc._setSegment(segment);\n\t\t\tvar inter = segment._intersection,\n\t\t\t\tdest = loc._intersection;\n\t\t\tif (inter) {\n\t\t\t\tlinkIntersections(inter, dest);\n\t\t\t\tvar other = inter;\n\t\t\t\twhile (other) {\n\t\t\t\t\tlinkIntersections(other._intersection, inter);\n\t\t\t\t\tother = other._next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsegment._intersection = dest;\n\t\t\t}\n\t\t\tprevCurve = curve;\n\t\t\tprevT = origT;\n\t\t}\n\t\tfor (var i = 0, l = clearSegments.length; i < l; i++) {\n\t\t\tclearSegments[i].clearHandles();\n\t\t}\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar epsilon = 2e-7,\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - epsilon,\n\t\t\t\tyAfter = py + epsilon;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.getPoint(values, roots[j]).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves, false,\n\t\t\t\t\t\ttestContains);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves, false,\n\t\t\t\t\t\ttestContains);\n\t\t} else {\n\t\t\tvar xBefore = px - epsilon,\n\t\t\t\txAfter = px + epsilon;\n\t\t\tvar startCounted = false,\n\t\t\t\tprevCurve,\n\t\t\t\tprevT;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0];\n\t\t\t\t\tif (!(\n\t\t\t\t\t\tt > tMax && startCounted && curve.next !== curves[i + 1]\n\t\t\t\t\t\t|| t < tMin && prevT > tMax\n\t\t\t\t\t\t\t&& curve.previous === prevCurve)) {\n\t\t\t\t\t\tvar x = Curve.getPoint(values, t).x,\n\t\t\t\t\t\t\tslope = Curve.getTangent(values, t).y,\n\t\t\t\t\t\t\tcounted = false;\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isStraight(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (curve.previous !== curves[i - 1])\n\t\t\t\t\t\t\tstartCounted = t < tMin && counted;\n\t\t\t\t\t}\n\t\t\t\t\tprevCurve = curve;\n\t\t\t\t\tprevT = t;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction propagateWinding(segment, path1, path2, monoCurves, operation) {\n\t\tvar epsilon = 2e-7,\n\t\t\tchain = [],\n\t\t\tstart = segment,\n\t\t\ttotalLength = 0,\n\t\t\twindingSum = 0;\n\t\tdo {\n\t\t\tvar curve = segment.getCurve(),\n\t\t\t\tlength = curve.getLength();\n\t\t\tchain.push({ segment: segment, curve: curve, length: length });\n\t\t\ttotalLength += length;\n\t\t\tsegment = segment.getNext();\n\t\t} while (segment && !segment._intersection && segment !== start);\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tvar length = totalLength * (i + 1) / 4;\n\t\t\tfor (var k = 0, m = chain.length; k < m; k++) {\n\t\t\t\tvar node = chain[k],\n\t\t\t\t\tcurveLength = node.length;\n\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\tif (length < epsilon || curveLength - length < epsilon)\n\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\tvar curve = node.curve,\n\t\t\t\t\t\tpath = curve._path,\n\t\t\t\t\t\tparent = path._parent,\n\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\thor = curve.isHorizontal();\n\t\t\t\t\tif (parent instanceof CompoundPath)\n\t\t\t\t\t\tpath = parent;\n\t\t\t\t\twindingSum += operation === 'subtract' && path2\n\t\t\t\t\t\t&& (path === path1 && path2._getWinding(pt, hor)\n\t\t\t\t\t\t|| path === path2 && !path1._getWinding(pt, hor))\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlength -= curveLength;\n\t\t\t}\n\t\t}\n\t\tvar winding = Math.round(windingSum / 3);\n\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\tchain[j].segment._winding = winding;\n\t}\n\n\tfunction tracePaths(segments, operation) {\n\t\tvar paths = [],\n\t\t\tstart,\n\t\t\totherStart,\n\t\t\toperator = operators[operation],\n\t\t\toverlapWinding = {\n\t\t\t\tunite: { 1: 2 },\n\t\t\t\tintersect: { 2: 1 }\n\t\t\t}[operation];\n\n\t\tfunction isValid(seg, adjusted) {\n\t\t\tif (seg._visited)\n\t\t\t\treturn false;\n\t\t\tif (!operator)\n\t\t\t\treturn true;\n\t\t\tvar winding = seg._winding,\n\t\t\t\tinter = seg._intersection;\n\t\t\tif (inter && adjusted && overlapWinding && inter.isOverlap())\n\t\t\t\twinding = overlapWinding[winding] || winding;\n\t\t\treturn operator(winding);\n\t\t}\n\n\t\tfunction isStart(seg) {\n\t\t\treturn seg === start || seg === otherStart;\n\t\t}\n\n\t\tfunction findBestIntersection(inter, strict) {\n\t\t\tif (!inter._next)\n\t\t\t\treturn inter;\n\t\t\twhile (inter) {\n\t\t\t\tvar seg = inter._segment,\n\t\t\t\t\tnextSeg = seg.getNext(),\n\t\t\t\t\tnextInter = nextSeg._intersection;\n\t\t\t\tif (isStart(nextSeg)\n\t\t\t\t\t|| !seg._visited && !nextSeg._visited\n\t\t\t\t\t&& (!operator\n\t\t\t\t\t\t|| (!strict || isValid(seg))\n\t\t\t\t\t\t&& (!(strict && nextInter && nextInter.isOverlap())\n\t\t\t\t\t\t\t&& isValid(nextSeg)\n\t\t\t\t\t\t\t|| !strict && nextInter\n\t\t\t\t\t\t\t&& isValid(nextInter._segment))\n\t\t\t\t\t))\n\t\t\t\t\treturn inter;\n\t\t\t\tinter = inter._next;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tfunction findStartSegment(inter, next) {\n\t\t\twhile (inter) {\n\t\t\t\tvar seg = inter._segment;\n\t\t\t\tif (isStart(seg))\n\t\t\t\t\treturn seg;\n\t\t\t\tinter = inter[next ? '_next' : '_prev'];\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar seg = segments[i],\n\t\t\t\tpath = null,\n\t\t\t\tfinished = false;\n\t\t\tif (!isValid(seg, true))\n\t\t\t\tcontinue;\n\t\t\tstart = otherStart = null;\n\t\t\twhile (!finished) {\n\t\t\t\tvar inter = seg._intersection,\n\t\t\t\t\thandleIn = path && seg._handleIn;\n\t\t\t\tinter = inter && (findBestIntersection(inter, true)\n\t\t\t\t\t\t|| findBestIntersection(inter, false)) || inter;\n\t\t\t\tvar other = inter && inter._segment;\n\t\t\t\tif (other && isValid(other))\n\t\t\t\t\tseg = other;\n\t\t\t\tif (seg._visited) {\n\t\t\t\t\tfinished = isStart(seg);\n\t\t\t\t\tif (!finished && inter) {\n\t\t\t\t\t\tvar found = findStartSegment(inter, true)\n\t\t\t\t\t\t\t|| findStartSegment(inter, false);\n\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\tseg = found;\n\t\t\t\t\t\t\tfinished = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!path) {\n\t\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\t\tstart = seg;\n\t\t\t\t\totherStart = other;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, handleIn, seg._handleOut));\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = seg.getNext();\n\t\t\t\tfinished = isStart(seg);\n\t\t\t}\n\t\t\tif (finished) {\n\t\t\t\tpath.firstSegment.setHandleIn(seg._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else if (path) {\n\t\t\t\tvar length = path.getLength();\n\t\t\t\tif (length >= 2e-7) {\n\t\t\t\t\tconsole.error('Boolean operation resulted in open path',\n\t\t\t\t\t\t\t'segments =', path._segments.length,\n\t\t\t\t\t\t\t'length =', length);\n\t\t\t\t}\n\t\t\t\tpath = null;\n\t\t\t}\n\t\t\tif (path && (path._segments.length > 8\n\t\t\t\t\t|| !Numerical.isZero(path.getArea()))) {\n\t\t\t\tpaths.push(path);\n\t\t\t\tpath = null;\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn finishBoolean(Group,\n\t\t\t\t\t[this.subtract(path), this.intersect(path)],\n\t\t\t\t\tthis, path, true);\n\t\t},\n\n\t\tresolveCrossings: function() {\n\t\t\tvar crossings = this.getCrossings();\n\t\t\tif (!crossings.length)\n\t\t\t\treturn this;\n\t\t\tdivideLocations(CurveLocation.expand(crossings));\n\t\t\tvar paths = this._children || [this],\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tsegments.push.apply(segments, paths[i]._segments);\n\t\t\t}\n\t\t\treturn finishBoolean(CompoundPath, tracePaths(segments),\n\t\t\t\t\tthis, null, false);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isStraight(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttMin = 4e-7,\n\t\t\t\t\ttMax = 1 - tMin,\n\t\t\t\t\troots = [],\n\t\t\t\t\tn = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\t\t\t\tif (n === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (n > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.getPoint(values, roots[j]).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve, 0.5),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 1e-6) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j === 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, weighted) {\n\t\t\tvar param = this.getParameterAt(offset);\n\t\t\treturn Curve[name](this.curves[param.index], param.value, weighted);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit,\n\t\t\tparametersInOrder = true;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error && parametersInOrder) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tparametersInOrder = this.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1),\n\t\t\teps = epsilon * segLength,\n\t\t\thandle1,\n\t\t\thandle2;\n\t\tif (alpha1 < eps || alpha2 < eps) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t} else {\n\t\t\tvar line = pt2.subtract(pt1);\n\t\t\thandle1 = tan1.normalize(alpha1);\n\t\t\thandle2 = tan2.normalize(alpha2);\n\t\t\tif (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t\thandle1 = handle2 = null;\n\t\t\t}\n\t\t}\n\n\t\treturn [pt1, pt1.add(handle1 || tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(handle2 || tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t\tfor (var i = 1, l = u.length; i < l; i++) {\n\t\t\tif (u[i] <= u[i - 1])\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 1e-6)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert, includeMatrix) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert, includeMatrix);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tthis._components[index] = parser.call(this, value);\n\t\t\t\tthis._changed();\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type],\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tthis._id = UID.get(Color);\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n},\nnew function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = UID.get();\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops, this._radial);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = typeof window === 'object' &&\n\t\t\tDomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tif ( typeof window === 'object' ) {\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t   if ( !noCanvas ) {\n\t\tif (!this._pixelRatio)\n\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\tthis._id = element.getAttribute('id');\n\t\tif (this._id == null)\n\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\tDomEvent.add(element, this._viewEvents);\n\t\tvar none = 'none';\n\t\tDomElement.setPrefixed(element.style, {\n\t\t\tuserSelect: none,\n\t\t\ttouchAction: none,\n\t\t\ttouchCallout: none,\n\t\t\tcontentZooming: none,\n\t\t\tuserDrag: none,\n\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t});\n\n\t\tfunction getSize(name) {\n\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t}\n\n\t\tfunction getCanvasSize() {\n\t\t\tvar size = DomElement.getSize(element);\n\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t: size;\n\t\t}\n\n\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\tvar that = this;\n\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\tresize: function() {\n\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._setViewSize(size = getCanvasSize());\n\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\tthis._stats = new Stats();\n\t\t\tvar stats = this._stats.domElement,\n\t\t\t\tstyle = stats.style,\n\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\tstyle.position = 'absolute';\n\t\t\tstyle.left = offset.x + 'px';\n\t\t\tstyle.top = offset.y + 'px';\n\t\t\tdocument.body.appendChild(stats);\n\t\t}\n\n\t   } else {\n\t\tif (!this._pixelRatio)\n\t\t\tthis._pixelRatio = 1;\n\t\tthis._id = 'view-' + View._id++;\n\t\tsize = new Size(element.width, element.height);\n\t   }\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: Base.each(['onResize', 'onMouseDown', 'onMouseUp', 'onMouseMove'],\n\t\tfunction(name) {\n\t\t\tthis[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis._installEvent(type);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis._uninstallEvent(type);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.play();\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t),\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n},\nnew function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\tvar mouseFlags = {\n\t\tmousedown: {\n\t\t\tmousedown: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmouseup: {\n\t\t\tmouseup: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmousemove: {\n\t\t\tmousedrag: 1,\n\t\t\tmousemove: 1,\n\t\t\tmouseenter: 1,\n\t\t\tmouseleave: 1\n\t\t}\n\t};\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\t_installEvent: function(type) {\n\t\t\tvar counters = this._eventCounters;\n\t\t\tif (counters) {\n\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_uninstallEvent: function(type) {\n\t\t\tvar counters = this._eventCounters;\n\t\t\tif (counters) {\n\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif ( !noCanvas ) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t}\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!noCanvas && !/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar browser = paper.browser,\n\t\t\tpixels;\n\t\tif (browser && browser.firefox) {\n\t\t\tvar parent = this._element.parentNode,\n\t\t\t\ttemp = document.createElement('div');\n\t\t\ttemp.style.fontSize = size;\n\t\t\tparent.appendChild(temp);\n\t\t\tpixels = parseFloat(DomElement.getStyles(temp).fontSize);\n\t\t\tparent.removeChild(temp);\n\t\t} else {\n\t\t\tvar ctx = this._context,\n\t\t\t\tprevFont = ctx.font;\n\t\t\tctx.font = size + ' serif';\n\t\t\tpixels = parseFloat(ctx.font);\n\t\t\tctx.font = prevFont;\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function(force) {\n\t\tvar project = this._project;\n\t\tif (!project || !force && !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n},\nnew function() {\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tcommandFixMap,\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers) {\n\t\t\tmodifiers[name] = down;\n\t\t\tvar browser = paper.browser;\n\t\t\tif (name === 'command' && browser && browser.mac) {\n\t\t\t\tif (down) {\n\t\t\t\t\tcommandFixMap = {};\n\t\t\t\t} else {\n\t\t\t\t\tfor (var code in commandFixMap) {\n\t\t\t\t\t\tif (code in charCodeMap)\n\t\t\t\t\t\t\thandleKey(false, code, commandFixMap[code], event);\n\t\t\t\t\t}\n\t\t\t\t\tcommandFixMap = null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (down && commandFixMap) {\n\t\t\tcommandFixMap[keyCode] = charCode;\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (minDistance != null && this._maxDistance != null\n\t\t\t\t&& minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && maxDistance != null\n\t\t\t\t&& maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = this._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tif (maxDistance != null && maxDistance !== 0) {\n\t\t\t\t\tif (distance > maxDistance) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDistance));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback, async) {\n\t\tasync = (async === undefined) ? true : async;\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, async);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif ( noCanvas ) {\n\t\t\treturn { getContext: function() {} };\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize(),\n\t\t\timage = item.getImage();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = options.embedImages === false && image && image.src\n\t\t\t\t|| item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tvar matchShapes = options.matchShapes;\n\t\tif (matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (matchShapes && !item.hasHandles()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tif (isRoot) {\n\t\t\tvar defs = node.querySelectorAll('defs');\n\t\t\tfor (var i = 0, l = defs.length; i < l; i++) {\n\t\t\t\timportSVG(defs[i], options, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& childNode.nodeName.toLowerCase() !== 'defs'\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.set(Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {}), {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (item && Base.pick(options.applyMatrix, applyMatrix))\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n","function Collection( args ) {\n\t// already a Collection? Job's done\n\tif ( arguments.length === 1 && args instanceof Collection ) {\n\t\treturn args;\n\n\t} else if ( arguments.length > 1 || !Array.isArray( args ) ) {\n\t\targs = [].slice.call( arguments, 0 );\n\t}\n\n\tthis.length = 0;\n\n\targs.forEach(function( arg ) {\n\t\t// unwrap any collection\n\t\tif ( arg instanceof Collection ) {\n\t\t\tfor ( var i = -1; ++i < arg.length; ) {\n\t\t\t\tthis[this.length++] = arg[i];\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis[this.length++] = arg;\n\t\t}\n\n\t}, this);\n\n\treturn this;\n}\n\nCollection.prototype.forEach = function(cb, scope) {\n\tfor ( var i = -1; ++i < this.length; ) {\n\t\tcb.call(scope || this[i], this[i], i, this);\n\t}\n\n\treturn this;\n};\n\nCollection.prototype.prop = function(name, val) {\n\tvar i;\n\n\t// object setter\n\tif ( typeof name === 'object' ) {\n\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\tthis[i].set( name );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// getter\n\tif ( val === undefined ) {\n\t\treturn this[0][name];\n\t}\n\n\t// simple setter\n\tfor ( i = -1; ++i < this.length; ) {\n\t\tthis[i][name] = val;\n\t}\n\n\treturn this;\n};\n\nfunction wrapConstructor( constructor, prototype, useConstructed ) {\n\treturn function wrapper() {\n\t\tvar c,\n\t\t\ttmp,\n\t\t\tarr = [];\n\n\t\t// constructor used with new\n\t\tif ( this instanceof wrapper ) {\n\t\t\t// proxy to paper native constructor\n\t\t\tc = Object.create(prototype);\n\t\t\ttmp = constructor.apply(c, arguments);\n\t\t\treturn useConstructed ?\n\t\t\t\ttmp : c;\n\n\t\t// without new, build a collection\n\t\t} else {\n\t\t\tif ( Array.isArray( arguments[0] ) ) {\n\t\t\t\targuments[0].forEach(function(params, i) {\n\t\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\t\tc = constructor.call( arr[i], params );\n\t\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\t\tarr[i] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\tc = constructor.apply( arr[0], arguments );\n\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\tarr[0] = c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Collection( arr );\n\t\t}\n\t};\n}\n\nvar rconstructor = /(^|\\.)[A-Z][A-z]+$/;\nfunction constructorFilter( name ) {\n\treturn typeof this[name] === 'function' && rconstructor.test(name);\n}\n\n// unwrap a collection or array of collection\nfunction unwrapArg( arr, id, isPlural ) {\n\t// unwrap a single collection\n\tif ( arr && arr[id] instanceof Collection ) {\n\t\tarr[id] = isPlural ?\n\t\t\t[].slice.call( arr[id], 0 ) :\n\t\t\tarr[id][0];\n\n\t// unwrap an array of collection\n\t} else if ( arr && arr[id].length && arr[id][0] instanceof Collection ) {\n\t\tfor ( var i = -1; ++i < arr[id].length; ) {\n\t\t\tarr[id][i] = arr[id][i][0];\n\t\t}\n\t}\n}\n\nfunction unwrapArgs() {\n\tvar isPlural = this.isPlural,\n\t\targs = [].slice.call( arguments, 0 ),\n\t\tid,\n\t\ti;\n\n\t// first arg is an object and might have a collection or array of collection\n\t// Todo: objects should be unwrapped recursively\n\tif ( args[0] && args[0].constructor === Object ) {\n\t\tif ( 'children' in args[0] ) {\n\t\t\tid = 'children';\n\n\t\t} else if ( 'segments' in args[0] ) {\n\t\t\tid = 'segments';\n\n\t\t} else if ( 'nodes' in args[0] ) {\n\t\t\tid = 'nodes';\n\t\t}\n\n\t\tunwrapArg( args[0], id, true );\n\n\t// otherwise unwrap each arg\n\t} else {\n\t\tfor ( i = -1; ++i < args.length; ) {\n\t\t\t// if the method is plural (addChildren) and we're unwrapping\n\t\t\t// the last argument, we want to keep it in an array\n\t\t\tunwrapArg( args, i, i === args.length - 1 && isPlural );\n\t\t}\n\t}\n\n\treturn args;\n}\n\nCollection.proxy = function( paper ) {\n\tvar plumin = this;\n\n\tplumin.paper = paper;\n\n\tvar methodNames = {};\n\tObject.getOwnPropertyNames( paper.PaperScope.prototype )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype )\n\t\t.forEach(function(name) {\n\t\t\tplumin[name] = wrapConstructor( this[name], this[name].prototype );\n\n\t\t\t// we don't want to proxy methods of Collection\n\t\t\tif ( name === 'Collection' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tObject.getOwnPropertyNames( this[name].prototype )\n\t\t\t\t.forEach(function(_name) {\n\t\t\t\t\t// collect unique method names (first test avoids getters)\n\t\t\t\t\tif ( !Object.getOwnPropertyDescriptor(this, _name).get &&\n\t\t\t\t\t\t\ttypeof this[_name] === 'function' ) {\n\n\t\t\t\t\t\tmethodNames[_name] = true;\n\t\t\t\t\t}\n\n\t\t\t\t}, this[name].prototype);\n\n\t\t}, paper.PaperScope.prototype);\n\n\tObject.keys( paper.PaperScope.prototype.Path )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Path )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Path[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Path );\n\n\tObject.keys( paper.PaperScope.prototype.Shape )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Shape )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Shape[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Shape );\n\n\t// proxy the most commonly used method of paper\n\t// do it only after proxying constructors otherwise it's overwritten\n\tplumin.setup = paper.setup.bind(paper);\n\n\t// proxy all methods from every constructor\n\t// by default methods aren't chainable\n\tObject.keys( methodNames ).sort().forEach(function(name) {\n\t\t// please oh please, don't overwrite my constructor, I need it.\n\t\tif ( name === 'constructor' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(null, arguments),\n\t\t\t\ti,\n\t\t\t\tresult;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tresult = this[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// by default methods aren't chainable\n\t\t\t// return the last result\n\t\t\treturn result;\n\t\t};\n\t});\n\n\t\t// addChild( item ) and other methods with similar signatures\n\t\t// that we want to make chainable\n\tvar chain = [\n\t\t\t'set',\n\t\t\t'setX',\n\t\t\t'setY',\n\t\t\t'insertAbove',\n\t\t\t'insertBelow',\n\t\t\t'sendToBack',\n\t\t\t'bringToFront',\n\t\t\t'remove',\n\t\t\t'removeChildren',\n\t\t\t'reverseChildren',\n\n\t\t\t'translate',\n\t\t\t'rotate',\n\t\t\t'scale',\n\t\t\t'shear',\n\t\t\t'skew',\n\t\t\t'transform',\n\t\t\t'fitBounds',\n\t\t\t'emit',\n\n\t\t\t'activate',\n\n\t\t\t'setPixel',\n\n\t\t\t'smooth',\n\t\t\t'moveTo',\n\t\t\t'lineTo',\n\t\t\t'cubicCurveTo',\n\t\t\t'quadraticCurveTo',\n\t\t\t'curveTo',\n\t\t\t'arcTo',\n\t\t\t'closePath',\n\t\t\t'moveBy',\n\t\t\t'lineBy',\n\t\t\t'cubicCurveBy',\n\t\t\t'quadraticCurveBy',\n\t\t\t'curveBy',\n\t\t\t'arcBy',\n\n\t\t\t'removeSegments',\n\t\t\t'simplify',\n\t\t\t'reverse',\n\n\t\t\t// Rectangle\n\t\t\t'include',\n\t\t\t'expand',\n\t\t\t'scale',\n\t\t// ],\n\t\t// createAndChain = [\n\t\t\t'addChild',\n\t\t\t'insertChild',\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'replaceWith',\n\n\t\t\t'appendTop',\n\t\t\t'appendBottom',\n\n\t\t\t'add',\n\t\t\t'insert',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNode',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\n\t\t\t'addGlyph',\n\t\t\t'addGlyphs',\n\n\t\t\t'addContour',\n\t\t\t'insertContour',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addAnchor',\n\t\t\t'addAnchors',\n\t\t\t'addComponent',\n\t\t\t'addComponents',\n\n\t\t\t'addUnicode',\n\t\t\t'prepareOt',\n\t\t\t'addToFonts',\n\t\t\t'download'\n\t\t],\n\t\tplural = [\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\t\t\t'addGlyphs',\n\t\t\t'addAnchors',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addComponents'\n\t\t]/*,\n\t\tmathPoinFn = [\n\t\t\t'round',\n\t\t\t'ceil',\n\t\t\t'floor',\n\t\t\t'abs'\n\t\t],\n\t\tbooleanPathOp = [\n\t\t\t'unite',\n\t\t\t'intersect',\n\t\t\t'subtract',\n\t\t\t'exclude',\n\t\t\t'divide'\n\t\t]*/;\n\n\tchain.forEach(function(name) {\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(\n\t\t\t\t\t{ isPlural: plural.indexOf(name) !== -1 },\n\t\t\t\t\targuments\n\t\t\t\t),\n\t\t\t\ti;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tthis[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// make method chainable\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t// singular chainable method\n};\n\nmodule.exports = Collection;\n","var opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tGlyph = require('./Glyph.js'),\n\tassign = require('es6-object-assign').assign;\n\nfunction Font( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\targs = assign({\n\t\tfamilyName: 'Default familyName',\n\t\tstyleName: 'Regular',\n\t\tascender: 1,\n\t\tdescender: -1,\n\t\tunitsPerEm: 1024\n\t}, args);\n\n\tthis.fontinfo = this.ot = new opentype.Font( args );\n\n\tthis.glyphMap = {};\n\tthis.charMap = {};\n\tthis.altMap = {};\n\tthis._subset = false;\n\tthis.fontMap = {};\n\n\tthis.addGlyph(new Glyph({\n\t\tname: '.notdef',\n\t\tunicode: 0,\n\t\tadvanceWidth: 650\n\t}));\n\n\tif ( args && args.glyphs ) {\n\t\tthis.addGlyphs( args.glyphs );\n\t}\n\n\tif ( typeof window === 'object' && window.document && !document.fonts ) {\n\t\tdocument.head.appendChild(\n\t\t\tthis.styleElement = document.createElement('style')\n\t\t);\n\t\t// let's find the corresponding CSSStyleSheet\n\t\t// (would be much easier with Array#find)\n\t\tthis.styleSheet = document.styleSheets[\n\t\t\t[].map.call(document.styleSheets, function(ss) {\n\t\t\t\treturn ss.ownerNode;\n\t\t\t}).indexOf(this.styleElement)\n\t\t];\n\t}\n}\n\nFont.prototype = Object.create(paper.Group.prototype);\nFont.prototype.constructor = Font;\n\n// proxy .glyphs to .children\n// TODO: handle unicode updates\nObject.defineProperty(\n\tFont.prototype,\n\t'glyphs',\n\tObject.getOwnPropertyDescriptor( paper.Item.prototype, 'children' )\n);\n\n// TODO: proper proxying of ...Glyph[s] methods to ...Child[ren] methods\n// see Glyph.js\nFont.prototype.addGlyph = function( glyph ) {\n\tthis.addChild( glyph );\n\tthis.glyphMap[glyph.name] = glyph;\n\n\tif ( glyph.ot.unicode === undefined ) {\n\t\treturn glyph;\n\t}\n\n\t// build the default cmap\n\t// if multiple glyphs share the same unicode, use the glyph where unicode\n\t// and name are equal\n\tif ( !this.charMap[glyph.ot.unicode] ||\n\t\t\t( glyph.name.length === 1 &&\n\t\t\t\tglyph.name.charCodeAt(0) === glyph.ot.unicode ) ) {\n\n\t\tthis.charMap[glyph.ot.unicode] = glyph;\n\t}\n\n\t// build the alternates map\n\tif ( !this.altMap[glyph.ot.unicode] ) {\n\t\tthis.altMap[glyph.ot.unicode] = [];\n\t}\n\tthis.altMap[glyph.ot.unicode].push( glyph );\n\n\t// invalidate glyph subset cache\n\t// TODO: switch to immutable.js to avoid this maddness\n\tthis._lastSubset = undefined;\n\n\treturn glyph;\n};\n\nFont.prototype.addGlyphs = function( glyphs ) {\n\treturn glyphs.forEach(function( glyph ) {\n\t\tthis.addGlyph(glyph);\n\n\t}, this);\n};\n\nObject.defineProperty( Font.prototype, 'subset', {\n\tget: function() {\n\t\tif ( !this._subset ) {\n\t\t\tthis._subset = this.normalizeSubset( false );\n\t\t}\n\t\treturn this._subset;\n\t},\n\tset: function( set ) {\n\t\tthis._subset = this.normalizeSubset( set );\n\t}\n});\n\nFont.prototype.normalizeSubset = function( _set ) {\n\tvar set;\n\n\t// two cases where _set isn't an array\n\t// false set = all glyphs in the charMap\n\tif ( _set === false ) {\n\t\tset = Object.keys( this.charMap ).map(function( unicode ) {\n\t\t\treturn this.charMap[unicode];\n\t\t}.bind(this));\n\n\t// convert string to array of chars\n\t} else if ( typeof _set === 'string' ) {\n\t\tset = _set.split('').map(function(e) {\n\t\t\treturn e.charCodeAt(0);\n\t\t});\n\n\t} else {\n\t\tset = _set;\n\t}\n\n\t// convert array of number to array of glyphs\n\tif ( Array.isArray( set ) && typeof set[0] === 'number' ) {\n\t\tset = set.map(function( unicode ) {\n\t\t\treturn this.charMap[ unicode ];\n\t\t}.bind(this));\n\t}\n\n\t// always include .undef\n\tif ( set.indexOf( this.glyphMap['.notdef'] ) === -1 ) {\n\t\tset.unshift( this.glyphMap['.notdef'] );\n\t}\n\n\t// remove undefined glyphs and dedupe the set\n\treturn set.filter(function(e, i, arr) {\n\t\treturn e && arr.lastIndexOf(e) === i;\n\t});\n};\n\nFont.prototype.getGlyphSubset = function( _set ) {\n\treturn _set !== undefined ? this.normalizeSubset( _set ) : this.subset;\n};\n\nFont.prototype.setAlternateFor = function( unicode, glyphName ) {\n\tthis.charMap[ unicode ] = this.glyphMap[ glyphName ];\n};\n\nFont.prototype.interpolate = function( font0, font1, coef, set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\tglyph.interpolate(\n\t\t\tfont0.glyphMap[glyph.name],\n\t\t\tfont1.glyphMap[glyph.name],\n\t\t\tcoef\n\t\t);\n\t});\n\n\t// TODO: evaluate if taking subsetting into account makes kerning\n\t// interpolation faster or slower.\n\tif ( this.ot.kerningPairs ) {\n\t\tfor ( var i in this.ot.kerningPairs ) {\n\t\t\tthis.ot.kerningPairs[i] =\n\t\t\t\tfont0.ot.kerningPairs[i] +\n\t\t\t\t( font1.ot.kerningPairs[i] - font0.ot.kerningPairs[i] ) * coef;\n\t\t}\n\t}\n\n\tthis.ot.ascender =\n\t\tfont0.ot.ascender + ( font1.ot.ascender - font0.ot.ascender ) * coef;\n\tthis.ot.descender =\n\t\tfont0.ot.descender + ( font1.ot.descender - font0.ot.descender ) * coef;\n\n\treturn this;\n};\n\nFont.prototype.updateSVGData = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateSVGData();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.updateOTCommands = function( set, merged ) {\n\treturn this.updateOT({\n\t\tset: set,\n\t\tshouldUpdateCommands: true,\n\t\tmerged: merged\n\t});\n};\n\nFont.prototype.updateOT = function( args ) {\n\tif ( args && args.shouldUpdateCommands ) {\n\t\t// the following is required so that the globalMatrix of glyphs\n\t\t// takes the font matrix into account. I assume this is done in the\n\t\t// main thread when calling view.update();\n\t\tthis._project._updateVersion++;\n\t}\n\n\tthis.ot.glyphs.glyphs = (\n\t\tthis.getGlyphSubset( args && args.set ).reduce(function(o, glyph, i) {\n\t\t\to[i] = args && args.shouldUpdateCommands ?\n\t\t\t\tglyph.updateOTCommands( null, args && args.merged ) :\n\t\t\t\tglyph.ot;\n\t\t\treturn o;\n\t\t}, {})\n\t);\n\tthis.ot.glyphs.length = Object.keys(this.ot.glyphs.glyphs).length;\n\treturn this;\n};\n\nFont.prototype.toArrayBuffer = function() {\n\t// rewrite the postScriptName to remove invalid characters\n\t// TODO: this should be fixed in opentype.js\n\tthis.ot.names.postScriptName.en = (\n\t\tthis.ot.names.postScriptName.en.replace(/[^A-z]/g, '_')\n\t);\n\n\treturn this.ot.toArrayBuffer();\n}\n\nFont.prototype.importOT = function( otFont ) {\n\tthis.ot = otFont;\n\n\totFont.glyphs.forEach(function( otGlyph ) {\n\t\tvar glyph = new Glyph({\n\t\t\t\tname: otGlyph.name,\n\t\t\t\tunicode: otGlyph.unicode\n\t\t\t});\n\n\t\tthis.addGlyph( glyph );\n\t\tglyph.importOT( otGlyph );\n\n\t}, this);\n\n\treturn this;\n};\n\nif ( typeof window === 'object' && window.document ) {\n\n\tvar _URL = window.URL || window.webkitURL;\n\tFont.prototype.addToFonts = document.fonts ?\n\t\t// CSS font loading, lightning fast\n\t\tfunction( buffer ) {\n\t\t\tvar enFamilyName = this.ot.getEnglishName('fontFamily');\n\n\t\t\tif ( this.fontMap[ enFamilyName ] ) {\n\t\t\t\tdocument.fonts.delete( this.fontMap[ enFamilyName ] );\n\t\t\t}\n\n\t\t\tvar fontface = this.fontMap[ enFamilyName ] = (\n\t\t\t\tnew window.FontFace(\n\t\t\t\t\tenFamilyName,\n\t\t\t\t\tbuffer || this.toArrayBuffer()\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tif ( fontface.status === 'error' ) {\n\t\t\t\tthrow new Error('Fontface is invalid and cannot be displayed');\n\t\t\t}\n\n\t\t\tdocument.fonts.add( fontface );\n\n\t\t\treturn this;\n\t\t} :\n\t\tfunction( buffer ) {\n\t\t\tvar enFamilyName = this.ot.getEnglishName('fontFamily');\n\t\t\tvar url = _URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[ new DataView( buffer || this.toArrayBuffer() ) ],\n\t\t\t\t\t\t{ type: 'font/opentype' }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tif ( this.fontObjectURL ) {\n\t\t\t\t_URL.revokeObjectURL( this.fontObjectURL );\n\t\t\t\tthis.styleSheet.deleteRule(0);\n\t\t\t}\n\n\t\t\tthis.styleSheet.insertRule(\n\t\t\t\t'@font-face { font-family: \"' + enFamilyName + '\";' +\n\t\t\t\t'src: url(' + url + '); }',\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fontObjectURL = url;\n\n\t\t\treturn this;\n\t\t};\n\n\tvar a = document.createElement('a');\n\n\tvar triggerDownload = function( font, arrayBuffer ) {\n\t\tvar reader = new FileReader();\n\t\tvar enFamilyName = font.ot.getEnglishName('fontFamily');\n\n\t\treader.onloadend = function() {\n\t\t\ta.download = enFamilyName + '.otf';\n\t\t\ta.href = reader.result;\n\t\t\ta.dispatchEvent(new MouseEvent('click'));\n\n\t\t\tsetTimeout(function() {\n\t\t\t\ta.href = '#';\n\t\t\t\t_URL.revokeObjectURL( reader.result );\n\t\t\t}, 100);\n\t\t};\n\n\t\treader.readAsDataURL(new Blob(\n\t\t\t[ new DataView( arrayBuffer || font.toArrayBuffer() ) ],\n\t\t\t{ type: 'font/opentype' }\n\t\t));\n\t};\n\n\tFont.prototype.download = function( arrayBuffer, merged, name, user ) {\n\t\tif ( merged ) {\n\t\t\t// TODO: replace that with client-side font merging\n\t\t\tfetch('http://fontforgeconv.cloudapp.net/' + name + '/' + user, {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: { 'Content-Type': 'application/otf' },\n\t\t\t\t\tbody: arrayBuffer\n\t\t\t\t})\n\t\t\t\t.then(function( response ) {\n\t\t\t\t\treturn response.arrayBuffer();\n\t\t\t\t})\n\t\t\t\t.then(function( bufferToDownload ) {\n\t\t\t\t\ttriggerDownload( this, bufferToDownload );\n\t\t\t\t}.bind(this));\n\n\t\t} else {\n\t\t\ttriggerDownload( this, arrayBuffer );\n\t\t}\n\n\t\treturn this;\n\t};\n\n}\n\nmodule.exports = Font;\n","var opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tOutline = require('./Outline.js');\n\nfunction Glyph( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( args && typeof args.unicode === 'string' ) {\n\t\targs.unicode = args.unicode.charCodeAt(0);\n\t}\n\n\tthis.ot = new opentype.Glyph( args );\n\tthis.ot.path = new opentype.Path();\n\n\tthis.name = args.name;\n\t// workaround opentype 'unicode === 0' bug\n\tthis.ot.unicode = args.unicode;\n\n\tthis.addChild( new Outline() );\n\t// the second child will hold all components\n\tthis.addChild( new paper.Group() );\n\t// Should all anchors and parentAnchors also leave in child groups?\n\tthis.anchors = ( args && args.anchors ) || [];\n\tthis.parentAnchors = ( args && args.parentAnchors ) || [];\n\n\t// each individual glyph must be explicitely made visible\n\tthis.visible = false;\n\t// default colors required to display the glyph in a canvas\n\tthis.fillColor = new paper.Color(0, 0, 0);\n\t// stroke won't be displayed unless strokeWidth is set to 1\n\tthis.strokeColor = new paper.Color(0, 0, 0);\n\tthis.strokeScaling = false;\n}\n\nGlyph.prototype = Object.create(paper.Group.prototype);\nGlyph.prototype.constructor = Glyph;\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'unicode', {\n\tset: function( code ) {\n\t\tthis.ot.unicode = typeof code === 'string' ?\n\t\t\tcode.charCodeAt(0) :\n\t\t\tcode;\n\t},\n\tget: function() {\n\t\treturn this.ot.unicode;\n\t}\n});\n\n// alias .advanceWidth to .ot.advanceWidth\nObject.defineProperty(Glyph.prototype, 'advanceWidth', {\n\tset: function( value ) {\n\t\tthis.ot.advanceWidth = value;\n\t},\n\tget: function() {\n\t\treturn this.ot.advanceWidth;\n\t}\n});\n\n// proxy .contours to .children[0]\nObject.defineProperty( Glyph.prototype, 'contours', {\n\tget: function() {\n\t\treturn this.children[0].children;\n\t}\n});\n\n// proxy .components to .children[1]\nObject.defineProperty( Glyph.prototype, 'components', {\n\tget: function() {\n\t\treturn this.children[1].children;\n\t}\n});\n\n// proxy ...Contour[s] methods to children[0]...Child[ren] methods\n// and proxy ...Component[s] methods to children[1]...Child[ren] methods\nObject.getOwnPropertyNames( paper.Item.prototype ).forEach(function(name) {\n\tvar proto = this;\n\n\t// exclude getters and non-methods\n\tif ( Object.getOwnPropertyDescriptor(proto, name).get ||\n\t\t\ttypeof proto[name] !== 'function' ) {\n\t\treturn;\n\t}\n\n\tif ( name.indexOf('Children') !== -1 ) {\n\t\tproto[name.replace('Children', 'Contours')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Children', 'Components')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\n\t} else if ( name.indexOf('Child') !== -1 ) {\n\t\tproto[name.replace('Child', 'Contour')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Child', 'Component')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\t}\n\n}, paper.Item.prototype);\n\nGlyph.prototype.addAnchor = function( item ) {\n\tthis.anchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addAnchors = function( anchors ) {\n\treturn anchors.forEach(function(anchor) {\n\t\tthis.addAnchor(anchor);\n\t}, this);\n};\n\nGlyph.prototype.addParentAnchor = function( item ) {\n\tthis.parentAnchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addUnicode = function( code ) {\n\tthis.ot.addUnicode( code );\n\n\treturn this;\n};\n\nGlyph.prototype.interpolate = function( glyph0, glyph1, coef ) {\n\t// If we added an interpolate method to Group, we'd be able to just\n\t// interpolate all this.children directly.\n\t// instead we interpolate the outline first\n\tthis.children[0].interpolate( glyph0.children[0], glyph1.children[0] );\n\t// and then the components\n\tthis.children[1].children.forEach(function(component, j) {\n\t\tcomponent.interpolate(\n\t\t\tglyph0.children[1].children[j], glyph1.children[1].children[j], coef\n\t\t);\n\t});\n\n\tthis.ot.advanceWidth =\n\t\tglyph0.ot.advanceWidth +\n\t\t( glyph1.ot.advanceWidth - glyph0.ot.advanceWidth ) * coef;\n\tthis.ot.leftSideBearing =\n\t\tglyph0.ot.leftSideBearing +\n\t\t( glyph1.ot.leftSideBearing - glyph0.ot.leftSideBearing ) * coef;\n\tthis.ot.xMax =\n\t\tglyph0.ot.xMax + ( glyph1.ot.xMax - glyph0.ot.xMax ) * coef;\n\tthis.ot.xMin =\n\t\tglyph0.ot.xMin + ( glyph1.ot.xMin - glyph0.ot.xMin ) * coef;\n\tthis.ot.yMax =\n\t\tglyph0.ot.yMax + ( glyph1.ot.yMax - glyph0.ot.yMax ) * coef;\n\tthis.ot.yMin =\n\t\tglyph0.ot.yMin + ( glyph1.ot.yMin - glyph0.ot.yMin ) * coef;\n\n\treturn this;\n};\n\nGlyph.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children[0].updateSVGData( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateSVGData( path );\n\t});\n\n\treturn this.svgData;\n};\n\nGlyph.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n/* eslint-disable */\n\tthis.children[0].updateOTCommands( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateOTCommands( path );\n\t});\n/* eslint-enable */\n\n\treturn this.ot;\n};\n\nGlyph.prototype.importOT = function( otGlyph ) {\n\tvar current;\n\tthis.ot = otGlyph;\n\n\tif ( !otGlyph.path || !otGlyph.path.commands ) {\n\t\treturn this;\n\t}\n\n\tthis.ot.path.commands.forEach(function(command) {\n\t\tswitch ( command.type ) {\n\t\t\tcase 'M':\n\t\t\t\tcurrent = new paper.Path();\n\t\t\t\tthis.addContour( current );\n\n\t\t\t\tcurrent.moveTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tcurrent.lineTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tcurrent.cubicCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\t[ command.x2, command.y2 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcurrent.quadraticCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t// When the glyph has no contour,\n\t\t\t\t// they contain a single Z command in\n\t\t\t\t// opentype.js.\n\t\t\t\t// TODO: see how we should handle that\n\t\t\t\tif ( current ) {\n\t\t\t\t\tcurrent.closePath();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}, this);\n\n\treturn this;\n};\n\nmodule.exports = Glyph;\n","var paper = require('../node_modules/paper/dist/paper-core.js');\n\nObject.defineProperty( paper.Segment.prototype, 'x', {\n\tget: function() {\n\t\treturn this.point.x;\n\t},\n\tset: function( value ) {\n\t\tthis.point.x = value;\n\t}\n});\n\nObject.defineProperty( paper.Segment.prototype, 'y', {\n\tget: function() {\n\t\treturn this.point.y;\n\t},\n\tset: function( value ) {\n\t\tthis.point.y = value;\n\t}\n});\n\nmodule.exports = paper.Segment;\n","var paper = require('../node_modules/paper/dist/paper-core.js');\n\nfunction Outline() {\n\tpaper.CompoundPath.prototype.constructor.apply( this );\n}\n\n// inehrit CompoundPath\nOutline.prototype = Object.create(paper.CompoundPath.prototype);\nOutline.prototype.constructor = Outline;\n\n// Fix two problems with CompoundPath#insertChildren:\n// - it arbitrarily changes the direction of paths\n// - it seems that it doesn't handle CompoundPath arguments\nOutline.prototype.insertChildren = function(index, items, _preserve) {\n\tif ( Array.isArray( items ) ) {\n\t\t// flatten items to handle CompoundPath children\n\t\titems = [].concat.apply([], items.map(function(item) {\n\t\t\treturn item instanceof paper.Path ? item : item.children;\n\t\t}));\n\t}\n\n\treturn paper.Item.prototype.insertChildren.call(\n\t\tthis, index, items, _preserve, paper.Path\n\t);\n};\n\nOutline.fromPath = function( path ) {\n\tvar result = new Outline();\n\treturn path._clone( result, false );\n};\n\nOutline.prototype.interpolate = function( outline0, outline1, coef ) {\n\tfor (var i = 0, l = this.contours.length; i < l; i++) {\n\t\t// The number of children should be the same everywhere,\n\t\t// but we're going to try our best anyway\n\t\tif ( !outline0.children[i] || !outline1.children[i] ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.children[i].interpolate(\n\t\t\toutline0.children[i],\n\t\t\toutline1.children[i],\n\t\t\tcoef\n\t\t);\n\t}\n\n\treturn this;\n};\n\nOutline.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateSVGData( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.svgData;\n};\n\nOutline.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateOTCommands( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.ot;\n};\n\nmodule.exports = Outline;\n","/* Extend the Path prototype to add OpenType conversion\n * and alias *segments methods and properties to *nodes\n */\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nvar proto = paper.PaperScope.prototype.Path.prototype;\n\n// alias *Segments methods to *Nodes equivalents\n[ 'add', 'insert', 'remove' ].forEach(function(name) {\n\tproto[name + 'Nodes'] =\n\t\tproto[name + 'Segments'];\n});\n\n// alias .segments to .nodes\nObject.defineProperties(proto, {\n\tnodes: Object.getOwnPropertyDescriptor( proto, 'segments' ),\n\tfirstNode: Object.getOwnPropertyDescriptor( proto, 'firstSegment' ),\n\tlastNode: Object.getOwnPropertyDescriptor( proto, 'lastSegment' )\n});\n\nproto._updateData = function( data, matrix, pushSimple, pushBezier ) {\n\tif ( this.visible === false || this.curves.length === 0) {\n\t\treturn data;\n\t}\n\n\t// prototypo needs to be able to change the direction of the updated data.\n\tvar reverse = this.exportReversed,\n\t\tcurves = this.curves,\n\t\tstart = curves[ reverse ? curves.length - 1 : 0 ]\n\t\t\t[ 'point' + ( reverse ? 2 : 1 ) ]\n\t\t\t.transform( matrix );\n\n\tpushSimple(\n\t\t'M',\n\t\tMath.round( start.x ) || 0,\n\t\tMath.round( start.y ) || 0\n\t);\n\n\tfor ( var i = -1, l = curves.length; ++i < l; ) {\n\t\tvar curve = curves[ reverse ? l - 1 - i : i ],\n\t\t\tend = curve['point' + ( reverse ? 1 : 2 ) ].transform( matrix );\n\n\t\tif ( curve.isStraight() ) {\n\t\t\tpushSimple(\n\t\t\t\t'L',\n\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\tMath.round( end.y ) || 0\n\t\t\t);\n\n\t\t} else {\n\t\t\tvar ctrl1 = new paper.Point(\n\t\t\t\t\tcurve.point1.x + curve.handle1.x,\n\t\t\t\t\tcurve.point1.y + curve.handle1.y\n\t\t\t\t).transform( matrix ),\n\t\t\t\tctrl2 = new paper.Point(\n\t\t\t\t\tcurve.point2.x + curve.handle2.x,\n\t\t\t\t\tcurve.point2.y + curve.handle2.y\n\t\t\t\t).transform( matrix );\n\n\t\t\tif ( reverse ) {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( this.closed ) {\n\t\tpushSimple('Z');\n\t}\n\n\treturn data;\n};\n\nproto.updateOTCommands = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx: arguments[1],\n\t\t\t\ty: arguments[2]\n\t\t\t});\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx1: arguments[1],\n\t\t\t\ty1: arguments[2],\n\t\t\t\tx2: arguments[3],\n\t\t\t\ty2: arguments[4],\n\t\t\t\tx: arguments[5],\n\t\t\t\ty: arguments[6]\n\t\t\t});\n\t\t}\n\t);\n};\n\nproto.updateSVGData = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t}\n\t);\n};\n\nmodule.exports = paper.Path;\n","var opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tFont = require('./Font.js'),\n\tGlyph = require('./Glyph.js'),\n\tOutline = require('./Outline'),\n\tPath = require('./Path.js'),\n\tNode = require('./Node.js'),\n\tCollection = require('./Collection.js');\n\npaper.PaperScope.prototype.Font = Font;\npaper.PaperScope.prototype.Glyph = Glyph;\npaper.PaperScope.prototype.Outline = Outline;\npaper.PaperScope.prototype.Path = Path;\npaper.PaperScope.prototype.Node = Node;\npaper.PaperScope.prototype.Collection = Collection;\n\nfunction plumin( arg ) {\n\tif ( arguments.length === 1 && arg instanceof Collection ) {\n\t\treturn arg;\n\t}\n\n\tvar c = Object.create( Collection.prototype );\n\tCollection.apply( c, arguments );\n\treturn c;\n}\n\nplumin.opentype = opentype;\n\nplumin.proxy = Collection.proxy.bind(plumin);\nplumin.proxy(paper);\n\nmodule.exports = plumin;\n"]}