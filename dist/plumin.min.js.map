{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/opentype.js/dist/opentype.js","node_modules/paper/dist/paper-core.js","src/Collection.js","src/Font.js","src/Glyph.js","src/Node.js","src/Path.js","src/plumin.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","plumin","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"opentype","argument","predicate","message","assert",2,"line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke",3,"cffStandardStrings","cffStandardEncoding","cffExpertEncoding","standardNames","DefaultEncoding","font","prototype","charToGlyphIndex","c","glyphs","glyph","j","charCodeAt","unicodes","CmapEncoding","cmap","glyphIndexMap","CffEncoding","encoding","charset","charName","indexOf","GlyphNames","post","version","names","slice","Array","numberOfGlyphs","glyphNameIndex","nameToGlyphIndex","name","glyphIndexToName","gid","addGlyphNames","charCodes","glyphIndex","tables","Object","keys","addUnicode","parseInt","cffEncoding","glyphNames",4,"path","sfnt","Font","options","familyName","styleName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","unitsPerEm","ascender","descender","supported","hasChar","charToGlyph","stringToGlyphs","push","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","index","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","text","x","y","fontSize","callback","kerning","fontScale","kerningValue","undefined","advanceWidth","getPath","fullPath","Path","gX","gY","gFontSize","glyphPath","extend","draw","drawPoints","drawMetrics","validate","warnings","assertStringAttribute","attrName","trim","toTables","fontToTable","toBuffer","sfntTable","bytes","encode","buffer","ArrayBuffer","intArray","Uint8Array","download","fileName","replace","requestFileSystem","webkitRequestFileSystem","TEMPORARY","byteLength","fs","root","getFile","create","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","type","write","addEventListener","location","href","toURL","err","./encoding","./path","./tables/sfnt",5,"check","Glyph","unicode","xMin","yMin","xMax","yMax","scale","p","commands","cmd","quadraticCurveTo","curveTo","closePath","getContours","contours","currentContour","pt","points","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","Math","min","apply","max","leftSideBearing","rightSideBearing","drawCircles","PI_SQ","PI","arc","fill","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw",6,"_font","parse","cff","glyf","gpos","head","hhea","hmtx","kern","loca","maxp","_name","os2","toArrayBuffer","arrayBuffer","data","loadFromFile","readFile","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseBuffer","numTables","tag","offset","hmtxOffset","glyfOffset","locaOffset","cffOffset","kernOffset","gposOffset","indexToLocFormat","numGlyphs","locaTable","shortVersion","getFixed","outlinesFormat","getTag","getUShort","getULong","numberOfHMetrics","fontFamily","fontSubfamily","load","isNode","loadFn","./font","./glyph","./parse","./tables/cff","./tables/cmap","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/maxp","./tables/name","./tables/os2","./tables/post",7,"getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","decimal","fraction","String","fromCharCode","getInt8","getOffset","offSize","v","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","count","offsets","parseString","string","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount",8,"strokeWidth","bezierCurveTo","quadTo","close","pathOrCommands","toPathData","decimalPlaces","floatToString","round","toFixed","packValues","arguments","d","toSVG","svg",9,"sizeOf","Table","tableName","fields","field","value","optionKeys","k","sizeOfFunction","TABLE","./types",10,"_glyph","table","equals","b","isArray","parseCFFIndex","start","conversionFn","objects","offsetSize","objectOffset","pos","parseFloatOperand","parser","eof","lookup","n1","n2","parseFloat","parseOperand","b0","b1","b2","b3","b4","entriesToObject","entries","key","values","hasOwnProperty","parseCFFDict","size","operands","op","getCFFString","strings","interpretDict","dict","meta","m","newDict","parseCFFHeader","header","formatMajor","formatMinor","TOP_DICT_META","PRIVATE_DICT_META","parseCFFTopDict","parseCFFPrivateDict","parseCFFCharset","nGlyphs","format","sid","parseCFFEncoding","enc","nCodes","nRanges","first","nLeft","parseCFFCharstring","stack","nStems","haveWidth","width","c1x","c1y","c2x","c2y","defaultWidthX","newContour","parseStems","hasWidthArg","shift","nominalWidthX","codeIndex","subrCode","pop","subrsBias","subrs","jpx","jpy","c3x","c3y","c4x","c4y","fd","abs","console","log","gsubrsBias","gsubrs","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charString","charStringsIndex","topDictData","charStrings","encodeString","makeHeader","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","ops","dx","dy","dx1","dy1","dx2","dy2","_13","_23","makeCharStringsIndex","makePrivateDict","makePrivateDictIndex","privateDicts","makeCFFTable","fullName","weight","weightName","private","privateAttrs","postScriptName","charsets","privateDictIndex","make","../encoding","../glyph","../parse","../path","../table",11,"parseCmapTable","platformId","encodingId","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","numtables","language","addSegment","segments","end","delta","addTerminatorSegment","makeCmapTable","segCountX2","searchRange","pow","floor","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","concat","glyphId","../check",12,"parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","parseGlyph","flags","endPointIndices","numberOfCoordinates","repeatCount","point","px","py","component","moreComponents","numberOfContours","instructionLength","instructions","onCurve","isComposite","components","xScale","scale01","scale10","yScale","transformPoints","transform","newPoints","newPt","realFirstPoint","contour","firstPt","prevPt","midPt","curvePt","lastPt","parseGlyfTable","nextOffset","componentGlyph","transformedPoints",13,"parseTaggedListTable","list","parseCoverageTable","begin","coverage","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","coverageOffset","valueFormat1","valueFormat2","sharedPairSets","firstGlyph","secondGlyph","value1","value2","pairSetCount","pairSetOffsets","pairSetOffset","sharedPairSet","pairValueCount","pairSet","pairs","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","subtables","markFilteringSet","parseGposTable","tableVersion","lookupListOffset","scriptList","featureList","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset",14,"parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable",15,"parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable",16,"parseHmtxTable","numMetrics","makeHmtxTable",17,"parseKernTable","subTableVersion","nPairs","leftIndex","rightIndex",18,"parseLocaTable","parseFn","glyphOffsets","glyphOffset",19,"parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable",20,"nameTableNames","parseNameTable","stringOffset","platformID","encodingID","languageID","nameID","property","str","codePoints","unknownCount","langTagCount","makeNameRecord","addMacintoshNameRecord","recordID","stringBytes","STRING","records","addWindowsNameRecord","utf16Bytes","UTF16","makeNameTable","../types",21,"parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table",22,"parsePostTable","nameLength","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","makePostTable",23,"log2","computeCheckSum","sum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","isNaN","sort","r1","r2","metricsForChar","chars","notFoundMetrics","charCodeBounds","minCode","maxCode","average","vs","fontToSfntTable","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","codeBounds","os2Table","hmtxTable","cmapTable","nameTable","uniqueID","preferredFamily","preferredSubfamily","postTable","cffTable","./cff","./cmap","./head","./hhea","./hmtx","./maxp","./name","./os2","./post",24,"LIMIT16","LIMIT32","decode","constant","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","NAME","INDEX","offsetEncoder","encodedOffsets","encodedOffset","dataSize","OBJECT","DICT","OPERAND","OPERATOR","OP","wmm","WeakMap","CHARSTRING","has","get","set","encodingFunction","LITERAL","paper","noCanvas","process","browser","WorkerGlobalScope","Base","hidden","forEach","iter","bind","forIn","proto","__proto__","describe","getOwnPropertyDescriptor","obj","__lookupGetter__","__lookupSetter__","enumerable","configurable","writable","_define","defineProperty","desc","__defineGetter__","__defineSetter__","inject","dest","src","beans","preserve","beansNames","val","substring","isFunc","res","prev","bean","base","match","toLowerCase","isPlainObject","test","part","each","getLength","props","exclude","statics","ctor","initialize","clone","constructor","pick","toString","_id","_class","Formatter","instance","number","join","getClassName","exportJSON","toJSON","serialize","_set","dontCheck","orig","_filtering","obj1","obj2","checkKeys","o1","o2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","precision","definitions","references","add","item","id","ref","unshift","_serialize","_compact","deserialize","json","_data","isRoot","isDictionary","args","JSON","stringify","importJSON","target","isTarget","Item","Layer","insert","splice","items","remove","append","_index","removed","capitalize","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","func","_eventTypes","handlers","_callbacks","install","off","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","types","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","support","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","navigator","userAgent","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","sqrt","TOLERANCE","EPSILON","MACHINE_EPSILON","KAPPA","isZero","integrate","w","A","B","Ax","findRoot","df","tolerance","fx","nx","solveQuadratic","roots","Infinity","D","gmC","mult","LOG10E","isFinite","R","q","solveCubic","c2","ec","x0","qd","tmp","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","atan2","div","NaN","dot","acos","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","subtract","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isColinear","isOrthogonal","point1","point2","random","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","to","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","d2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","apx","apy","avx","avy","bpx","bpy","bvx","bvy","ta","tb","vx","vy","v2x","v2y","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","_drawSelection","Symbol","dontCenter","setDefinition","_definition","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","position","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","parent","setParent","mouseFlags","mousedown","mousedrag","click","doubleclick","mouseup","mousemove","mouseenter","mouseleave","mouseEvent","counters","_eventCounters","onFrame","_animateItem","onLoad","animate","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getRegistration","setRegistration","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","child","setBounds","cache","_boundsCache","ids","cached","_internal","other","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","getIntersections","guides","parentTotalMatrix","_totalMatrix","view","totalMatrix","tolerancePadding","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","class","checkBounds","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matches","compare","matchObject","RegExp","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","reduce","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","toCanvasStyle","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","getViewMatrix","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","mainCtx","itemOffset","prevOffset","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","source","object","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","context","toDataURL","loaded","update","document","getElementById","Image","setTimeout","DomEvent","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","isLinear","_point","_handleIn","_handleOut","_path","curves","_curves","curve","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","setLinear","linear","next1","getNext","next2","getPrevious","isArc","handle1","handle2","_selectionState","state","oldState","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","removeSegment","interpolate","segment0","segment1","coef","dxPoint","dyPoint","dxHandleIn","dyHandleIn","dxHandleOut","dyHandleOut","change","Curve","arg6","arg7","_segment2","segment2","_length","getPoint1","setPoint1","getPoint2","setPoint2","getHandle1","setHandle1","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getPart","getPartLength","filterIntersections","_getParameter","isParameter","parameter","getParameterAt","ignoreLinear","subdivide","split","p1","h1","h2","p2","evaluate","p1x","p1y","p2x","p2y","bx","ax","by","ay","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","txs","tys","sx","sy","isFlatEnough","ux","uy","getEdgeSum","_addBounds","v0","v3","padding","tMin","tMax","getLocationAt","getLocationOf","getOffsetOf","loc","getNearestLocation","minDist","minT","refine","dist","step","getNearestPoint","getLengthIntegrand","getIterations","ds","forward","rangeLength","guess","addLocation","locations","curve1","t1","curve2","t2","addCurveIntersections","uMin","uMax","oldTDiff","recursion","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","tMinNew","tMaxNew","tDiff","hull","getConvexHull","tMinClip","tMaxClip","clipConvexHull","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","flip","pmax","distZero","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rlx2","rvl","rvc","tc","tl","addLineIntersection","linear1","linear2","c1p1","c1p2","c2p1","c2p2","_expand","last","_curve","_curve2","_parameter","_parameter2","loc1","loc2","path1","path2","getParameter","getIntersection","_point2","_distance","getSegment","_preferFirst","_segment","_uncached","intersection","_intersection","_getOffset","getCurveOffset","getPointAt","curves1","curves2","matrix1","matrix2","length1","length2","values2","values1","seg1","seg2","setPathData","relative","previous","control","getCoord","command","lower","move","cubicCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","skipLine","isPolygon","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","simplify","fitter","PathFitter","fit","isClockwise","setClockwise","clockwise","last1","last2","first2","first1","path0","toShape","topCenter","shape","numSegments","strokePadding","cap","hitStroke","hitFill","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","_addBevelJoin","_addSquareCap","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","overlap","knots","f1","f2","ie","je","getCurrentSegment","moveBy","through","extent","vector","middle","large","epsilon","rxSq","rySq","xSq","ySq","l1","l2","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","prevCoords","processSegment","joinBounds","addRound","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getNormal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","compoundpath0","compoundpath1","paths","getCurrentPath","operators","computeBoolean","operation","operator","preparePath","reorient","_path1","_path2","splitPath","monoCurves","collect","_getMonoCurves","_winding","startSeg","totalLength","windingSum","node","curveLength","getTangentAt","getWinding","result","tracePaths","intersections","linearHandles","resetLinear","newCurve","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","prevT","slope","selfOp","_visited","inter","startInterSeg","added","interSeg","c4","c3","t3","t4","w3","w4","nextCurve","nextSeg","firstSegment","lastSegment","prevCurve","insertCurve","y0","handleCurve","y3","getInteriorPoint","xIntercepts","maxRecursion","minDifference","addCurve","computeParts","maxT","halfT","prevVal","prevLen","error","fitCubic","tan1","tan2","pt1","pt2","uPrime","chordLengthParameterize","maxError","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","detC0C1","alpha1","alpha2","detC0X","detXC1","c0","segLength","diff","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","gray","rgb","hsb","hsl","gradient","componentParsers","colorCache","colorCtx","fromCSS","hsbIndices","converters","rgb-hsb","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","_stops","origin","destination","canvasGradient","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","acronym","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","nativeRequest","requested","callbacks","focused","timer","focus","blur","handleCallbacks","setInterval","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","getCanvasSize","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","onResize","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tool","prevFocus","tempFocus","dragging","handleMouseMove","_handleEvent","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","HTMLCanvasElement","deviceRatio","backingStoreRatio","prevFont","measureText","downPoint","lastPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","callEvent","MouseEvent","isStopped","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","specialKeys",27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","charCodeMap","keyMap","downCode","handleKey","keyCode","charCode","specialKey","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","method","xhr","ActiveXObject","overrideMimeType","onreadystatechange","readyState","responseText","canvases","createElement","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","attribute","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","namespace","setAttributeNS","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","exporters","applyStyle","visibility","svgs","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","nodes","childNodes","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","importers","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","applyTransform","transforms","applyOpacity","attributes","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","styles","group","parentNode","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","onImport","expandShapes","Collection","cb","wrapConstructor","useConstructed","wrapper","arr","params","rconstructor","constructorFilter","unwrapArg","isPlural","unwrapArgs","proxy","methodNames","getOwnPropertyNames","filter","plural","ot","glyphMap","charMap","altMap","_subset","addGlyph","addGlyphs","fonts","addedFonts","delete","styleElement","styleSheet","styleSheets","ss","ownerNode","_lastSubset","normalizeSubset","getGlyphSubset","font0","font1","updateSVGData","updateOTCommands","importOT","otFont","otGlyph","_URL","URL","webkitURL","addToFonts","fontface","FontFace","createObjectURL","fontObjectURL","revokeObjectURL","deleteRule","insertRule","onloadend","readAsDataURL","lastIndexOf","anchors","parentAnchors","addComponent","addComponents","addAnchor","addAnchors","addParentAnchor","glyph0","glyph1","svgData","addContour","defineProperties","firstNode","lastNode","_updateData","pushSimple","pushBezier","Node"],"mappings":"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+vB,OAAA0J,WAAA7+B,UAAAivF,KAAAA,IACA95D,OAAA0J,WAAA7+B,UAAAwqF,WAAAA,UAEA,SAAAhtF,QAAAm9B,KACA,GAAA/mB,UAAArV,SAAA,GAAAo8B,cAAA6vD,YAAA,CACA,MAAA7vD,KAGA,GAAAz6B,GAAA8B,OAAAsF,OAAAkjF,WAAAxqF,UACAwqF,YAAArgF,MAAAjK,EAAA0T,UACA,OAAA1T,GAGA1C,OAAAiB,SAAAA,QAEAjB,QAAA4tF,MAAAZ,WAAAY,MAAAx1D,KAAAp4B,OACAA,QAAA4tF,MAAAj2D,MAEAnxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1+YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxlPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.opentype=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function (predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],2:[function(require,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],3:[function(require,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function (c) {\n    var code, glyphs, i, glyph, j;\n    code = c.charCodeAt(0);\n    glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (i = 0; i < glyphs.length; i += 1) {\n            glyph = glyphs[i];\n            for (j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function (c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function (s) {\n    var code, charName;\n    code = s.charCodeAt(0);\n    charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function (name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function (gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyphIndexMap, charCodes, i, c, glyphIndex, glyph;\n    glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    charCodes = Object.keys(glyphIndexMap);\n    for (i = 0; i < charCodes.length; i += 1) {\n        c = charCodes[i];\n        glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs[glyphIndex];\n        glyph.addUnicode(parseInt(c));\n    }\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs[i];\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],4:[function(require,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = require('./path');\nvar sfnt = require('./tables/sfnt');\nvar encoding = require('./encoding');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n    // OS X will complain if the names are empty, so we put a single space everywhere by default.\n    this.familyName = options.familyName || ' ';\n    this.styleName = options.styleName || ' ';\n    this.designer = options.designer || ' ';\n    this.designerURL = options.designerURL || ' ';\n    this.manufacturer = options.manufacturer || ' ';\n    this.manufacturerURL = options.manufacturerURL || ' ';\n    this.license = options.license || ' ';\n    this.licenseURL = options.licenseURL || ' ';\n    this.version = options.version || 'Version 0.1';\n    this.description = options.description || ' ';\n    this.copyright = options.copyright || ' ';\n    this.trademark = options.trademark || ' ';\n    this.unitsPerEm = options.unitsPerEm || 1000;\n    this.ascender = options.ascender;\n    this.descender = options.descender;\n    this.supported = true;\n    this.glyphs = options.glyphs || [];\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function (c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function (s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function (c) {\n    var glyphIndex, glyph;\n    glyphIndex = this.charToGlyphIndex(c);\n    glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        glyph = this.glyphs[0]; // .notdef\n    }\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function (s) {\n    var i, c, glyphs;\n    glyphs = [];\n    for (i = 0; i < s.length; i += 1) {\n        c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function (name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function (name) {\n    var glyphIndex, glyph;\n    glyphIndex = this.nametoGlyphIndex(name);\n    glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        glyph = this.glyphs[0]; // .notdef\n    }\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function (gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function (leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function (text, x, y, fontSize, options, callback) {\n    var kerning, fontScale, glyphs, i, glyph, kerningValue;\n    if (!this.supported) {\n        return;\n    }\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    kerning = options.kerning === undefined ? true : options.kerning;\n    fontScale = 1 / this.unitsPerEm * fontSize;\n    glyphs = this.stringToGlyphs(text);\n    for (i = 0; i < glyphs.length; i += 1) {\n        glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n        if (kerning && i < glyphs.length - 1) {\n            kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function (text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function (glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n    return fullPath;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function (ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function (ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function (glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function (ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function (glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Validate\nFont.prototype.validate = function () {\n    var warnings = [];\n    var font = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertStringAttribute(attrName) {\n        assert(font[attrName] && font[attrName].trim().length > 0, 'No ' + attrName + ' specified.');\n    }\n\n    // Identification information\n    assertStringAttribute('familyName');\n    assertStringAttribute('weightName');\n    assertStringAttribute('manufacturer');\n    assertStringAttribute('copyright');\n    assertStringAttribute('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function () {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function () {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function () {\n    var fileName = this.familyName.replace(/\\s/g, '') + '-' + this.styleName + '.otf';\n    var buffer = this.toBuffer();\n\n    window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n    window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function (fs) {\n        fs.root.getFile(fileName, {create: true}, function (fileEntry) {\n            fileEntry.createWriter(function (writer) {\n                var dataView = new DataView(buffer);\n                var blob = new Blob([dataView], {type: 'font/opentype'});\n                writer.write(blob);\n\n                 writer.addEventListener('writeend', function () {\n                    // Navigating to the file will download it.\n                    location.href = fileEntry.toURL();\n                 }, false);\n            });\n        });\n    }, function (err) {\n        throw err;\n    });\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":3,\"./path\":8,\"./tables/sfnt\":23}],5:[function(require,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = require('./check');\nvar draw = require('./draw');\nvar path = require('./path');\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    this.font = options.font || null;\n    this.index = options.index || 0;\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n    this.xMin = options.xMin || 0;\n    this.yMin = options.yMin || 0;\n    this.xMax = options.xMax || 0;\n    this.yMax = options.yMax || 0;\n    this.advanceWidth = options.advanceWidth || 0;\n    this.path = options.path || null;\n}\n\nGlyph.prototype.addUnicode = function (unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function (x, y, fontSize) {\n    var scale, p, commands, cmd;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    p = new path.Path();\n    commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function () {\n    var contours, currentContour, i, pt;\n    if (this.points === undefined) {\n        return [];\n    }\n    contours = [];\n    currentContour = [];\n    for (i = 0; i < this.points.length; i += 1) {\n        pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function () {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function (ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function (ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var j, PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    var scale, i, blueCircles, redCircles, path, cmd;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n\n    blueCircles = [];\n    redCircles = [];\n    path = this.path;\n    for (i = 0; i < path.commands.length; i += 1) {\n        cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function (ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (this.xMin * scale), -10000, x + (this.xMin * scale), 10000);\n    draw.line(ctx, x + (this.xMax * scale), -10000, x + (this.xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-this.yMin * scale), 10000, y + (-this.yMin * scale));\n    draw.line(ctx, -10000, y + (-this.yMax * scale), 10000, y + (-this.yMax * scale));\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (this.advanceWidth * scale), -10000, x + (this.advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":1,\"./draw\":2,\"./path\":8}],6:[function(require,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2014 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global ArrayBuffer, DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar encoding = require('./encoding');\nvar _font = require('./font');\nvar glyph = require('./glyph');\nvar parse = require('./parse');\nvar path = require('./path');\n\nvar cmap = require('./tables/cmap');\nvar cff = require('./tables/cff');\nvar glyf = require('./tables/glyf');\nvar gpos = require('./tables/gpos');\nvar head = require('./tables/head');\nvar hhea = require('./tables/hhea');\nvar hmtx = require('./tables/hmtx');\nvar kern = require('./tables/kern');\nvar loca = require('./tables/loca');\nvar maxp = require('./tables/maxp');\nvar _name = require('./tables/name');\nvar os2 = require('./tables/os2');\nvar post = require('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\n// Convert a Node.js Buffer to an ArrayBuffer\nfunction toArrayBuffer(buffer) {\n    var i,\n        arrayBuffer = new ArrayBuffer(buffer.length),\n        data = new Uint8Array(arrayBuffer);\n\n    for (i = 0; i < buffer.length; i += 1) {\n        data[i] = buffer[i];\n    }\n\n    return arrayBuffer;\n}\n\nfunction loadFromFile(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function (err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, toArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function () {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n        return callback(null, request.response);\n    };\n    request.send();\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// If the file could not be parsed (most likely because it contains Postscript outlines)\n// we return an empty Font object with the `supported` flag set to `false`.\nfunction parseBuffer(buffer) {\n    var font, data, version, numTables, i, p, tag, offset, hmtxOffset, glyfOffset, locaOffset,\n        cffOffset, kernOffset, gposOffset, indexToLocFormat, numGlyphs, locaTable,\n        shortVersion;\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n\n    font = new _font.Font();\n    data = new DataView(buffer, 0);\n\n    version = parse.getFixed(data, 0);\n    if (version === 1.0) {\n        font.outlinesFormat = 'truetype';\n    } else {\n        version = parse.getTag(data, 0);\n        if (version === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType version ' + version);\n        }\n    }\n\n    numTables = parse.getUShort(data, 4);\n\n    // Offset into the table records.\n    p = 12;\n    for (i = 0; i < numTables; i += 1) {\n        tag = parse.getTag(data, p);\n        offset = parse.getULong(data, p + 8);\n        switch (tag) {\n        case 'cmap':\n            font.tables.cmap = cmap.parse(data, offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            if (!font.encoding) {\n                font.supported = false;\n            }\n            break;\n        case 'head':\n            font.tables.head = head.parse(data, offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            font.tables.hhea = hhea.parse(data, offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxOffset = offset;\n            break;\n        case 'maxp':\n            font.tables.maxp = maxp.parse(data, offset);\n            font.numGlyphs = numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            font.tables.name = _name.parse(data, offset);\n            font.familyName = font.tables.name.fontFamily;\n            font.styleName = font.tables.name.fontSubfamily;\n            break;\n        case 'OS/2':\n            font.tables.os2 = os2.parse(data, offset);\n            break;\n        case 'post':\n            font.tables.post = post.parse(data, offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfOffset = offset;\n            break;\n        case 'loca':\n            locaOffset = offset;\n            break;\n        case 'CFF ':\n            cffOffset = offset;\n            break;\n        case 'kern':\n            kernOffset = offset;\n            break;\n        case 'GPOS':\n            gposOffset = offset;\n            break;\n        }\n        p += 16;\n    }\n\n    if (glyfOffset && locaOffset) {\n        shortVersion = indexToLocFormat === 0;\n        locaTable = loca.parse(data, locaOffset, numGlyphs, shortVersion);\n        font.glyphs = glyf.parse(data, glyfOffset, locaTable, font);\n        hmtx.parse(data, hmtxOffset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n        encoding.addGlyphNames(font);\n    } else if (cffOffset) {\n        cff.parse(data, cffOffset, font);\n        encoding.addGlyphNames(font);\n    } else {\n        font.supported = false;\n    }\n\n    if (font.supported) {\n        if (kernOffset) {\n            font.kerningPairs = kern.parse(data, kernOffset);\n        } else {\n            font.kerningPairs = {};\n        }\n        if (gposOffset) {\n            gpos.parse(data, gposOffset, font);\n        }\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function (err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n        var font = parseBuffer(arrayBuffer);\n        if (!font.supported) {\n            return callback('Font is not supported (is this a Postscript font?)');\n        }\n        return callback(null, font);\n    });\n}\n\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\n\n},{\"./encoding\":3,\"./font\":4,\"./glyph\":5,\"./parse\":7,\"./path\":8,\"./tables/cff\":10,\"./tables/cmap\":11,\"./tables/glyf\":12,\"./tables/gpos\":13,\"./tables/head\":14,\"./tables/hhea\":15,\"./tables/hmtx\":16,\"./tables/kern\":17,\"./tables/loca\":18,\"./tables/maxp\":19,\"./tables/name\":20,\"./tables/os2\":21,\"./tables/post\":22,\"fs\":undefined}],7:[function(require,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function (dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function (dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function (dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function (dataView, offset) {\n    var decimal, fraction;\n    decimal = dataView.getInt16(offset, false);\n    fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function (dataView, offset) {\n    var tag = '', i;\n    for (i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function (dataView, offset, offSize) {\n    var i, v;\n    v = 0;\n    for (i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function (dataView, startOffset, endOffset) {\n    var bytes, i;\n    bytes = [];\n    for (i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function (bytes) {\n    var s, i;\n    s = '';\n    for (i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function () {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function () {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function () {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function () {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function () {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function () {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function () {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function (count) {\n    var offsets = new Array(count),\n        dataView = this.data,\n        offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function (length) {\n    var dataView = this.data,\n        offset = this.offset + this.relativeOffset,\n        string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n    return string;\n};\n\nParser.prototype.parseTag = function () {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function (type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],8:[function(require,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function (x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function (x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function (x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function (x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function () {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function (pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function (ctx) {\n    var i, cmd;\n    ctx.beginPath();\n    for (i = 0; i < this.commands.length; i += 1) {\n        cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function (decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n            s += floatToString(v);\n        }\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function (decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],9:[function(require,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = require('./check');\nvar encode = require('./types').encode;\nvar sizeOf = require('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function () {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n    return v;\n};\n\nTable.prototype.encode = function () {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":1,\"./types\":24}],10:[function(require,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\nvar table = require('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    var offsets, objects, count, endOffset, offsetSize, objectOffset, pos, i, value;\n    offsets = [];\n    objects = [];\n    count = parse.getCard16(data, start);\n    if (count !== 0) {\n        offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n        objects.push(value);\n    }\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s, eof, lookup, b, n1, n2;\n    s = '';\n    eof = 15;\n    lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        b = parser.parseByte();\n        n1 = b >> 4;\n        n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n        s += lookup[n2];\n    }\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1, b2, b3, b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o, key, values, i, value;\n    o = {};\n    for (i = 0; i < entries.length; i += 1) {\n        key = entries[i][0];\n        values = entries[i][1];\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n        o[key] = value;\n    }\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    var parser, entries, operands, op;\n    start = start !== undefined ? start : 0;\n    parser = new parse.Parser(data, start);\n    entries = [];\n    operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        op = parser.parseByte();\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var i, m, value, newDict;\n    newDict = {};\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (i = 0; i < meta.length; i += 1) {\n        m = meta[i];\n        value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n        newDict[m.name] = value;\n    }\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict;\n    dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict;\n    dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var parser, format, charset, i, sid, count;\n    parser = new parse.Parser(data, start);\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    charset = ['.notdef'];\n\n    format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var enc, parser, format, nCodes, i, code, nRanges, first, nLeft, j;\n    enc = {};\n    parser = new parse.Parser(data, start);\n    format = parser.parseCard8();\n    if (format === 0) {\n        nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            first = parser.parseCard8();\n            nLeft = parser.parseCard8();\n            for (j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(code, font, index) {\n    var p, glyph, stack, nStems, haveWidth, width, open, x, y, c1x, c1y, c2x, c2y, v;\n    p = new path.Path();\n    stack = [];\n    nStems = 0;\n    haveWidth = false;\n    width = font.defaultWidthX;\n    open = false;\n    x = y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var i, b1, b2, b3, b4, codeIndex, subrCode;\n        i = 0;\n        while (i < code.length) {\n            v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                var jpx, jpy, c3x, c3y, c4x, c4y, fd;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    fd = stack.shift();           // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    // y = y;                     // dy6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    // y = y;                     // dy6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();  // d6\n                    } else {\n                        y = c4y + stack.shift();  // d6\n                    }\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n                p.closePath();\n                open = false;\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n    glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.path = p;\n    glyph.advanceWidth = width;\n    return glyph;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    var header, nameIndex, topDictIndex, stringIndex, globalSubrIndex, topDict, privateDictOffset, privateDict,\n        subrOffset, subrIndex, charString, charStringsIndex, charset, i;\n    font.tables.cff = {};\n    header = parseCFFHeader(data, start);\n    nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    privateDictOffset = start + topDict['private'][1];\n    privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        subrOffset = privateDictOffset + privateDict.subrs;\n        subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = [];\n    for (i = 0; i < font.nGlyphs; i += 1) {\n        charString = charStringsIndex.objects[i];\n        font.glyphs.push(parseCFFCharstring(charString, font, i));\n    }\n}\n\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var i, sid;\n    // Is the string in the CFF standard strings?\n    i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {}, i, entry, value;\n    for (i = 0; i < meta.length; i += 1) {\n        entry = meta[i];\n        value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [], path = glyph.path, x, y, i, cmd, dx, dy, dx1, dy1, dx2, dy2;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    x = 0;\n    y = 0;\n    for (i = 0; i < path.commands.length; i += 1) {\n        cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = cmd.x - x;\n            dy = cmd.y - y;\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = cmd.x;\n            y = cmd.y;\n        } else if (cmd.type === 'L') {\n            dx = cmd.x - x;\n            dy = cmd.y - y;\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = cmd.x;\n            y = cmd.y;\n        } else if (cmd.type === 'C') {\n            dx1 = cmd.x1 - x;\n            dy1 = cmd.y1 - y;\n            dx2 = cmd.x2 - cmd.x1;\n            dy2 = cmd.y2 - cmd.y1;\n            dx = cmd.x - cmd.x2;\n            dy = cmd.y - cmd.y2;\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = cmd.x;\n            y = cmd.y;\n        } else if (cmd.type === 'Z') {\n            // Contours are closed automatically.\n        }\n    }\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makePrivateDictIndex(privateDict) {\n    var t = new table.Table('Private DICT INDEX', [\n        {name: 'privateDicts', type: 'INDEX', value: []}\n    ]);\n    t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDictIndex', type: 'TABLE'}\n    ]);\n\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyphNames.push(glyphs[i].name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    var privateDict = makePrivateDict(privateAttrs, strings);\n    t.privateDictIndex = makePrivateDictIndex(privateDict);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n    attrs.encoding = 0; // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":3,\"../glyph\":5,\"../parse\":7,\"../path\":8,\"../table\":9}],11:[function(require,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var version, numTables, offset, platformId, encodingId, format, segCount,\n        endCountParser, startCountParser, idDeltaParser, idRangeOffsetParser, glyphIndexOffset,\n        endCount, startCount, i, c, idDelta, idRangeOffset, p, glyphIndex;\n    var cmap = {};\n    cmap.version = version = parse.getUShort(data, start);\n    check.argument(version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numtables = numTables = parse.getUShort(data, start + 2);\n    offset = -1;\n    for (i = 0; i < numTables; i += 1) {\n        platformId = parse.getUShort(data, start + 4 + (i * 8));\n        encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    p = new parse.Parser(data, start + offset);\n    cmap.format = format = p.parseUShort();\n    check.argument(format === 4, 'Only format 4 cmap tables are supported.');\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n    // segCount is stored x 2.\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    endCountParser = new parse.Parser(data, start + offset + 14);\n    startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        endCount = endCountParser.parseUShort();\n        startCount = startCountParser.parseUShort();\n        idDelta = idDeltaParser.parseShort();\n        idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i, j, glyph;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        glyph = glyphs[i];\n        for (j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n    }\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n     // Set up parallel segment arrays.\n    var endCounts = [],\n        startCounts = [],\n        idDeltas = [],\n        idRangeOffsets = [],\n        glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],12:[function(require,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = require('../check');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(data, start, index, font) {\n    var p, glyph, flag, i, j, flags,\n        endPointIndices, numberOfCoordinates, repeatCount, points, point, px, py,\n        component, moreComponents;\n    p = new parse.Parser(data, start);\n    glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    if (glyph.numberOfContours > 0) {\n        // This glyph is not a composite.\n        endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                repeatCount = p.parseByte();\n                for (j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            points = [];\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n                px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            component = {\n                glyphIndex: p.parseUShort(),\n                 xScale: 1,\n                 scale01: 0,\n                 scale10: 0,\n                 yScale: 1,\n                 dx: 0,\n                 dy: 0\n             };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n    return glyph;\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints, i, pt, newPt;\n    newPoints = [];\n    for (i = 0; i < points.length; i += 1) {\n        pt = points[i];\n        newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n    return newPoints;\n}\n\n\nfunction getContours(points) {\n    var contours, currentContour, i, pt;\n    contours = [];\n    currentContour = [];\n    for (i = 0; i < points.length; i += 1) {\n        pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p, contours, i, realFirstPoint, j, contour, pt, firstPt,\n        prevPt, midPt, curvePt, lastPt;\n    p = new path.Path();\n    if (!points) {\n        return p;\n    }\n    contours = getContours(points);\n    for (i = 0; i < contours.length; i += 1) {\n        contour = contours[i];\n        firstPt = contour[0];\n        lastPt = contour[contour.length - 1];\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            pt = contour[j];\n            prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n    p.closePath();\n    return p;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs, i, j, offset, nextOffset, glyph,\n        component, componentGlyph, transformedPoints;\n    glyphs = [];\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        offset = loca[i];\n        nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(parseGlyph(data, start + offset, i, font));\n        } else {\n            glyphs.push(new _glyph.Glyph({font: font, index: i}));\n        }\n    }\n    // Go over the glyphs again, resolving the composite glyphs.\n    for (i = 0; i < glyphs.length; i += 1) {\n        glyph = glyphs[i];\n        if (glyph.isComposite) {\n            for (j = 0; j < glyph.components.length; j += 1) {\n                component = glyph.components[j];\n                componentGlyph = glyphs[component.glyphIndex];\n                if (componentGlyph.points) {\n                    transformedPoints = transformPoints(componentGlyph.points, component);\n                    glyph.points = glyph.points.concat(transformedPoints);\n                }\n            }\n        }\n        glyph.path = getPath(glyph.points);\n    }\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":1,\"../glyph\":5,\"../parse\":7,\"../path\":8}],13:[function(require,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start),\n        n = p.parseUShort(),\n        list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start),\n        format = p.parseUShort(),\n        count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var i, begin, end, index, coverage = [];\n        for (; count--;) {\n            begin = p.parseUShort();\n            end = p.parseUShort();\n            index = p.parseUShort();\n            for (i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start),\n        format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort(),\n            glyphCount = p.parseUShort(),\n            classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort(),\n            startGlyphs = [],\n            endGlyphs = [],\n            classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n        return function(glyphID) {\n            var l, c, r;\n            l = 0;\n            r = startGlyphs.length - 1;\n            while (l < r) {\n                c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format, coverageOffset, coverage, valueFormat1, valueFormat2,\n        sharedPairSets, firstGlyph, secondGlyph, value1, value2;\n    // This part is common to format 1 and format 2 subtables\n    format = p.parseUShort();\n    coverageOffset = p.parseUShort();\n    coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    valueFormat1 = p.parseUShort();\n    valueFormat2 = p.parseUShort();\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount, pairSetOffsets, pairSetOffset, sharedPairSet, pairValueCount, pairSet;\n        pairSetCount = p.parseUShort();\n        pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            pairSetOffset = pairSetOffsets[firstGlyph];\n            sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset, classDef2Offset, class1Count, class2Count, i, j,\n            getClass1, getClass2, kerningMatrix, kerningRow, covered;\n        classDef1Offset = p.parseUShort();\n        classDef2Offset = p.parseUShort();\n        class1Count = p.parseUShort();\n        class2Count = p.parseUShort();\n        getClass1 = parseClassDefTable(data, start+classDef1Offset);\n        getClass2 = parseClassDefTable(data, start+classDef2Offset);\n\n        // Parse kerning values by class pair.\n        kerningMatrix = [];\n        for (i = 0; i < class1Count; i++) {\n            kerningRow = kerningMatrix[i] = [];\n            for (j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        covered = {};\n        for(i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph),\n                class2 = getClass2(rightGlyph),\n                kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var table, lookupType, lookupFlag, useMarkFilteringSet, subTableCount, subTableOffsets, subtables, i;\n    lookupType = p.parseUShort();\n    lookupFlag = p.parseUShort();\n    useMarkFilteringSet = lookupFlag & 0x10;\n    subTableCount = p.parseUShort();\n    subTableOffsets = p.parseOffset16List(subTableCount);\n    table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        subtables = [];\n        for (i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n            return 0;\n        };\n    }\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p, tableVersion, lookupListOffset, scriptList, i, featureList, lookupCount,\n        lookupTableOffsets, lookupListAbsoluteOffset, table;\n\n    p = new parse.Parser(data, start);\n    tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    scriptList = parseTaggedListTable(data, start+p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    featureList = parseTaggedListTable(data, start+p.parseUShort());\n\n    // LookupList\n    lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    lookupCount = p.parseUShort();\n    lookupTableOffsets = p.parseOffset16List(lookupCount);\n    lookupListAbsoluteOffset = start + lookupListOffset;\n    for (i = 0; i < lookupCount; i++) {\n        table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":1,\"../parse\":7}],14:[function(require,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {},\n        p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();     // 50\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],15:[function(require,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {},\n        p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":7,\"../table\":9}],16:[function(require,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var p, i, glyph, advanceWidth, leftSideBearing;\n    p = new parse.Parser(data, start);\n    for (i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n        glyph = glyphs[i];\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n\n\n\n},{\"../parse\":7,\"../table\":9}],17:[function(require,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs, p, tableVersion, subTableVersion, nPairs,\n        i, leftIndex, rightIndex, value;\n    pairs = {};\n    p = new parse.Parser(data, start);\n    tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (i = 0; i < nPairs; i += 1) {\n        leftIndex = p.parseUShort();\n        rightIndex = p.parseUShort();\n        value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":1,\"../parse\":7}],18:[function(require,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = require('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p, parseFn, glyphOffsets, glyphOffset, i;\n    p = new parse.Parser(data, start);\n    parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    glyphOffsets = [];\n    for (i = 0; i < numGlyphs + 1; i += 1) {\n        glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n        glyphOffsets.push(glyphOffset);\n    }\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":7}],19:[function(require,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {},\n        p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":7,\"../table\":9}],20:[function(require,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar encode = require('../types').encode;\nvar parse = require('../parse');\nvar table = require('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'licence',                // 13\n    'licenceURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\n// Parse the naming `name` table\n// Only Windows Unicode English names are supported.\n// Format 1 additional fields are not supported\nfunction parseNameTable(data, start) {\n    var name = {},\n        p = new parse.Parser(data, start);\n    name.format = p.parseUShort();\n    var count = p.parseUShort(),\n        stringOffset = p.offset + p.parseUShort();\n    var platformID, encodingID, languageID, nameID, property, byteLength,\n        offset, str, i, j, codePoints;\n    var unknownCount = 0;\n    for(i = 0; i < count; i++) {\n        platformID = p.parseUShort();\n        encodingID = p.parseUShort();\n        languageID = p.parseUShort();\n        nameID = p.parseUShort();\n        property = nameTableNames[nameID];\n        byteLength = p.parseUShort();\n        offset = p.parseUShort();\n        // platformID - encodingID - languageID standard combinations :\n        // 1 - 0 - 0 : Macintosh, Roman, English\n        // 3 - 1 - 0x409 : Windows, Unicode BMP (UCS-2), en-US\n        if (platformID === 3 && encodingID === 1 && languageID === 0x409) {\n            codePoints = [];\n            var length = byteLength/2;\n            for(j = 0; j < length; j++, offset += 2) {\n                codePoints[j] = parse.getShort(data, stringOffset+offset);\n            }\n            str = String.fromCharCode.apply(null, codePoints);\n            if (property) {\n                name[property] = str;\n            }\n            else {\n                unknownCount++;\n                name['unknown'+unknownCount] = str;\n            }\n        }\n\n    }\n    if (name.format === 1) {\n        name.langTagCount = p.parseUShort();\n    }\n    return name;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\nfunction addMacintoshNameRecord(t, recordID, s, offset) {\n    // Macintosh, Roman, English\n    var stringBytes = encode.STRING(s);\n    t.records.push(makeNameRecord(1, 0, 0, recordID, stringBytes.length, offset));\n    t.strings.push(stringBytes);\n    offset += stringBytes.length;\n    return offset;\n}\n\nfunction addWindowsNameRecord(t, recordID, s, offset) {\n    // Windows, Unicode BMP (UCS-2), US English\n    var utf16Bytes = encode.UTF16(s);\n    t.records.push(makeNameRecord(3, 1, 0x0409, recordID, utf16Bytes.length, offset));\n    t.strings.push(utf16Bytes);\n    offset += utf16Bytes.length;\n    return offset;\n}\n\nfunction makeNameTable(options) {\n    var i, s;\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: 0},\n        {name: 'stringOffset', type: 'USHORT', value: 0}\n    ]);\n    t.records = [];\n    t.strings = [];\n    var offset = 0;\n    // Add Macintosh records first\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addMacintoshNameRecord(t, i, s, offset);\n        }\n    }\n    // Then add Windows records\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addWindowsNameRecord(t, i, s, offset);\n        }\n    }\n\n    t.count = t.records.length;\n    t.stringOffset = 6 + t.count * 12;\n    for (i = 0; i < t.records.length; i += 1) {\n        t.fields.push({name: 'record_' + i, type: 'TABLE', value: t.records[i]});\n    }\n    for (i = 0; i < t.strings.length; i += 1) {\n        t.fields.push({name: 'string_' + i, type: 'LITERAL', value: t.strings[i]});\n    }\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":7,\"../table\":9,\"../types\":24}],21:[function(require,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {},\n        p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 0},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 0},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 0},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 0},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":7,\"../table\":9}],22:[function(require,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {},\n        p = new parse.Parser(data, start),\n        i, nameLength;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":3,\"../parse\":7,\"../table\":9}],23:[function(require,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = require('../check');\nvar table = require('../table');\n\nvar cmap = require('./cmap');\nvar cff = require('./cff');\nvar head = require('./head');\nvar hhea = require('./hhea');\nvar hmtx = require('./hmtx');\nvar maxp = require('./maxp');\nvar _name = require('./name');\nvar os2 = require('./os2');\nvar post = require('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function (r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs[glyphIndex];\n            return glyph.getMetrics();\n        }\n    }\n    return notFoundMetrics;\n}\n\n// Return the smallest and largest unicode values of the characters in this font.\n// For most fonts the smallest value would be 20 (space).\nfunction charCodeBounds(glyphs) {\n    var minCode, maxCode;\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        if (glyph.unicode >= 20) {\n            if (minCode === undefined) {\n                minCode = glyph.unicode;\n            } else if (glyph.unicode < minCode) {\n                minCode = glyph.unicode;\n            }\n            if (maxCode === undefined) {\n                maxCode = glyph.unicode;\n            } else if (glyph.unicode > maxCode) {\n                maxCode = glyph.unicode;\n            }\n        }\n    }\n    return [minCode, maxCode];\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs[i];\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax\n    });\n\n    var hheaTable = hhea.make({\n        // Adding a little here makes OS X Quick Look happy\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var codeBounds = charCodeBounds(font.glyphs);\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: codeBounds[0],\n        usLastCharIndex: codeBounds[1],\n        ulUnicodeRange1: 0x00000001, // Basic Latin\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.ascender,\n        usWinDescent: -globals.descender,\n        ulCodePageRange1: 0x00000001, // Basic Latin\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var fullName = font.familyName + ' ' + font.styleName;\n    var postScriptName = font.familyName.replace(/\\s/g, '') + '-' + font.styleName;\n    var nameTable = _name.make({\n        copyright: font.copyright,\n        fontFamily: font.familyName,\n        fontSubfamily: font.styleName,\n        uniqueID: font.manufacturer + ':' + fullName,\n        fullName: fullName,\n        version: font.version,\n        postScriptName: postScriptName,\n        trademark: font.trademark,\n        manufacturer: font.manufacturer,\n        designer: font.designer,\n        description: font.description,\n        manufacturerURL: font.manufacturerURL,\n        designerURL: font.designerURL,\n        license: font.license,\n        licenseURL: font.licenseURL,\n        preferredFamily: font.familyName,\n        preferredSubfamily: font.styleName\n    });\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.version,\n        fullName: fullName,\n        familyName: font.familyName,\n        weightName: font.styleName,\n        postScriptName: postScriptName\n    });\n    // Order the tables according to the the OpenType specification 1.4.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n\n    var sfntTable = makeSfntTable(tables);\n\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    headTable.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n\n    // Build the font again, now with the proper checkSum.\n    sfntTable = makeSfntTable(tables);\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":1,\"../table\":9,\"./cff\":10,\"./cmap\":11,\"./head\":14,\"./hhea\":15,\"./hmtx\":16,\"./maxp\":19,\"./name\":20,\"./os2\":21,\"./post\":22}],24:[function(require,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function () {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function (v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function (v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function (v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n    return b;\n};\n\nsizeOf.CHARARRAY = function (v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function (v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function (v) {\n    // Two's complement\n    if (v >= LIMIT16){\n        v = - ( 2 * LIMIT16 - v);\n    }\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function (v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function (v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function (v) {\n     // Two's complement\n    if (v >= LIMIT32){\n        v = - ( 2 * LIMIT32 - v);\n    }\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function () {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function (v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function (v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131 ) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function (v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function (v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(2);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a four-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function (v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(4);\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n// Convert a ASCII string to a list of UTF16 bytes.\nencode.UTF16 = function (v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(0);\n        b.push(v.charCodeAt(i));\n    }\n    return b;\n};\n\nsizeOf.UTF16 = function (v) {\n    return v.length * 2;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function (l) {\n    var offSize, offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n        dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    offset = 1; // First offset is always 1.\n    offsets = [offset];\n    data = [];\n    dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    encodedOffsets = [];\n    offSize = (1 + Math.floor(Math.log(dataSize)/Math.log(2)) / 8) | 0;\n    offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function (v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function (m) {\n    var d = [],\n        keys = Object.keys(m),\n        length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function (m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function (v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function (v, type) {\n    var d, i;\n    d = [];\n    if (Array.isArray(type)) {\n        for (i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else {\n            // FIXME Add support for booleans\n            d = d.concat(encode.NUMBER(v));\n        }\n    }\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function (ops) {\n    if ( wmm && wmm.has( ops ) ) {\n        return wmm.get( ops );\n    }\n\n    var d = [],\n        length = ops.length,\n        op,\n        i;\n\n    for (i = 0; i < length; i += 1) {\n        op = ops[i];\n        d = d.concat( encode[op.type](op.value) );\n    }\n\n    if ( wmm ) {\n        wmm.set( ops, d );\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function (ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function (v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function (table) {\n    var d = [],\n        length = table.fields.length,\n        i;\n\n    for (i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n    return d;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function (v) {\n    return v;\n};\n\nsizeOf.LITERAL = function (v) {\n    return v.length;\n};\n\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":1}]},{},[6])(6)\n});","/*!\n * Paper.js v0.9.22 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Mon Mar 23 22:20:31 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\n\t\t  var noCanvas =\n\t\t\t  ( typeof process === 'object' && process.browser !== true ) ||\n\t\t\t  ( typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope );\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && (!exclude || !exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tctor.prototype = create(this.prototype);\n\t\t\tctor.base = base;\n\t\t\tdefine(ctor.prototype, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\treturn arguments.length ? this.inject.apply(ctor, arguments) : ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (arguments[i] !== undefined)\n\t\t\t\t\t\treturn arguments[i];\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar orig = props._filtering || props;\n\t\t\tfor (var key in orig) {\n\t\t\t\tif (orig.hasOwnProperty(key) && !(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tfunction checkKeys(o1, o2) {\n\t\t\t\tfor (var i in o1)\n\t\t\t\t\tif (o1.hasOwnProperty(i) && !o2.hasOwnProperty(i))\n\t\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tif (obj1.length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i = 0, l = obj1.length; i < l; i++) {\n\t\t\t\t\tif (!Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 && typeof obj1 === 'object'\n\t\t\t\t\t&& obj2 && typeof obj2 === 'object') {\n\t\t\t\tif (!checkKeys(obj1, obj2) || !checkKeys(obj2, obj1))\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i in obj1) {\n\t\t\t\t\tif (obj1.hasOwnProperty(i)\n\t\t\t\t\t\t\t&& !Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var i in obj)\n\t\t\t\t\tif (obj.hasOwnProperty(i))\n\t\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (!isDictionary) {\n\t\t\t\t\tif (_data.dictionary && json.length == 1 && /^#/.test(type))\n\t\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\t\ttype = Base.exports[type];\n\t\t\t\t}\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data));\n\t\t\t\tif (isDictionary) {\n\t\t\t\t\t_data.dictionary = res[0];\n\t\t\t\t} else if (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar entry = this._eventTypes[type];\n\t\t\tif (entry) {\n\t\t\t\tvar handlers = this._callbacks = this._callbacks || {};\n\t\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\t\thandlers.push(func);\n\t\t\t\t\tif (entry.install && handlers.length == 1)\n\t\t\t\t\t\tentry.install.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar entry = this._eventTypes[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (entry && handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false\n\t\t\t\t\t&& event && event.stop) {\n\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar entry = this._eventTypes[type],\n\t\t\t\t\tfunc = entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif ( noCanvas ) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar browser = proto.browser = {};\n\t\t\tnavigator.userAgent.toLowerCase().replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: '0.9.22',\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tTOLERANCE = 1e-6,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\treturn {\n\t\tTOLERANCE: TOLERANCE,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn abs(val) <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= 2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar pow = Math.pow,\n\t\t\t\t\tgmC = pow(abs(a*b*c), 1/3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\t/*\n\t\t\t\t\t * we multiply with a factor to normalize the\n\t\t\t\t\t * coefficients. The factor is just the nearest exponent\n\t\t\t\t\t * of 10, big enough to raise all the coefficients to\n\t\t\t\t\t * nearly [-1, +1] range.\n\t\t\t\t\t */\n\t\t\t\t\tvar mult = pow(10, abs(\n\t\t\t\t\t\tMath.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < MACHINE_EPSILON) {\n\t\t\t\tif (abs(B) < MACHINE_EPSILON)\n\t\t\t\t\treturn abs(c) < MACHINE_EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else {\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tD = D < 0 ? 0 : D;\n\t\t\t\t\tvar R = sqrt(D);\n\t\t\t\t\tif (b >= MACHINE_EPSILON && b <= MACHINE_EPSILON) {\n\t\t\t\t\t\tx1 = abs(a) >= abs(c) ? R / a : -c / R;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar q = -(b + (b < 0 ? -1 : 1) * R);\n\t\t\t\t\t\tx1 = q / a;\n\t\t\t\t\t\tx2 = c / q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 >= min && x1 <= max))\n\t\t\t\troots[count++] = x1;\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 >= min && x2 <= max))\n\t\t\t\troots[count++] = x2;\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar x, b1, c2, count = 0;\n\t\t\tif (a === 0) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (d === 0) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x >= min && x <= max))\n\t\t\t\troots[count++] = x;\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\ts = Math.sin(angle),\n\t\t\tc = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * c - point.y * s,\n\t\t\tpoint.x * s + point.y * c\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function(point, tolerance) {\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisColinear: function(point) {\n\t\treturn Math.abs(this.cross(point)) < 1e-12;\n\t},\n\n\tisOrthogonal: function(point) {\n\t\treturn Math.abs(this.dot(point)) < 1e-12;\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments);\n\t\tif (point.isZero()) {\n\t\t\treturn new Point(0, 0);\n\t\t} else {\n\t\t\tvar scale = this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n}, new function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = coords.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tstatics: {\n\t\tintersect: function(apx, apy, avx, avy, bpx, bpy, bvx, bvy, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tavx -= apx;\n\t\t\t\tavy -= apy;\n\t\t\t\tbvx -= bpx;\n\t\t\t\tbvy -= bpy;\n\t\t\t}\n\t\t\tvar cross = avx * bvy - avy * bvx;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = apx - bpx,\n\t\t\t\t\tdy = apy - bpy,\n\t\t\t\t\tta = (bvx * dy - bvy * dx) / cross,\n\t\t\t\t\ttb = (avx * dy - avy * dx) / cross;\n\t\t\t\tif (isInfinite || 0 <= ta && ta <= 1 && 0 <= tb && tb <= 1)\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tapx + ta * avx,\n\t\t\t\t\t\t\t\tapy + ta * avy);\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0) {\n\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\tif (ccw > 0) {\n\t\t\t\t\tv2x -= vx;\n\t\t\t\t\tv2y -= vy;\n\t\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\t\tif (ccw < 0)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn Numerical.isZero(vx)\n\t\t\t\t\t? vy >= 0 ? px - x : x - px\n\t\t\t\t\t: Numerical.isZero(vy)\n\t\t\t\t\t\t? vx >= 0 ? y - py : py - y\n\t\t\t\t\t\t: (vx * (y - py) - vy * (x - px)) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = Symbol._id = (Symbol._id || 0) + 1;\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = Item._id = (Item._id || 0) + 1;\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, parent: true }, true);\n\t\treturn hasProps;\n\t},\n\n\t_events: new function() {\n\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\n\t\tvar mouseEvent = {\n\t\t\tinstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tuninstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = mouseEvent;\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis._animateItem(true);\n\t\t\t\t\t},\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis._animateItem(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t);\n\t},\n\n\t_animateItem: function(animate) {\n\t\tthis.getView()._animateItem(this, animate);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments);\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n\n\tgetRegistration: '#getPivot',\n\tsetRegistration: '#setPivot'\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tvar cacheParent = this._parent || this._parentSymbol;\n\t\tif (cacheParent) {\n\t\t\tvar id = cacheItem._id,\n\t\t\t\tref = cacheParent._boundsCache = cacheParent._boundsCache || {\n\t\t\t\t\tids: {},\n\t\t\t\t\tlist: []\n\t\t\t\t};\n\t\t\tif (!ref.ids[id]) {\n\t\t\t\tref.list.push(cacheItem);\n\t\t\t\tref.ids[id] = cacheItem;\n\t\t\t}\n\t\t}\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function(matrix) {\n\t\tthis._matrix.initialize(matrix);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert) {\n\t\tcopy.setStyle(this._style);\n\t\tif (this._children) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tcopy.addChild(this._children[i].clone(false), true);\n\t\t}\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide', '_applyMatrix'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tcopy.setSelected(this._selected);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(),\n\t\t\t\t_matrix || item._matrix).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 0.000001)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof name === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect =\tbounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: rect,\n\t\t\t\t\toverlapping: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param.items,\n\t\t\t\tinside = param.inside,\n\t\t\t\toverlapping = param.overlapping;\n\t\t\tmatrix = inside && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (inside) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!inside.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(inside && inside.contains(bounds)) && !(overlapping\n\t\t\t\t\t\t\t&& overlapping.intersects(child, childMatrix)))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2;\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.setStyle(this._style);\n\t\tpath.transform(this._matrix);\n\t\tif (insert || insert === undefined)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rect' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\t\timage = document.getElementById(src) || new Image();\n\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: loaded\n\t\t\t});\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL() : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif (arg0.point) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.isLinear() ? this._point\n\t\t\t\t: [this._point, this._handleIn, this._handleOut],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._handleIn.isZero() && this._handleOut.isZero();\n\t},\n\n\tsetLinear: function(linear) {\n\t\tif (linear) {\n\t\t\tthis._handleIn.set(0, 0);\n\t\t\tthis._handleOut.set(0, 0);\n\t\t} else {\n\t\t}\n\t},\n\n\tisColinear: function(segment) {\n\t\tvar next1 = this.getNext(),\n\t\t\tnext2 = segment.getNext();\n\t\treturn this._handleOut.isZero() && next1._handleIn.isZero()\n\t\t\t\t&& segment._handleOut.isZero() && next2._handleIn.isZero()\n\t\t\t\t&& next1._point.subtract(this._point).isColinear(\n\t\t\t\t\tnext2._point.subtract(segment._point));\n\t},\n\n\tisOrthogonal: function() {\n\t\tvar prev = this.getPrevious(),\n\t\t\tnext = this.getNext();\n\t\treturn prev._handleOut.isZero() && this._handleIn.isZero()\n\t\t\t&& this._handleOut.isZero() && next._handleIn.isZero()\n\t\t\t&& this._point.subtract(prev._point).isOrthogonal(\n\t\t\t\t\tnext._point.subtract(this._point));\n\t},\n\n\tisArc: function() {\n\t\tvar next = this.getNext(),\n\t\t\thandle1 = this._handleOut,\n\t\t\thandle2 = next._handleIn,\n\t\t\tkappa = 0.5522847498307936;\n\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\tvar from = this._point,\n\t\t\t\tto = next._point,\n\t\t\t\tcorner = new Line(from, handle1, true).intersect(\n\t\t\t\t\t\tnew Line(to, handle2, true), true);\n\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\tcorner.subtract(from).getLength() - kappa)\n\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\tcorner.subtract(to).getLength() - kappa);\n\t\t}\n\t\treturn false;\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\treverse: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(segment0, segment1, coef) {\n\t\tvar dxPoint = segment1._point._x - segment0._point._x,\n\t\t\tdyPoint = segment1._point._y - segment0._point._y,\n\t\t\tdxHandleIn = segment1._handleIn._x - segment0._handleIn._x,\n\t\t\tdyHandleIn = segment1._handleIn._y - segment0._handleIn._y,\n\t\t\tdxHandleOut = segment1._handleOut._x - segment0._handleOut._x,\n\t\t\tdyHandleOut = segment1._handleOut._y - segment0._handleOut._y;\n\n\t\tthis._point._x = segment0._point._x + dxPoint * coef;\n\t\tthis._point._y = segment0._point._y + dyPoint * coef;\n\t\tthis._handleIn._x = segment0._handleIn._x + dxHandleIn * coef;\n\t\tthis._handleIn._y = segment0._handleIn._y + dyHandleIn * coef;\n\t\tthis._handleOut._x = segment0._handleOut._x + dxHandleOut * coef;\n\t\tthis._handleOut._y = segment0._handleOut._y + dyHandleOut * coef;\n\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tthis._segment1 = arg1;\n\t\t\tthis._segment2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tthis._segment1 = new Segment();\n\t\t\tthis._segment2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tthis._segment1 = new Segment(arg0.segment1);\n\t\t\tthis._segment2 = new Segment(arg0.segment2);\n\t\t} else if (count === 2) {\n\t\t\tthis._segment1 = new Segment(arg0);\n\t\t\tthis._segment2 = new Segment(arg1);\n\t\t} else {\n\t\t\tvar point1, handle1, handle2, point2;\n\t\t\tif (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = new Segment(point2, handle2, null);\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tthis._length = this.isLinear()\n\t\t\t\t? this._segment2._point.getDistance(this._segment1._point)\n\t\t\t\t: Curve.getLength(this.getValues(), 0, 1);\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._segment1._handleOut.isZero()\n\t\t\t\t&& this._segment2._handleIn.isZero();\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve.filterIntersections(Curve.getIntersections(\n\t\t\t\tthis.getValues(), curve.getValues(), this, curve, []));\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, ignoreLinear) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttolerance = 0.000001,\n\t\t\tres = null;\n\t\tif (parameter > tolerance && parameter < 1 - tolerance) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tisLinear = ignoreLinear ? false : this.isLinear(),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1];\n\n\t\t\tif (!isLinear) {\n\t\t\t\tthis._segment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tthis._segment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t!isLinear && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t!isLinear && new Point(right[2] - x, right[3] - y));\n\n\t\t\tif (this._path) {\n\t\t\t\tif (this._segment1._index > 0 && this._segment2._index === 0) {\n\t\t\t\t\tthis._path.add(segment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._path.insert(this._segment2._index, segment);\n\t\t\t\t}\n\t\t\t\tres = this;\n\t\t\t} else {\n\t\t\t\tvar end = this._segment2;\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, end);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treverse: function() {\n\t\treturn new Curve(this._segment2.reverse(), this._segment1.reverse());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tevaluate: function(v, t, type) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tolerance || t > 1 - tolerance)) {\n\t\t\tvar isZero = t < tolerance;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tolerance && c1x === p1x && c1y === p1y\n\t\t\t\t\t\t|| t > 1 - tolerance && c2x === p2x && c2y === p2y) {\n\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t} else if (t < tolerance) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > 1 - tolerance) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by;\n\t\t\t\t\treturn (x * y2 - y * x2) / Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b,\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(a) && isZero(b))\n\t\t\ta = b = 0;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, x, y) {\n\t\tvar tolerance = 0.000001;\n\t\tif (Math.abs(v[0] - x) < tolerance && Math.abs(v[1] - y) < tolerance)\n\t\t\treturn 0;\n\t\tif (Math.abs(v[6] - x) < tolerance && Math.abs(v[7] - y) < tolerance)\n\t\t\treturn 1;\n\t\tvar txs = [],\n\t\t\ttys = [],\n\t\t\tsx = Curve.solveCubic(v, 0, x, txs, 0, 1),\n\t\t\tsy = Curve.solveCubic(v, 1, y, tys, 0, 1),\n\t\t\ttx, ty;\n\t\tfor (var cx = 0;  sx == -1 || cx < sx;) {\n\t\t\tif (sx == -1 || (tx = txs[cx++]) >= 0 && tx <= 1) {\n\t\t\t\tfor (var cy = 0; sy == -1 || cy < sy;) {\n\t\t\t\t\tif (sy == -1 || (ty = tys[cy++]) >= 0 && ty <= 1) {\n\t\t\t\t\t\tif (sx == -1) tx = ty;\n\t\t\t\t\t\telse if (sy == -1) ty = tx;\n\t\t\t\t\t\tif (Math.abs(tx - ty) < tolerance)\n\t\t\t\t\t\t\treturn (tx + ty) * 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sx == -1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn v;\n\t},\n\n\tisLinear: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]);\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn (  3.0 * c1y * p1x - 1.5 * c1y * c2x\n\t\t\t\t- 1.5 * c1y * p2x - 3.0 * p1y * c1x\n\t\t\t\t- 1.5 * p1y * c2x - 0.5 * p1y * p2x\n\t\t\t\t+ 1.5 * c2y * p1x + 1.5 * c2y * c1x\n\t\t\t\t- 3.0 * c2y * p2x + 0.5 * p2y * p1x\n\t\t\t\t+ 1.5 * p2y * c1x + 3.0 * p2y * c2x) / 10;\n\t},\n\n\tgetEdgeSum: function(v) {\n\t\treturn\t  (v[0] - v[2]) * (v[3] + v[1])\n\t\t\t\t+ (v[2] - v[4]) * (v[5] + v[3])\n\t\t\t\t+ (v[4] - v[6]) * (v[7] + v[5]);\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name]([this._segment1,\n\t\t\t\t\t\tthis._segment2], false, this._path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve.evaluate(values, isParameter\n\t\t\t\t\t? offset : Curve.getParameterAt(values, offset, 0), index);\n\t\t};\n\t\tthis[name] = function(parameter) {\n\t\t\treturn Curve.evaluate(this.getValues(), parameter, index);\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Curve.getParameterOf(this.getValues(), point.x, point.y);\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tif (!isParameter)\n\t\t\toffset = this.getParameterAt(offset);\n\t\treturn offset >= 0 && offset <= 1 && new CurveLocation(this, offset);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tcount = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(\n\t\t\t\t\t\tCurve.evaluate(values, t, 0), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 0.000001) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\tvar pt = Curve.evaluate(values, minT, 0);\n\t\treturn new CurveLocation(this, minT, pt, null, null, null,\n\t\t\t\tpoint.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n}),\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\treturn {\n\t\tstatics: true,\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\tif (a === 0 && b === 1\n\t\t\t\t\t&& isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[6] - v[4]) && isZero(v[7] - v[5])) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar forward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (Math.abs(offset) >= rangeLength)\n\t\t\t\treturn forward ? b : a;\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 16,\n\t\t\t\t\t0.000001);\n\t\t}\n\t};\n}, new function() {\n\tfunction addLocation(locations, include, curve1, t1, point1, curve2, t2,\n\t\t\tpoint2) {\n\t\tvar loc = new CurveLocation(curve1, t1, point1, curve2, t2, point2);\n\t\tif (!include || include(loc))\n\t\t\tlocations.push(loc);\n\t}\n\n\tfunction addCurveIntersections(v1, v2, curve1, curve2, locations, include,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (recursion > 32)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]) || 0,\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]) || 0,\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\ttMinNew, tMaxNew, tDiff;\n\t\tif (q0x === q3x && uMax - uMin <= tolerance && recursion > 3) {\n\t\t\ttMaxNew = tMinNew = (tMax + tMin) / 2;\n\t\t\ttDiff = 0;\n\t\t} else {\n\t\t\tvar hull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip, tMaxClip;\n\t\t\ttMinClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\ttop.reverse();\n\t\t\tbottom.reverse();\n\t\t\ttMaxClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\tif (tMinClip == null || tMaxClip == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\ttDiff = tMaxClip - tMinClip;\n\t\t\ttMinNew = tMax * tMinClip + tMin * (1 - tMinClip);\n\t\t\ttMaxNew = tMax * tMaxClip + tMin * (1 - tMaxClip);\n\t\t}\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, curve2, curve1, locations, include,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew) < tolerance) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tif (reverse) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0),\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0));\n\t\t\t} else {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t} else if (tDiff > 0) {\n\t\t\taddCurveIntersections(v2, v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\tdist1 = getSignedDistance(0, dq0, 1, dq3, 1 / 3, dq1),\n\t\t\tdist2 = getSignedDistance(0, dq0, 1, dq3, 2 / 3, dq2),\n\t\t\tflip = false,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\tflip = dist1 < 0;\n\t\t} else {\n\t\t\tvar pmax, cross = 0,\n\t\t\t\tdistZero = dist1 === 0 || dist2 === 0;\n\t\t\tif (Math.abs(dist1) > Math.abs(dist2)) {\n\t\t\t\tpmax = p1;\n\t\t\t\tcross = (dq3 - dq2 - (dq3 - dq0) / 3)\n\t\t\t\t\t\t* (2 * (dq3 - dq2) - dq3 + dq1) / 3;\n\t\t\t} else {\n\t\t\t\tpmax = p2;\n\t\t\t\tcross = (dq1 - dq0 + (dq0 - dq3) / 3)\n\t\t\t\t\t\t* (-2 * (dq0 - dq1) + dq0 - dq2) / 3;\n\t\t\t}\n\t\t\thull = cross < 0 || distZero\n\t\t\t\t\t? [[p0, pmax, p3], [p0, p3]]\n\t\t\t\t\t: [[p0, p1, p2, p3], [p0, p3]];\n\t\t\tflip = dist1 ? dist1 < 0 : dist2 < 0;\n\t\t}\n\t\treturn flip ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold)\n\t\t\t\treturn px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, curve1, curve2, locations,\n\t\t\tinclude) {\n\t\tvar flip = Curve.isLinear(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trlx2 = ldx * cos - ldy * sin,\n\t\t\trvl = [0, 0, 0, 0, rlx2, 0, rlx2, 0],\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\ty * cos + x * sin);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tx = Curve.evaluate(rvc, tc, 0).x;\n\t\t\tif (x >= 0 && x <= rlx2) {\n\t\t\t\tvar tl = Curve.getParameterOf(rvl, x, 0),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, curve1, curve2, locations, include) {\n\t\tvar point = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tcurve1, Curve.getParameterOf(v1, x, y), point,\n\t\t\t\t\tcurve2, Curve.getParameterOf(v2, x, y), point);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\tgetIntersections: function(v1, v2, c1, c2, locations, include) {\n\t\t\tvar linear1 = Curve.isLinear(v1),\n\t\t\t\tlinear2 = Curve.isLinear(v2),\n\t\t\t\tc1p1 = c1.getPoint1(),\n\t\t\t\tc1p2 = c1.getPoint2(),\n\t\t\t\tc2p1 = c2.getPoint1(),\n\t\t\t\tc2p2 = c2.getPoint2(),\n\t\t\t\ttolerance = 0.000001;\n\t\t\tif (c1p1.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 0, c1p1);\n\t\t\tif (c1p1.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 1, c1p1);\n\t\t\t(linear1 && linear2\n\t\t\t\t? addLineIntersection\n\t\t\t\t: linear1 || linear2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, include,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (c1p2.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 0, c1p2);\n\t\t\tif (c1p2.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 1, c1p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\tfilterIntersections: function(locations, _expand) {\n\t\t\tvar last = locations.length - 1,\n\t\t\t\ttMax = 1 - 0.000001;\n\t\t\tfor (var i = last; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tnext = loc._curve.getNext(),\n\t\t\t\t\tnext2 = loc._curve2.getNext();\n\t\t\t\tif (next && loc._parameter >= tMax) {\n\t\t\t\t\tloc._parameter = 0;\n\t\t\t\t\tloc._curve = next;\n\t\t\t\t}\n\t\t\t\tif (next2 && loc._parameter2 >= tMax) {\n\t\t\t\t\tloc._parameter2 = 0;\n\t\t\t\t\tloc._curve2 = next2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction compare(loc1, loc2) {\n\t\t\t\tvar path1 = loc1.getPath(),\n\t\t\t\t\tpath2 = loc2.getPath();\n\t\t\t\treturn path1 === path2\n\t\t\t\t\t\t? (loc1.getIndex() + loc1.getParameter())\n\t\t\t\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t\t: path1._id - path2._id;\n\t\t\t}\n\n\t\t\tif (last > 0) {\n\t\t\t\tlocations.sort(compare);\n\t\t\t\tfor (var i = last; i > 0; i--) {\n\t\t\t\t\tif (locations[i].equals(locations[i - 1])) {\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tlast--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_expand) {\n\t\t\t\tfor (var i = last; i >= 0; i--)\n\t\t\t\t\tlocations.push(locations[i].getIntersection());\n\t\t\t\tlocations.sort(compare);\n\t\t\t}\n\t\t\treturn locations;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point, _curve2,\n\t\t\t_parameter2, _point2, _distance) {\n\t\tthis._id = CurveLocation._id = (CurveLocation._id || 0) + 1;\n\t\tthis._curve = curve;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t\tthis._parameter = parameter;\n\t\tthis._point = point;\n\t\tthis._curve2 = _curve2;\n\t\tthis._parameter2 = _parameter2;\n\t\tthis._point2 = _point2;\n\t\tthis._distance = _distance;\n\t},\n\n\tgetSegment: function(_preferFirst) {\n\t\tif (!this._segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\tif (parameter === 1) {\n\t\t\t\tthis._segment = curve._segment2;\n\t\t\t} else if (parameter === 0 || _preferFirst) {\n\t\t\t\tthis._segment = curve._segment1;\n\t\t\t} else if (parameter == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis._segment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t}\n\t\treturn this._segment;\n\t},\n\n\tgetCurve: function(_uncached) {\n\t\tif (!this._curve || _uncached) {\n\t\t\tthis._curve = this._segment1.getCurve();\n\t\t\tif (this._curve.getParameterOf(this._point) == null)\n\t\t\t\tthis._curve = this._segment2.getPrevious().getCurve();\n\t\t}\n\t\treturn this._curve;\n\t},\n\n\tgetIntersection: function() {\n\t\tvar intersection = this._intersection;\n\t\tif (!intersection && this._curve2) {\n\t\t\tvar param = this._parameter2;\n\t\t\tthis._intersection = intersection = new CurveLocation(\n\t\t\t\t\tthis._curve2, param, this._point2 || this._point, this);\n\t\t\tintersection._intersection = this;\n\t\t}\n\t\treturn intersection;\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetOffset: function() {\n\t\tvar path = this.getPath();\n\t\treturn path ? path._getOffset(this) : this.getCurveOffset();\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetParameter: function(_uncached) {\n\t\tif ((this._parameter == null || _uncached) && this._point) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._parameter = curve && curve.getParameterOf(this._point);\n\t\t}\n\t\treturn this._parameter;\n\t},\n\n\tgetPoint: function(_uncached) {\n\t\tif ((!this._point || _uncached) && this._parameter != null) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._point = curve && curve.getPointAt(this._parameter, true);\n\t\t}\n\t\treturn this._point;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.divide(this.getParameter(true), true);\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.split(this.getParameter(true), true);\n\t},\n\n\tequals: function(loc) {\n\t\tvar abs = Math.abs,\n\t\t\ttolerance = 0.000001;\n\t\treturn this === loc\n\t\t\t\t|| loc\n\t\t\t\t\t&& this._curve === loc._curve\n\t\t\t\t\t&& this._curve2 === loc._curve2\n\t\t\t\t\t&& abs(this._parameter - loc._parameter) <= tolerance\n\t\t\t\t\t&& abs(this._parameter2 - loc._parameter2) <= tolerance\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t}\n}, Base.each(['getTangent', 'getNormal', 'getCurvature'], function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {}));\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, _matrix, _expand) {\n\t\tif (this === path)\n\t\t\tpath = null;\n\t\tvar locations = [],\n\t\t\tcurves1 = this.getCurves(),\n\t\t\tcurves2 = path ? path.getCurves() : curves1,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = path ? (_matrix || path._matrix).orNullIfIdentity()\n\t\t\t\t: matrix1,\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = path ? curves2.length : length1,\n\t\t\tvalues2 = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tif (path && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = path ? curve1.getValues(matrix1) : values2[i];\n\t\t\tif (!path) {\n\t\t\t\tvar seg1 = curve1.getSegment1(),\n\t\t\t\t\tseg2 = curve1.getSegment2(),\n\t\t\t\t\th1 = seg1._handleOut,\n\t\t\t\t\th2 = seg2._handleIn;\n\t\t\t\tif (new Line(seg1._point.subtract(h1), h1.multiply(2), true)\n\t\t\t\t\t\t.intersect(new Line(seg2._point.subtract(h2),\n\t\t\t\t\t\th2.multiply(2), true), false)) {\n\t\t\t\t\tvar parts = Curve.subdivide(values1);\n\t\t\t\t\tCurve.getIntersections(\n\t\t\t\t\t\tparts[0], parts[1], curve1, curve1, locations,\n\t\t\t\t\t\tfunction(loc) {\n\t\t\t\t\t\t\tif (loc._parameter <= tMax) {\n\t\t\t\t\t\t\t\tloc._parameter /= 2;\n\t\t\t\t\t\t\t\tloc._parameter2 = 0.5 + loc._parameter2 / 2;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = path ? 0 : i + 1; j < length2; j++) {\n\t\t\t\tCurve.getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curves2[j], locations,\n\t\t\t\t\t!path && (j === i + 1 || j === length2 - 1 && i === 0)\n\t\t\t\t\t\t&& function(loc) {\n\t\t\t\t\t\t\tvar t = loc._parameter;\n\t\t\t\t\t\t\treturn t >= tMin && t <= tMax;\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Curve.filterIntersections(locations, _expand);\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tif (move && previous && previous !== 'z')\n\t\t\t\t\tthis.closePath(true);\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._clockwise = undefined;\n\t\t\tif (this._curves && !(flags & 16)) {\n\t\t\t\tfor (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t\tthis._monoCurves = undefined;\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\tisPolygon: function() {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif (!this._segments[i].isLinear())\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves || segs._curves) {\n\t\t\tif (!curves)\n\t\t\t\tcurves = this._curves = [];\n\t\t\tvar from = index > 0 ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, this._countCurves());\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves();\n\t\t\tthis._length = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tthis._length += curves[i].getLength();\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar curves = this.getCurves();\n\t\tvar area = 0;\n\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\tarea += curves[i].getArea();\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.evaluate(pos, 0)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (curve.isLinear() && curve.getLength() === 0)\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tolerance = 0.000001;\n\t\tif (parameter >= 1 - tolerance) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter > tolerance) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = this._clone(new Path().insertAbove(this, true));\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn Path.isClockwise(this._segments);\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\tinterpolate: function(path0, path1, coef) {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif ( !path0._segments[i] || !path1._segments[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._segments[i].interpolate(\n\t\t\t\tpath0._segments[i],\n\t\t\t\tpath1._segments[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\n\t\tthis._changed(9);\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isColinear(i, j) {\n\t\t\treturn segments[i].isColinear(segments[j]);\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\treturn segments[i].isOrthogonal();\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\treturn segments[i].isArc();\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (this.isPolygon() && segments.length === 4\n\t\t\t\t&& isColinear(0, 2) && isColinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isColinear(1, 5) && isColinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tshape.setStyle(this._style);\n\t\t\tif (insert || insert === undefined)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\t_getOffset: function(location) {\n\t\tvar index = location && location.getIndex();\n\t\tif (index != null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\toffset = 0;\n\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\toffset += curves[i].getLength();\n\t\t\tvar curve = curves[index],\n\t\t\t\tparameter = location.getParameter();\n\t\t\tif (parameter > 0)\n\t\t\t\toffset += curve.getPartLength(0, parameter);\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset;\n\t\t\treturn curves[index].getLocationAt(offset - index, true);\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}), new function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n}, new function() {\n\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n}, new function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < epsilon)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tisClockwise: function(segments) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsum += Curve.getEdgeSum(Curve.getValues(\n\t\t\t\t\tsegments[i], segments[i + 1 < l ? i + 1 : 0]));\n\t\treturn sum > 0;\n\t},\n\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isColinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().normalize(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tif (this._children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t} else {\n\t\t\treturn reduce.base.call(this);\n\t\t}\n\t},\n\n\tinterpolate: function(compoundpath0, compoundpath1, coef) {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\tif ( !compoundpath0._children[i] || !compoundpath1._children[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._children[i].interpolate(\n\t\t\t\tcompoundpath0._children[i],\n\t\t\t\tcompoundpath1._children[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : mx, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n}, new function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current : new Path();\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tvar operator = operators[operation];\n\t\tfunction preparePath(path) {\n\t\t\treturn path.clone(false).reduce().reorient().transform(null, true,\n\t\t\t\t\ttrue);\n\t\t}\n\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tsplitPath(_path1.getIntersections(_path2, null, true));\n\n\t\tvar chain = [],\n\t\t\tsegments = [],\n\t\t\tmonoCurves = [],\n\t\t\ttolerance = 0.000001;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tsegments.sort(function(a, b) {\n\t\t\tvar _a = a._intersection,\n\t\t\t\t_b = b._intersection;\n\t\t\treturn !_a && !_b || _a && _b ? 0 : _a ? -1 : 1;\n\t\t});\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding != null)\n\t\t\t\tcontinue;\n\t\t\tchain.length = 0;\n\t\t\tvar startSeg = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar length = segment.getCurve().getLength();\n\t\t\t\tchain.push({ segment: segment, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== startSeg);\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar length = totalLength * (j + 1) / 4;\n\t\t\t\tfor (k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length <= tolerance\n\t\t\t\t\t\t\t\t|| curveLength - length <= tolerance)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.segment.getCurve(),\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isLinear() && Math.abs(curve\n\t\t\t\t\t\t\t\t\t.getTangentAt(0.5, true).y) <= tolerance,\n\t\t\t\t\t\t\tpath = curve._path;\n\t\t\t\t\t\tif (path._parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = path._parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && _path2\n\t\t\t\t\t\t\t&& (path === _path1 && _path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === _path2 && !_path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.insertAbove(path1);\n\t\tresult.addChildren(tracePaths(segments, operator), true);\n\t\tresult = result.reduce();\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction splitPath(intersections) {\n\t\tvar tMin = 0.000001,\n\t\t\ttMax = 1 - tMin,\n\t\t\tlinearHandles;\n\n\t\tfunction resetLinear() {\n\t\t\tfor (var i = 0, l = linearHandles.length; i < l; i++)\n\t\t\t\tlinearHandles[i].set(0, 0);\n\t\t}\n\n\t\tfor (var i = intersections.length - 1, curve, prev; i >= 0; i--) {\n\t\t\tvar loc = intersections[i],\n\t\t\t\tt = loc._parameter;\n\t\t\tif (prev && prev._curve === loc._curve && prev._parameter > 0) {\n\t\t\t\tt /= prev._parameter;\n\t\t\t} else {\n\t\t\t\tcurve = loc._curve;\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tresetLinear();\n\t\t\t\tlinearHandles = curve.isLinear() ? [\n\t\t\t\t\t\tcurve._segment1._handleOut,\n\t\t\t\t\t\tcurve._segment2._handleIn\n\t\t\t\t\t] : null;\n\t\t\t}\n\t\t\tvar newCurve,\n\t\t\t\tsegment;\n\t\t\tif (newCurve = curve.divide(t, true, true)) {\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tcurve = newCurve.getPrevious();\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tlinearHandles.push(segment._handleOut, segment._handleIn);\n\t\t\t} else {\n\t\t\t\tsegment = t < tMin\n\t\t\t\t\t? curve._segment1\n\t\t\t\t\t: t > tMax\n\t\t\t\t\t\t? curve._segment2\n\t\t\t\t\t\t: curve.getPartLength(0, t) < curve.getPartLength(t, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tsegment._intersection = loc.getIntersection();\n\t\t\tloc._segment = segment;\n\t\t\tprev = loc;\n\t\t}\n\t\tif (linearHandles)\n\t\t\tresetLinear();\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar tolerance = 0.000001,\n\t\t\ttMin = tolerance,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - tolerance,\n\t\t\t\tyAfter = py + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.evaluate(values, roots[j], 0).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves);\n\t\t} else {\n\t\t\tvar xBefore = px - tolerance,\n\t\t\t\txAfter = px + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding,\n\t\t\t\t\tprevT,\n\t\t\t\t\tprevX;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tx = Curve.evaluate(values, t, 0).x,\n\t\t\t\t\t\tslope = Curve.evaluate(values, t, 1).y;\n\t\t\t\t\tif (!(t > tMax\n\t\t\t\t\t\t\t&& (i === l - 1 || curve.next !== curves[i + 1])\n\t\t\t\t\t\t\t&& abs(Curve.evaluate(curve.next.values, 0, 0).x -x)\n\t\t\t\t\t\t\t\t<= tolerance\n\t\t\t\t\t\t|| i > 0 && curve.previous === curves[i - 1]\n\t\t\t\t\t\t\t&& abs(prevX - x) < tolerance\n\t\t\t\t\t\t\t&& prevT > tMax && t < tMin)) {\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isLinear(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0, 1).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprevT = t;\n\t\t\t\t\tprevX = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction tracePaths(segments, operator, selfOp) {\n\t\tvar paths = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0, seg, startSeg, l = segments.length; i < l; i++) {\n\t\t\tseg = startSeg = segments[i];\n\t\t\tif (seg._visited || !operator(seg._winding))\n\t\t\t\tcontinue;\n\t\t\tvar path = new Path(Item.NO_INSERT),\n\t\t\t\tinter = seg._intersection,\n\t\t\t\tstartInterSeg = inter && inter._segment,\n\t\t\t\tadded = false,\n\t\t\t\tdir = 1;\n\t\t\tdo {\n\t\t\t\tvar handleIn = dir > 0 ? seg._handleIn : seg._handleOut,\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn,\n\t\t\t\t\tinterSeg;\n\t\t\t\tif (added && (!operator(seg._winding) || selfOp)\n\t\t\t\t\t\t&& (inter = seg._intersection)\n\t\t\t\t\t\t&& (interSeg = inter._segment)\n\t\t\t\t\t\t&& interSeg !== startSeg) {\n\t\t\t\t\tif (selfOp) {\n\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c1 = seg.getCurve();\n\t\t\t\t\t\tif (dir > 0)\n\t\t\t\t\t\t\tc1 = c1.getPrevious();\n\t\t\t\t\t\tvar t1 = c1.getTangentAt(dir < 1 ? tMin : tMax, true),\n\t\t\t\t\t\t\tc4 = interSeg.getCurve(),\n\t\t\t\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\t\t\t\tt3 = c3.getTangentAt(tMax, true),\n\t\t\t\t\t\t\tt4 = c4.getTangentAt(tMin, true),\n\t\t\t\t\t\t\tw3 = t1.cross(t3),\n\t\t\t\t\t\t\tw4 = t1.cross(t4);\n\t\t\t\t\t\tif (w3 * w4 !== 0) {\n\t\t\t\t\t\t\tvar curve = w3 < w4 ? c3 : c4,\n\t\t\t\t\t\t\t\tnextCurve = operator(curve._segment1._winding)\n\t\t\t\t\t\t\t\t\t? curve\n\t\t\t\t\t\t\t\t\t: w3 < w4 ? c4 : c3,\n\t\t\t\t\t\t\t\tnextSeg = nextCurve._segment1;\n\t\t\t\t\t\t\tdir = nextCurve === c3 ? -1 : 1;\n\t\t\t\t\t\t\tif (nextSeg._visited && seg._path !== nextSeg._path\n\t\t\t\t\t\t\t\t\t\t|| !operator(nextSeg._winding)) {\n\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\t\t\tif (nextSeg._visited)\n\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, added && handleIn, handleOut));\n\t\t\t\tadded = true;\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = dir > 0 ? seg.getNext() : seg. getPrevious();\n\t\t\t} while (seg && !seg._visited\n\t\t\t\t\t&& seg !== startSeg && seg !== startInterSeg\n\t\t\t\t\t&& (seg._intersection || operator(seg._winding)));\n\t\t\tif (seg && (seg === startSeg || seg === startInterSeg)) {\n\t\t\t\tpath.firstSegment.setHandleIn((seg === startInterSeg\n\t\t\t\t\t\t? startInterSeg : seg)._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else {\n\t\t\t\tpath.lastSegment._handleOut.set(0, 0);\n\t\t\t}\n\t\t\tif (path._segments.length >\n\t\t\t\t\t(path._closed ? path.isPolygon() ? 2 : 0 : 1))\n\t\t\t\tpaths.push(path);\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn new Group([this.subtract(path), this.intersect(path)]);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isLinear(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttolerance = 0.000001,\n\t\t\t\t\troots = [];\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b, c, roots, tolerance,\n\t\t\t\t\t\t1 - tolerance);\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.evaluate(values, roots[j], 0).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 0.000001) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tevaluate: function(offset, type) {\n\t\tvar param = this.getParameterAt(offset);\n\t\treturn Curve.evaluate(this.curves[param.index], param.value, type);\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\treturn this.evaluate(offset, index);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tthis.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1);\n\t\tepsilon *= segLength;\n\t\tif (alpha1 < epsilon || alpha2 < epsilon) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t}\n\n\t\treturn [pt1, pt1.add(tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 0.000001)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tvalue = parser.call(this, value);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tthis._components[index] = value;\n\t\t\t\t\tthis._changed();\n\t\t\t\t}\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type];\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (type === 'gradient')\n\t\t\t\tthis._id = Color._id = (Color._id || 0) + 1;\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n}, new function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nBase.each(Color._types, function(properties, type) {\n\tvar ctor = this[Base.capitalize(type) + 'Color'] = function(arg) {\n\t\t\tvar argType = arg != null && typeof arg,\n\t\t\t\tcomponents = argType === 'object' && arg.length != null\n\t\t\t\t\t? arg\n\t\t\t\t\t: argType === 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: arguments;\n\t\t\treturn components\n\t\t\t\t\t? new Color(type, components)\n\t\t\t\t\t: new Color(arg);\n\t\t};\n\tif (type.length == 3) {\n\t\tvar acronym = type.toUpperCase();\n\t\tColor[acronym] = this[acronym + 'Color'] = ctor;\n\t}\n}, Base.exports);\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = Gradient._id = (Gradient._id || 0) + 1;\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = typeof window === 'object' &&\n\t\t\tDomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tif ( typeof window === 'object' ) {\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif ( !noCanvas ) {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchAction: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\tuserDrag: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tfunction getSize(name) {\n\t\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t\t}\n\n\t\t\tfunction getCanvasSize() {\n\t\t\t\tvar size = DomElement.getSize(element);\n\t\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t\t: size;\n\t\t\t}\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._setViewSize(size = getCanvasSize());\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = 1;\n\t\t\tthis._id = 'view-' + View._id++;\n\t\t\tsize = new Size(element.width, element.height);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: {\n\t\tonFrame: {\n\t\t\tinstall: function() {\n\t\t\t\tthis.play();\n\t\t\t},\n\n\t\t\tuninstall: function() {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t},\n\n\t\tonResize: {}\n\t},\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n}, new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif ( !noCanvas ) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t}\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!noCanvas && !/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font;\n\t\tctx.font = size + ' serif';\n\t\tsize = parseFloat(ctx.font);\n\t\tctx.font = prevFont;\n\t\treturn size;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tvar project = this._project;\n\t\tif (!project || !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n}, new function() {\n\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers)\n\t\t\tmodifiers[name] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = this._minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = distance;\n\t\tthis._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tvar maxDist = maxDistance != null ? maxDistance : 0;\n\t\t\t\tif (maxDist != 0) {\n\t\t\t\t\tif (distance > maxDist) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDist));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback) {\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, true);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif ( noCanvas ) {\n\t\t\treturn { getContext: function() {} };\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tif (options.matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (item.isPolygon()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (applyMatrix && item)\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n","function Collection( args ) {\n\t// already a Collection? Job's done\n\tif ( arguments.length === 1 && args instanceof Collection ) {\n\t\treturn args;\n\n\t} else if ( arguments.length > 1 || !Array.isArray( args ) ) {\n\t\targs = [].slice.call( arguments, 0 );\n\t}\n\n\tthis.length = 0;\n\n\targs.forEach(function( arg ) {\n\t\t// unwrap any collection\n\t\tif ( arg instanceof Collection ) {\n\t\t\tfor ( var i = -1; ++i < arg.length; ) {\n\t\t\t\tthis[this.length++] = arg[i];\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis[this.length++] = arg;\n\t\t}\n\n\t}, this);\n\n\treturn this;\n}\n\nCollection.prototype.forEach = function(cb, scope) {\n\tfor ( var i = -1; ++i < this.length; ) {\n\t\tcb.call(scope || this[i], this[i], i, this);\n\t}\n\n\treturn this;\n};\n\nCollection.prototype.prop = function(name, val) {\n\tvar i;\n\n\t// object setter\n\tif ( typeof name === 'object' ) {\n\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\tthis[i].set( name );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// getter\n\tif ( val === undefined ) {\n\t\treturn this[0][name];\n\t}\n\n\t// simple setter\n\tfor ( i = -1; ++i < this.length; ) {\n\t\tthis[i][name] = val;\n\t}\n\n\treturn this;\n};\n\nfunction wrapConstructor( constructor, prototype, useConstructed ) {\n\treturn function wrapper() {\n\t\tvar c,\n\t\t\ttmp,\n\t\t\tarr = [];\n\n\t\t// constructor used with new\n\t\tif ( this instanceof wrapper ) {\n\t\t\t// proxy to paper native constructor\n\t\t\tc = Object.create(prototype);\n\t\t\ttmp = constructor.apply(c, arguments);\n\t\t\treturn useConstructed ?\n\t\t\t\ttmp : c;\n\n\t\t// without new, build a collection\n\t\t} else {\n\t\t\tif ( Array.isArray( arguments[0] ) ) {\n\t\t\t\targuments[0].forEach(function(params, i) {\n\t\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\t\tc = constructor.call( arr[i], params );\n\t\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\t\tarr[i] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\tc = constructor.apply( arr[0], arguments );\n\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\tarr[0] = c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Collection( arr );\n\t\t}\n\t};\n}\n\nvar rconstructor = /(^|\\.)[A-Z][A-z]+$/;\nfunction constructorFilter( name ) {\n\treturn typeof this[name] === 'function' && rconstructor.test(name);\n}\n\n// unwrap a collection or array of collection\nfunction unwrapArg( arr, id, isPlural ) {\n\t// unwrap a single collection\n\tif ( arr && arr[id] instanceof Collection ) {\n\t\tarr[id] = isPlural ?\n\t\t\t[].slice.call( arr[id], 0 ) :\n\t\t\tarr[id][0];\n\n\t// unwrap an array of collection\n\t} else if ( arr && arr[id].length && arr[id][0] instanceof Collection ) {\n\t\tfor ( var i = -1; ++i < arr[id].length; ) {\n\t\t\tarr[id][i] = arr[id][i][0];\n\t\t}\n\t}\n}\n\nfunction unwrapArgs() {\n\tvar isPlural = this.isPlural,\n\t\targs = [].slice.call( arguments, 0 ),\n\t\tid,\n\t\ti;\n\n\t// first arg is an object and might have a collection or array of collection\n\t// Todo: objects should be unwrapped recursively\n\tif ( args[0] && args[0].constructor === Object ) {\n\t\tif ( 'children' in args[0] ) {\n\t\t\tid = 'children';\n\n\t\t} else if ( 'segments' in args[0] ) {\n\t\t\tid = 'segments';\n\n\t\t} else if ( 'nodes' in args[0] ) {\n\t\t\tid = 'nodes';\n\t\t}\n\n\t\tunwrapArg( args[0], id, true );\n\n\t// otherwise unwrap each arg\n\t} else {\n\t\tfor ( i = -1; ++i < args.length; ) {\n\t\t\t// if the method is plural (addChildren) and we're unwrapping\n\t\t\t// the last argument, we want to keep it in an array\n\t\t\tunwrapArg( args, i, i === args.length - 1 && isPlural );\n\t\t}\n\t}\n\n\treturn args;\n}\n\nCollection.proxy = function( paper ) {\n\tvar plumin = this;\n\n\tplumin.paper = paper;\n\n\tvar methodNames = {};\n\tObject.getOwnPropertyNames( paper.PaperScope.prototype )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype )\n\t\t.forEach(function(name) {\n\t\t\tplumin[name] = wrapConstructor( this[name], this[name].prototype );\n\n\t\t\t// we don't want to proxy methods of Collection\n\t\t\tif ( name === 'Collection' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tObject.getOwnPropertyNames( this[name].prototype )\n\t\t\t\t.forEach(function(_name) {\n\t\t\t\t\t// collect unique method names (first test avoids getters)\n\t\t\t\t\tif ( !Object.getOwnPropertyDescriptor(this, _name).get &&\n\t\t\t\t\t\t\ttypeof this[_name] === 'function' ) {\n\n\t\t\t\t\t\tmethodNames[_name] = true;\n\t\t\t\t\t}\n\n\t\t\t\t}, this[name].prototype);\n\n\t\t}, paper.PaperScope.prototype);\n\n\tObject.keys( paper.PaperScope.prototype.Path )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Path )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Path[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Path );\n\n\tObject.keys( paper.PaperScope.prototype.Shape )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Shape )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Shape[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Shape );\n\n\t// proxy the most commonly used method of paper\n\t// do it only after proxying constructors otherwise it's overwritten\n\tplumin.setup = paper.setup.bind(paper);\n\n\t// proxy all methods from every constructor\n\t// by default methods aren't chainable\n\tObject.keys( methodNames ).sort().forEach(function(name) {\n\t\t// please oh please, don't overwrite my constructor, I need it.\n\t\tif ( name === 'constructor' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(null, arguments),\n\t\t\t\ti,\n\t\t\t\tresult;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tresult = this[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// by default methods aren't chainable\n\t\t\t// return the last result\n\t\t\treturn result;\n\t\t};\n\t});\n\n\t\t// addChild( item ) and other methods with similar signatures\n\t\t// that we want to make chainable\n\tvar chain = [\n\t\t\t'set',\n\t\t\t'setX',\n\t\t\t'setY',\n\t\t\t'insertAbove',\n\t\t\t'insertBelow',\n\t\t\t'sendToBack',\n\t\t\t'bringToFront',\n\t\t\t'remove',\n\t\t\t'removeChildren',\n\t\t\t'reverseChildren',\n\n\t\t\t'translate',\n\t\t\t'rotate',\n\t\t\t'scale',\n\t\t\t'shear',\n\t\t\t'skew',\n\t\t\t'transform',\n\t\t\t'fitBounds',\n\t\t\t'emit',\n\n\t\t\t'activate',\n\n\t\t\t'setPixel',\n\n\t\t\t'smooth',\n\t\t\t'moveTo',\n\t\t\t'lineTo',\n\t\t\t'cubicCurveTo',\n\t\t\t'quadraticCurveTo',\n\t\t\t'curveTo',\n\t\t\t'arcTo',\n\t\t\t'closePath',\n\t\t\t'moveBy',\n\t\t\t'lineBy',\n\t\t\t'cubicCurveBy',\n\t\t\t'quadraticCurveBy',\n\t\t\t'curveBy',\n\t\t\t'arcBy',\n\n\t\t\t'removeSegments',\n\t\t\t'simplify',\n\t\t\t'reverse',\n\n\t\t\t// Rectangle\n\t\t\t'include',\n\t\t\t'expand',\n\t\t\t'scale',\n\t\t// ],\n\t\t// createAndChain = [\n\t\t\t'addChild',\n\t\t\t'insertChild',\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'replaceWith',\n\n\t\t\t'appendTop',\n\t\t\t'appendBottom',\n\n\t\t\t'add',\n\t\t\t'insert',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNode',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\n\t\t\t'addGlyph',\n\t\t\t'addGlyphs',\n\n\t\t\t'addContour',\n\t\t\t'insertContour',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addAnchor',\n\t\t\t'addAnchors',\n\t\t\t'addComponent',\n\t\t\t'addComponents',\n\n\t\t\t'addUnicode',\n\t\t\t'prepareOt',\n\t\t\t'addToFonts',\n\t\t\t'download'\n\t\t],\n\t\tplural = [\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\t\t\t'addGlyphs',\n\t\t\t'addAnchors',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addComponents'\n\t\t]/*,\n\t\tmathPoinFn = [\n\t\t\t'round',\n\t\t\t'ceil',\n\t\t\t'floor',\n\t\t\t'abs'\n\t\t],\n\t\tbooleanPathOp = [\n\t\t\t'unite',\n\t\t\t'intersect',\n\t\t\t'subtract',\n\t\t\t'exclude',\n\t\t\t'divide'\n\t\t]*/;\n\n\tchain.forEach(function(name) {\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(\n\t\t\t\t\t{ isPlural: plural.indexOf(name) !== -1 },\n\t\t\t\t\targuments\n\t\t\t\t),\n\t\t\t\ti;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tthis[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// make method chainable\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t// singular chainable method\n};\n\nmodule.exports = Collection;\n","var opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tGlyph = require('./Glyph.js');\n\nfunction Font( args ) {\n\tif ( !args ) {\n\t\targs = {};\n\t}\n\n\tif ( !args.styleName ) {\n\t\targs.styleName = 'Regular';\n\t}\n\n\tif ( !args.unitsPerEm ) {\n\t\targs.unitsPerEm = 1024;\n\t}\n\n\tthis.ot = new opentype.Font( args );\n\n\tthis.glyphs = [];\n\tthis.glyphMap = {};\n\tthis.charMap = {};\n\tthis.altMap = {};\n\tthis._subset = false;\n\n\tthis.addGlyph(new Glyph({\n\t\tname: '.notdef',\n\t\tunicode: 0\n\t}));\n\n\tif ( args && args.glyphs ) {\n\t\tthis.addGlyphs( args.glyphs );\n\t}\n\n\tif ( typeof window === 'object' && window.document ) {\n\t\t// work around https://bugzilla.mozilla.org/show_bug.cgi?id=1100005\n\t\t// by using fonts.delete in batch, every 1 second\n\t\tif ( document.fonts ) {\n\t\t\tthis.addedFonts = [];\n\n\t\t\tsetInterval(function() {\n\t\t\t\twhile ( this.addedFonts.length > 1 ) {\n\t\t\t\t\tdocument.fonts.delete( this.addedFonts.shift() );\n\t\t\t\t}\n\t\t\t}.bind(this), 1000);\n\n\t\t} else {\n\t\t\tdocument.head.appendChild(\n\t\t\t\tthis.styleElement = document.createElement('style')\n\t\t\t);\n\t\t\t// let's find the corresponding CSSStyleSheet\n\t\t\t// (would be much easier with Array#find)\n\t\t\tthis.styleSheet = document.styleSheets[\n\t\t\t\t[].map.call(document.styleSheets, function(ss) {\n\t\t\t\t\treturn ss.ownerNode;\n\t\t\t\t}).indexOf(this.styleElement)\n\t\t\t];\n\t\t}\n\t}\n}\n\nFont.prototype.addGlyph = function( glyph ) {\n\tthis.glyphs.push( glyph );\n\tthis.glyphMap[glyph.name] = glyph;\n\n\tif ( glyph.ot.unicode === undefined ) {\n\t\treturn glyph;\n\t}\n\n\t// build the default cmap\n\t// if multiple glyphs share the same unicode, use the glyph where unicode\n\t// and name are equal\n\tif ( !this.charMap[glyph.ot.unicode] ||\n\t\t\t( glyph.name.length === 1 &&\n\t\t\t\tglyph.name.charCodeAt(0) === glyph.ot.unicode ) ) {\n\n\t\tthis.charMap[glyph.ot.unicode] = glyph;\n\t}\n\n\t// build the alternates map\n\tif ( !this.altMap[glyph.ot.unicode] ) {\n\t\tthis.altMap[glyph.ot.unicode] = [];\n\t}\n\tthis.altMap[glyph.ot.unicode].push( glyph );\n\n\t// invalidate glyph subset cache\n\t// TODO: switch to immutable.js to avoid this maddness\n\tthis._lastSubset = undefined;\n\n\treturn glyph;\n};\n\nFont.prototype.addGlyphs = function( glyphs ) {\n\treturn glyphs.forEach(function( glyph ) {\n\t\tthis.addGlyph(glyph);\n\n\t}, this);\n};\n\nObject.defineProperty( Font.prototype, 'subset', {\n\tget: function() {\n\t\treturn this._subset;\n\t},\n\tset: function( set ) {\n\t\tthis._subset = set === false ?\n\t\t\tfalse : Font.normalizeSubset( set );\n\n\t\treturn this._subset;\n\t}\n});\n\nFont.prototype.getGlyphSubset = function( set ) {\n\tif ( set === true ) {\n\t\treturn this.glyphs;\n\t}\n\n\tset = set !== undefined ?\n\t\tFont.normalizeSubset( set ) :\n\t\tthis._subset;\n\n\t// reuse last subset if possible\n\t// TODO: implement caching using immutable.js\n\tif ( this._lastSubset &&\n\t\t\tthis._lastSubset[0] === ( this._subset || [] ).join() ) {\n\n\t\treturn this._lastSubset[1];\n\t}\n\n\t// memoize last subset\n\tthis._lastSubset = [\n\t\t( this._subset || [] ).join(),\n\t\tthis.glyphs.filter(function( glyph ) {\n\t\t\tif ( this._subset === false &&\n\t\t\t\t\t( glyph.ot.unicode !== undefined ||\n\t\t\t\t\t( glyph.ot.unicodes && glyph.ot.unicodes.length ) ) ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( this._subset &&\n\t\t\t\t\tthis._subset.indexOf( glyph.ot.unicode ) !== -1 ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// TODO: handle multiple unicodes\n\t\t\treturn false;\n\n\t\t}, this)\n\t];\n\n\treturn this._lastSubset[1];\n};\n\nFont.prototype.interpolate = function( font0, font1, coef, set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\tglyph.interpolate(\n\t\t\tfont0.glyphMap[glyph.name],\n\t\t\tfont1.glyphMap[glyph.name],\n\t\t\tcoef\n\t\t);\n\t});\n\n\t// TODO: evaluate if taking subsetting into account makes kerning\n\t// interpolation faster or slower.\n\tif ( this.ot.kerningPairs ) {\n\t\tfor ( var i in this.ot.kerningPairs ) {\n\t\t\tthis.ot.kerningPairs[i] =\n\t\t\t\tfont0.ot.kerningPairs[i] +\n\t\t\t\t( font1.ot.kerningPairs[i] - font0.ot.kerningPairs[i] ) * coef;\n\t\t}\n\t}\n\n\tthis.ot.ascender =\n\t\tfont0.ot.ascender + ( font1.ot.ascender - font0.ot.ascender ) * coef;\n\tthis.ot.descender =\n\t\tfont0.ot.descender + ( font1.ot.descender - font0.ot.descender ) * coef;\n\n\treturn this;\n};\n\nFont.prototype.updateSVGData = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateSVGData();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.updateOTCommands = function( set ) {\n\tthis.ot.glyphs = this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateOTCommands();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.importOT = function( otFont ) {\n\tthis.ot = otFont;\n\n\totFont.glyphs.forEach(function( otGlyph ) {\n\t\tvar glyph = new Glyph({\n\t\t\t\tname: otGlyph.name,\n\t\t\t\tunicode: otGlyph.unicode\n\t\t\t});\n\n\t\tthis.addGlyph( glyph );\n\t\tglyph.importOT( otGlyph );\n\n\t}, this);\n\n\treturn this;\n};\n\nif ( typeof window === 'object' && window.document ) {\n\n\tvar _URL = window.URL || window.webkitURL;\n\tFont.prototype.addToFonts = document.fonts ?\n\t\t// CSS font loading, lightning fast\n\t\tfunction( buffer ) {\n\t\t\tvar fontface = new window.FontFace(\n\t\t\t\tthis.ot.familyName,\n\t\t\t\tbuffer || this.ot.toBuffer()\n\t\t\t);\n\n\t\t\tdocument.fonts.add( fontface );\n\t\t\tthis.addedFonts.push( fontface );\n\n\t\t\treturn this;\n\t\t} :\n\t\tfunction( buffer ) {\n\t\t\tvar url = _URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t\t\t\t{ type: 'font/opentype' }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tif ( this.fontObjectURL ) {\n\t\t\t\t_URL.revokeObjectURL( this.fontObjectURL );\n\t\t\t\tthis.styleSheet.deleteRule(0);\n\t\t\t}\n\n\t\t\tthis.styleSheet.insertRule(\n\t\t\t\t'@font-face { font-family: \"' + this.ot.familyName + '\";' +\n\t\t\t\t'src: url(' + url + '); }',\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fontObjectURL = url;\n\n\t\t\treturn this;\n\t\t};\n\n\tFont.prototype.download = function( buffer ) {\n\t\tvar reader = new FileReader();\n\n\t\treader.onloadend = function() {\n\t\t\twindow.location = reader.result;\n\t\t};\n\n\t\treader.readAsDataURL(new Blob(\n\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t{ type: 'font/opentype' }\n\t\t));\n\n\t\treturn this;\n\t};\n\n}\n\nFont.normalizeSubset = function( set ) {\n\treturn ( typeof set === 'string' ?\n\t\t\tset.split('').map(function(e) {\n\t\t\t\treturn e.charCodeAt(0);\n\t\t\t}) :\n\t\t\tset\n\t\t)\n\t\t.filter(function(e, i, arr) {\n\t\t\treturn arr.lastIndexOf(e) === i;\n\t\t})\n\t\t.sort();\n};\n\nmodule.exports = Font;\n","var opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js');\n\nfunction Glyph( args ) {\n\tpaper.CompoundPath.prototype.constructor.apply( this );\n\n\tif ( args && typeof args.unicode === 'string' ) {\n\t\targs.unicode = args.unicode.charCodeAt(0);\n\t}\n\n\tthis.ot = new opentype.Glyph( args );\n\tthis.ot.path = new opentype.Path();\n\n\tthis.name = args.name;\n\t// workaround opentype 'unicode === 0' bug\n\tthis.ot.unicode = args.unicode;\n\n\t//this.contours = ( args && args.contours ) || [];\n\tthis.anchors = ( args && args.anchors ) || [];\n\tthis.components = ( args && args.components ) || [];\n\tthis.parentAnchors = ( args && args.parentAnchors ) || [];\n\n\t// default fill color needed to display the glyph in a canvas\n\tthis.fillColor = new paper.Color(0, 0, 0);\n\t// but each individual glyph must be explicitely made visible\n\tthis.visible = false;\n}\n\nGlyph.prototype = Object.create(paper.CompoundPath.prototype);\nGlyph.prototype.constructor = Glyph;\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'unicode', {\n\tset: function( code ) {\n\t\tthis.ot.unicode = typeof code === 'string' ?\n\t\t\tcode.charCodeAt(0) :\n\t\t\tcode;\n\t},\n\tget: function() {\n\t\treturn this.ot.unicode;\n\t}\n});\n\n// proxy *Child/*Children methods to *Contour/*Contours\n// This has the added benefit of preventing CompoundPath#insertChildren\n// from arbitrarily changing the direction of paths\nObject.getOwnPropertyNames( paper.Item.prototype )\n\t.forEach(function(name) {\n\t\t// exclude getters and non-methods\n\t\tif ( Object.getOwnPropertyDescriptor(this, name).get ||\n\t\t\t\ttypeof this[name] !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( name.indexOf('Children') !== -1 ) {\n\t\t\tthis[name.replace('Children', 'Contours')] = this[name];\n\n\t\t} else if ( name.indexOf('Child') !== -1 ) {\n\t\t\tthis[name.replace('Child', 'Contour')] = this[name];\n\t\t}\n\n\t}, paper.Item.prototype);\n\n// Fix two problems with CompoundPath#insertChildren:\n// - it arbitrarily changes the direction of paths\n// - it seems that it doesn't handle CompoundPath arguments\nGlyph.prototype.insertChildren = function(index, items, _preserve) {\n\tif ( Array.isArray( items ) ) {\n\t\t// flatten items to handle CompoundPath children\n\t\titems = [].concat.apply([], items.map(function(item) {\n\t\t\treturn item instanceof paper.Path ? item : item.children;\n\t\t}));\n\t}\n\n\treturn paper.Item.prototype.insertChildren.call(\n\t\tthis, index, items, _preserve, paper.Path\n\t);\n};\n\n// proxy .children to .contours\nObject.defineProperty(\n\tGlyph.prototype,\n\t'contours',\n\tObject.getOwnPropertyDescriptor( paper.Item.prototype, 'children' )\n);\n\nGlyph.prototype.addComponent = function( item ) {\n\tthis.components.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addComponents = function( components ) {\n\treturn components.forEach(function(component) {\n\t\tthis.addComponent(component);\n\t}, this);\n};\n\nGlyph.prototype.addAnchor = function( item ) {\n\tthis.anchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addAnchors = function( anchors ) {\n\treturn anchors.forEach(function(anchor) {\n\t\tthis.addAnchor(anchor);\n\t}, this);\n};\n\nGlyph.prototype.addParentAnchor = function( item ) {\n\tthis.parentAnchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addUnicode = function( code ) {\n\tthis.ot.addUnicode( code );\n\n\treturn this;\n};\n\nGlyph.prototype.interpolate = function( glyph0, glyph1, coef ) {\n\tfor (var i = 0, l = this.contours.length; i < l; i++) {\n\t\t// The number of children should be the same everywhere,\n\t\t// but we're going to try our best anyway\n\t\tif ( !glyph0.contours[i] || !glyph1.contours[i] ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.contours[i].interpolate(\n\t\t\tglyph0.contours[i],\n\t\t\tglyph1.contours[i],\n\t\t\tcoef\n\t\t);\n\n\t\t/* eslint-disable no-loop-func */\n\t\tthis.components.forEach(function(component, j) {\n\t\t\tcomponent.interpolate(\n\t\t\t\tglyph0.components[j], glyph1.components[j], coef\n\t\t\t);\n\t\t});\n\t\t/* eslint-enable no-loop-func */\n\n\t\tthis.ot.advanceWidth =\n\t\t\tglyph0.ot.advanceWidth +\n\t\t\t( glyph1.ot.advanceWidth - glyph0.ot.advanceWidth ) * coef;\n\t\tthis.ot.leftSideBearing =\n\t\t\tglyph0.ot.leftSideBearing +\n\t\t\t( glyph1.ot.leftSideBearing - glyph0.ot.leftSideBearing ) * coef;\n\t\tthis.ot.xMax =\n\t\t\tglyph0.ot.xMax + ( glyph1.ot.xMax - glyph0.ot.xMax ) * coef;\n\t\tthis.ot.xMin =\n\t\t\tglyph0.ot.xMin + ( glyph1.ot.xMin - glyph0.ot.xMin ) * coef;\n\t\tthis.ot.yMax =\n\t\t\tglyph0.ot.yMax + ( glyph1.ot.yMax - glyph0.ot.yMax ) * coef;\n\t\tthis.ot.yMin =\n\t\t\tglyph0.ot.yMin + ( glyph1.ot.yMin - glyph0.ot.yMin ) * coef;\n\t}\n\n\treturn this;\n};\n\nGlyph.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.contours.forEach(function( contour ) {\n\t\tcontour.updateSVGData( path );\n\t}, this);\n\n\tthis.components.forEach(function( component ) {\n\t\tcomponent.updateSVGData( path );\n\t});\n\n\treturn this.svgData;\n};\n\nGlyph.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.contours.forEach(function( contour ) {\n\t\tcontour.updateOTCommands( path );\n\t}, this);\n\n\tthis.components.forEach(function( component ) {\n\t\tcomponent.updateOTCommands( path );\n\t});\n\n\treturn this.ot;\n};\n\nGlyph.prototype.importOT = function( otGlyph ) {\n\tvar current;\n\tthis.ot = otGlyph;\n\n\tif ( !otGlyph.path || !otGlyph.path.commands ) {\n\t\treturn this;\n\t}\n\n\tthis.ot.path.commands.forEach(function(command) {\n\t\tswitch ( command.type ) {\n\t\t\tcase 'M':\n\t\t\t\tcurrent = new paper.Path();\n\t\t\t\tthis.addContour( current );\n\n\t\t\t\tcurrent.moveTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tcurrent.lineTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tcurrent.cubicCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\t[ command.x2, command.y2 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcurrent.quadraticCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t// When the glyph has no contour,\n\t\t\t\t// they contain a single Z command in\n\t\t\t\t// opentype.js.\n\t\t\t\t// TODO: see how we should handle that\n\t\t\t\tif ( current ) {\n\t\t\t\t\tcurrent.closePath();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}, this);\n\n\treturn this;\n};\n\nmodule.exports = Glyph;\n","var paper = require('../node_modules/paper/dist/paper-core.js');\n\nObject.defineProperty( paper.Segment.prototype, 'x', {\n\tget: function() {\n\t\treturn this.point.x;\n\t},\n\tset: function( value ) {\n\t\tthis.point.x = value;\n\t}\n});\n\nObject.defineProperty( paper.Segment.prototype, 'y', {\n\tget: function() {\n\t\treturn this.point.y;\n\t},\n\tset: function( value ) {\n\t\tthis.point.y = value;\n\t}\n});\n\nmodule.exports = paper.Segment;\n","/* Extend the Path prototype to add OpenType conversion\n * and alias *segments methods and properties to *nodes\n */\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nvar proto = paper.PaperScope.prototype.Path.prototype;\n\n// alias *Segments methods to *Nodes equivalents\n[ 'add', 'insert', 'remove' ].forEach(function(name) {\n\tproto[name + 'Nodes'] =\n\t\tproto[name + 'Segments'];\n});\n\n// alias .segments to .nodes\nObject.defineProperties(proto, {\n\tnodes: Object.getOwnPropertyDescriptor( proto, 'segments' ),\n\tfirstNode: Object.getOwnPropertyDescriptor( proto, 'firstSegment' ),\n\tlastNode: Object.getOwnPropertyDescriptor( proto, 'lastSegment' )\n});\n\nproto._updateData = function( data, pushSimple, pushBezier ) {\n\tif ( this.visible === false ) {\n\t\treturn data;\n\t}\n\n\tpushSimple(\n\t\t'M',\n\t\tMath.round( this.curves[0].point1.x ) || 0,\n\t\tMath.round( this.curves[0].point1.y ) || 0\n\t);\n\n\tthis.curves.forEach(function( curve ) {\n\t\tif ( curve.isLinear() ) {\n\t\t\tpushSimple(\n\t\t\t\t'L',\n\t\t\t\tMath.round( curve.point2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y ) || 0\n\t\t\t);\n\n\t\t} else {\n\t\t\tpushBezier(\n\t\t\t\t'C',\n\t\t\t\tMath.round( curve.point1.x + curve.handle1.x ) || 0,\n\t\t\t\tMath.round( curve.point1.y + curve.handle1.y ) || 0,\n\t\t\t\tMath.round( curve.point2.x + curve.handle2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y + curve.handle2.y ) || 0,\n\t\t\t\tMath.round( curve.point2.x ) || 0,\n\t\t\t\tMath.round( curve.point2.y ) || 0\n\t\t\t);\n\t\t}\n\t});\n\n\tif ( this.closed ) {\n\t\tpushSimple('Z');\n\t}\n\n\treturn data;\n};\n\nproto.updateOTCommands = function( data ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tfunction pushSimple() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx: arguments[1],\n\t\t\t\ty: arguments[2]\n\t\t\t});\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx1: arguments[1],\n\t\t\t\ty1: arguments[2],\n\t\t\t\tx2: arguments[3],\n\t\t\t\ty2: arguments[4],\n\t\t\t\tx: arguments[5],\n\t\t\t\ty: arguments[6]\n\t\t\t});\n\t\t}\n\t);\n};\n\nproto.updateSVGData = function( data ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tfunction pushSimple() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t}\n\t);\n};\n\nmodule.exports = paper.Path;\n","var opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tFont = require('./Font.js'),\n\tGlyph = require('./Glyph.js'),\n\tPath = require('./Path.js'),\n\tNode = require('./Node.js'),\n\tCollection = require('./Collection.js');\n\npaper.PaperScope.prototype.Font = Font;\npaper.PaperScope.prototype.Glyph = Glyph;\npaper.PaperScope.prototype.Path = Path;\npaper.PaperScope.prototype.Node = Node;\npaper.PaperScope.prototype.Collection = Collection;\n\nfunction plumin( arg ) {\n\tif ( arguments.length === 1 && arg instanceof Collection ) {\n\t\treturn arg;\n\t}\n\n\tvar c = Object.create( Collection.prototype );\n\tCollection.apply( c, arguments );\n\treturn c;\n}\n\nplumin.opentype = opentype;\n\nplumin.proxy = Collection.proxy.bind(plumin);\nplumin.proxy(paper);\n\nmodule.exports = plumin;\n"]}